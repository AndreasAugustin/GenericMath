<?xml version="1.0" encoding="utf-8"?>
<reflection xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:ddue="urn:ddue-extensions">
  <assemblies>
    <assembly name="GenericMath.Console">
      <assemblydata version="1.0.5398.20653" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </assembly>
    <assembly name="GenricMath.Parser">
      <assemblydata version="1.0.5398.20653" culture="" key="" hash="SHA1" />
    </assembly>
    <assembly name="Math.Base">
      <assemblydata version="1.0.5398.20652" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Math.LinearAlgebra">
      <assemblydata version="1.0.5398.20652" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </assembly>
    <assembly name="GenericMath.Parser.Tests">
      <assemblydata version="0.0.0.0" culture="" key="" hash="SHA1" />
    </assembly>
    <assembly name="Math.Analyisis.Tests">
      <assemblydata version="0.0.0.0" culture="" key="" hash="SHA1" />
    </assembly>
    <assembly name="Math.Base.Tests">
      <assemblydata version="0.0.0.0" culture="" key="" hash="SHA1" />
    </assembly>
    <assembly name="Math.LinearAlgebra.Tests">
      <assemblydata version="0.0.0.0" culture="" key="" hash="SHA1" />
    </assembly>
  </assemblies>
  <apis>
    <api id="N:GenericMath.Console">
      <topicdata group="api" />
      <apidata name="GenericMath.Console" group="namespace" />
      <elements>
        <element api="T:GenericMath.Console.ConsoleLogger" />
        <element api="T:GenericMath.Console.DocToMarkdown" />
      </elements>
      <file name="N_GenericMath_Console" />
    </api>
    <api id="T:GenericMath.Console.ConsoleLogger">
      <topicdata group="api" />
      <apidata name="ConsoleLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:GenericMath.Console.ConsoleLogger.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)">
            <apidata name="Write" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="o">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:GenericMath.Console.ConsoleLogger.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
            <apidata name="Write" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="category">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
            <apidata name="Write" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="o">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="category">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:GenericMath.Console.ConsoleLogger.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
            <apidata name="WriteLine" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="o">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:GenericMath.Console.ConsoleLogger.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
            <apidata name="WriteLine" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="category">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
            <apidata name="WriteLine" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="o">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="category">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:GenericMath.Console.ConsoleLogger.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Diagnostics.TraceListener.Close">
          <apidata name="Close" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="M:System.Diagnostics.TraceListener.Flush">
          <apidata name="Flush" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="Overload:GenericMath.Console.ConsoleLogger.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)">
            <apidata name="Fail" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
            <apidata name="Fail" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="detailMessage">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <apidata name="GetSupportedAttributes" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="M:System.Diagnostics.TraceListener.WriteIndent">
          <apidata name="WriteIndent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="Overload:GenericMath.Console.ConsoleLogger.TraceData">
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <apidata name="TraceData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="eventCache">
                <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
              </parameter>
              <parameter name="source">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="eventType">
                <type api="T:System.Diagnostics.TraceEventType" ref="false" />
              </parameter>
              <parameter name="id">
                <type api="T:System.Int32" ref="false" />
              </parameter>
              <parameter name="data">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <apidata name="TraceData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="eventCache">
                <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
              </parameter>
              <parameter name="source">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="eventType">
                <type api="T:System.Diagnostics.TraceEventType" ref="false" />
              </parameter>
              <parameter name="id">
                <type api="T:System.Int32" ref="false" />
              </parameter>
              <parameter name="data" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:GenericMath.Console.ConsoleLogger.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <apidata name="TraceEvent" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="eventCache">
                <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
              </parameter>
              <parameter name="source">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="eventType">
                <type api="T:System.Diagnostics.TraceEventType" ref="false" />
              </parameter>
              <parameter name="id">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <apidata name="TraceEvent" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="eventCache">
                <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
              </parameter>
              <parameter name="source">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="eventType">
                <type api="T:System.Diagnostics.TraceEventType" ref="false" />
              </parameter>
              <parameter name="id">
                <type api="T:System.Int32" ref="false" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <apidata name="TraceEvent" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="eventCache">
                <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
              </parameter>
              <parameter name="source">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="eventType">
                <type api="T:System.Diagnostics.TraceEventType" ref="false" />
              </parameter>
              <parameter name="id">
                <type api="T:System.Int32" ref="false" />
              </parameter>
              <parameter name="format">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <apidata name="TraceTransfer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="eventCache">
              <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
            </parameter>
            <parameter name="source">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="id">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="relatedActivityId">
              <type api="T:System.Guid" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.Attributes">
          <apidata name="Attributes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Attributes" />
          <returns>
            <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <apidata name="IsThreadSafe" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsThreadSafe" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.IndentLevel">
          <apidata name="IndentLevel" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IndentLevel" />
          <setter name="set_IndentLevel" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.IndentSize">
          <apidata name="IndentSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IndentSize" />
          <setter name="set_IndentSize" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.Filter">
          <apidata name="Filter" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Filter" />
          <setter name="set_Filter" />
          <returns>
            <type api="T:System.Diagnostics.TraceFilter" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.NeedIndent">
          <apidata name="NeedIndent" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_NeedIndent" />
          <setter name="set_NeedIndent" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <apidata name="TraceOutputOptions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TraceOutputOptions" />
          <setter name="set_TraceOutputOptions" />
          <returns>
            <type api="T:System.Diagnostics.TraceOptions" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="Overload:GenericMath.Console.ConsoleLogger.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone">
            <apidata name="MemberwiseClone" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
            <apidata name="MemberwiseClone" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="cloneIdentity">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.MarshalByRefObject" ref="true" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.MarshalByRefObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenericMath.Console.ConsoleLogger.#ctor" />
      </elements>
      <containers>
        <library assembly="GenericMath.Console" module="GenericMath.Console" kind="ConsoleApplication">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenericMath.Console" />
      </containers>
      <file name="T_GenericMath_Console_ConsoleLogger" />
    </api>
    <api id="Methods.T:GenericMath.Console.ConsoleLogger">
      <topicdata name="ConsoleLogger" group="list" subgroup="Methods" typeTopicId="T:GenericMath.Console.ConsoleLogger" />
      <apidata name="ConsoleLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:GenericMath.Console.ConsoleLogger.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)">
            <apidata name="Write" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="o">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:GenericMath.Console.ConsoleLogger.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
            <apidata name="Write" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="category">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
            <apidata name="Write" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="o">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="category">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:GenericMath.Console.ConsoleLogger.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
            <apidata name="WriteLine" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="o">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:GenericMath.Console.ConsoleLogger.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
            <apidata name="WriteLine" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="category">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
            <apidata name="WriteLine" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="o">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="category">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:GenericMath.Console.ConsoleLogger.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Diagnostics.TraceListener.Close">
          <apidata name="Close" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="M:System.Diagnostics.TraceListener.Flush">
          <apidata name="Flush" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="Overload:GenericMath.Console.ConsoleLogger.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)">
            <apidata name="Fail" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
            <apidata name="Fail" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="detailMessage">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <apidata name="GetSupportedAttributes" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="M:System.Diagnostics.TraceListener.WriteIndent">
          <apidata name="WriteIndent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="Overload:GenericMath.Console.ConsoleLogger.TraceData">
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <apidata name="TraceData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="eventCache">
                <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
              </parameter>
              <parameter name="source">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="eventType">
                <type api="T:System.Diagnostics.TraceEventType" ref="false" />
              </parameter>
              <parameter name="id">
                <type api="T:System.Int32" ref="false" />
              </parameter>
              <parameter name="data">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <apidata name="TraceData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="eventCache">
                <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
              </parameter>
              <parameter name="source">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="eventType">
                <type api="T:System.Diagnostics.TraceEventType" ref="false" />
              </parameter>
              <parameter name="id">
                <type api="T:System.Int32" ref="false" />
              </parameter>
              <parameter name="data" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:GenericMath.Console.ConsoleLogger.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <apidata name="TraceEvent" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="eventCache">
                <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
              </parameter>
              <parameter name="source">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="eventType">
                <type api="T:System.Diagnostics.TraceEventType" ref="false" />
              </parameter>
              <parameter name="id">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <apidata name="TraceEvent" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="eventCache">
                <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
              </parameter>
              <parameter name="source">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="eventType">
                <type api="T:System.Diagnostics.TraceEventType" ref="false" />
              </parameter>
              <parameter name="id">
                <type api="T:System.Int32" ref="false" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <apidata name="TraceEvent" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="eventCache">
                <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
              </parameter>
              <parameter name="source">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="eventType">
                <type api="T:System.Diagnostics.TraceEventType" ref="false" />
              </parameter>
              <parameter name="id">
                <type api="T:System.Int32" ref="false" />
              </parameter>
              <parameter name="format">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Diagnostics" />
              <type api="T:System.Diagnostics.TraceListener" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <apidata name="TraceTransfer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="eventCache">
              <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
            </parameter>
            <parameter name="source">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="id">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="relatedActivityId">
              <type api="T:System.Guid" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="Overload:GenericMath.Console.ConsoleLogger.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone">
            <apidata name="MemberwiseClone" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
            <apidata name="MemberwiseClone" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="cloneIdentity">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.MarshalByRefObject" ref="true" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.MarshalByRefObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="GenericMath.Console" module="GenericMath.Console" kind="ConsoleApplication">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenericMath.Console" />
        <type api="T:GenericMath.Console.ConsoleLogger" />
      </containers>
      <file name="Methods_T_GenericMath_Console_ConsoleLogger" />
    </api>
    <api id="Properties.T:GenericMath.Console.ConsoleLogger">
      <topicdata name="ConsoleLogger" group="list" subgroup="Properties" typeTopicId="T:GenericMath.Console.ConsoleLogger" />
      <apidata name="ConsoleLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.TraceListener.Attributes">
          <apidata name="Attributes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Attributes" />
          <returns>
            <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <apidata name="IsThreadSafe" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsThreadSafe" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.IndentLevel">
          <apidata name="IndentLevel" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IndentLevel" />
          <setter name="set_IndentLevel" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.IndentSize">
          <apidata name="IndentSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IndentSize" />
          <setter name="set_IndentSize" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.Filter">
          <apidata name="Filter" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Filter" />
          <setter name="set_Filter" />
          <returns>
            <type api="T:System.Diagnostics.TraceFilter" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.NeedIndent">
          <apidata name="NeedIndent" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_NeedIndent" />
          <setter name="set_NeedIndent" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <apidata name="TraceOutputOptions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TraceOutputOptions" />
          <setter name="set_TraceOutputOptions" />
          <returns>
            <type api="T:System.Diagnostics.TraceOptions" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="GenericMath.Console" module="GenericMath.Console" kind="ConsoleApplication">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenericMath.Console" />
        <type api="T:GenericMath.Console.ConsoleLogger" />
      </containers>
      <file name="Properties_T_GenericMath_Console_ConsoleLogger" />
    </api>
    <api id="Overload:GenericMath.Console.ConsoleLogger.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object)">
          <apidata name="Write" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="o">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="M:GenericMath.Console.ConsoleLogger.Write(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
          <apidata name="Write" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="category">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
          <apidata name="Write" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="o">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="category">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="GenericMath.Console" module="GenericMath.Console" kind="ConsoleApplication">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenericMath.Console" />
        <type api="T:GenericMath.Console.ConsoleLogger" ref="true" />
      </containers>
      <file name="Overload_GenericMath_Console_ConsoleLogger_Write" />
    </api>
    <api id="Overload:GenericMath.Console.ConsoleLogger.WriteLine">
      <topicdata name="WriteLine" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
          <apidata name="WriteLine" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="o">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="M:GenericMath.Console.ConsoleLogger.WriteLine(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
          <apidata name="WriteLine" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="category">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
          <apidata name="WriteLine" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="o">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="category">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Diagnostics" />
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="GenericMath.Console" module="GenericMath.Console" kind="ConsoleApplication">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenericMath.Console" />
        <type api="T:GenericMath.Console.ConsoleLogger" ref="true" />
      </containers>
      <file name="Overload_GenericMath_Console_ConsoleLogger_WriteLine" />
    </api>
    <api id="M:GenericMath.Console.ConsoleLogger.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="GenericMath.Console" module="GenericMath.Console" kind="ConsoleApplication">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenericMath.Console" />
        <type api="T:GenericMath.Console.ConsoleLogger" ref="true" />
      </containers>
      <file name="M_GenericMath_Console_ConsoleLogger__ctor" />
    </api>
    <api id="M:GenericMath.Console.ConsoleLogger.Write(System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:GenericMath.Console.ConsoleLogger.Write" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Write(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="GenericMath.Console" module="GenericMath.Console" kind="ConsoleApplication">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenericMath.Console" />
        <type api="T:GenericMath.Console.ConsoleLogger" ref="true" />
      </containers>
      <file name="M_GenericMath_Console_ConsoleLogger_Write" />
    </api>
    <api id="M:GenericMath.Console.ConsoleLogger.WriteLine(System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:GenericMath.Console.ConsoleLogger.WriteLine" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="GenericMath.Console" module="GenericMath.Console" kind="ConsoleApplication">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenericMath.Console" />
        <type api="T:GenericMath.Console.ConsoleLogger" ref="true" />
      </containers>
      <file name="M_GenericMath_Console_ConsoleLogger_WriteLine" />
    </api>
    <api id="T:GenericMath.Console.DocToMarkdown">
      <topicdata group="api" />
      <apidata name="DocToMarkdown" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="GenericMath.Console" module="GenericMath.Console" kind="ConsoleApplication">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenericMath.Console" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_GenericMath_Console_DocToMarkdown" />
    </api>
    <api id="N:GenericMath.Parser.Tests">
      <topicdata group="api" />
      <apidata name="GenericMath.Parser.Tests" group="namespace" />
      <elements>
        <element api="T:GenericMath.Parser.Tests.DirectSumParserTest" />
        <element api="T:GenericMath.Parser.Tests.IntervalParserTest" />
        <element api="T:GenericMath.Parser.Tests.MatrixParserTest" />
        <element api="T:GenericMath.Parser.Tests.PolynomialParserTest" />
      </elements>
      <file name="N_GenericMath_Parser_Tests" />
    </api>
    <api id="T:GenericMath.Parser.Tests.DirectSumParserTest">
      <topicdata group="api" />
      <apidata name="DirectSumParserTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenericMath.Parser.Tests.DirectSumParserTest.#ctor" />
        <element api="M:GenericMath.Parser.Tests.DirectSumParserTest.Parse_ValidParse_EqualsExpected(System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
      </containers>
      <file name="T_GenericMath_Parser_Tests_DirectSumParserTest" />
    </api>
    <api id="Methods.T:GenericMath.Parser.Tests.DirectSumParserTest">
      <topicdata name="DirectSumParserTest" group="list" subgroup="Methods" typeTopicId="T:GenericMath.Parser.Tests.DirectSumParserTest" />
      <apidata name="DirectSumParserTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenericMath.Parser.Tests.DirectSumParserTest.Parse_ValidParse_EqualsExpected(System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.DirectSumParserTest" />
      </containers>
      <file name="Methods_T_GenericMath_Parser_Tests_DirectSumParserTest" />
    </api>
    <api id="M:GenericMath.Parser.Tests.DirectSumParserTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.DirectSumParserTest" ref="true" />
      </containers>
      <file name="M_GenericMath_Parser_Tests_DirectSumParserTest__ctor" />
    </api>
    <api id="M:GenericMath.Parser.Tests.DirectSumParserTest.Parse_ValidParse_EqualsExpected(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Parse_ValidParse_EqualsExpected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringInput">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.DirectSumParserTest" ref="true" />
      </containers>
      <file name="M_GenericMath_Parser_Tests_DirectSumParserTest_Parse_ValidParse_EqualsExpected" />
    </api>
    <api id="T:GenericMath.Parser.Tests.IntervalParserTest">
      <topicdata group="api" />
      <apidata name="IntervalParserTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenericMath.Parser.Tests.IntervalParserTest.#ctor" />
        <element api="M:GenericMath.Parser.Tests.IntervalParserTest.Parse_ValidParse_MinAndMaxEqualsExpcted(System.String,System.Int32,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
      </containers>
      <file name="T_GenericMath_Parser_Tests_IntervalParserTest" />
    </api>
    <api id="Methods.T:GenericMath.Parser.Tests.IntervalParserTest">
      <topicdata name="IntervalParserTest" group="list" subgroup="Methods" typeTopicId="T:GenericMath.Parser.Tests.IntervalParserTest" />
      <apidata name="IntervalParserTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenericMath.Parser.Tests.IntervalParserTest.Parse_ValidParse_MinAndMaxEqualsExpcted(System.String,System.Int32,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.IntervalParserTest" />
      </containers>
      <file name="Methods_T_GenericMath_Parser_Tests_IntervalParserTest" />
    </api>
    <api id="M:GenericMath.Parser.Tests.IntervalParserTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.IntervalParserTest" ref="true" />
      </containers>
      <file name="M_GenericMath_Parser_Tests_IntervalParserTest__ctor" />
    </api>
    <api id="M:GenericMath.Parser.Tests.IntervalParserTest.Parse_ValidParse_MinAndMaxEqualsExpcted(System.String,System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Parse_ValidParse_MinAndMaxEqualsExpcted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="minElement">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxElement">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="elementOfInterval">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.IntervalParserTest" ref="true" />
      </containers>
      <file name="M_GenericMath_Parser_Tests_IntervalParserTest_Parse_ValidParse_MinAndMaxEqualsExpcted" />
    </api>
    <api id="T:GenericMath.Parser.Tests.MatrixParserTest">
      <topicdata group="api" />
      <apidata name="MatrixParserTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenericMath.Parser.Tests.MatrixParserTest.#ctor" />
        <element api="M:GenericMath.Parser.Tests.MatrixParserTest.Parse_ValidParse_ElementEqualsExpected(System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
      </containers>
      <file name="T_GenericMath_Parser_Tests_MatrixParserTest" />
    </api>
    <api id="Methods.T:GenericMath.Parser.Tests.MatrixParserTest">
      <topicdata name="MatrixParserTest" group="list" subgroup="Methods" typeTopicId="T:GenericMath.Parser.Tests.MatrixParserTest" />
      <apidata name="MatrixParserTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenericMath.Parser.Tests.MatrixParserTest.Parse_ValidParse_ElementEqualsExpected(System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.MatrixParserTest" />
      </containers>
      <file name="Methods_T_GenericMath_Parser_Tests_MatrixParserTest" />
    </api>
    <api id="M:GenericMath.Parser.Tests.MatrixParserTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.MatrixParserTest" ref="true" />
      </containers>
      <file name="M_GenericMath_Parser_Tests_MatrixParserTest__ctor" />
    </api>
    <api id="M:GenericMath.Parser.Tests.MatrixParserTest.Parse_ValidParse_ElementEqualsExpected(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Parse_ValidParse_ElementEqualsExpected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.MatrixParserTest" ref="true" />
      </containers>
      <file name="M_GenericMath_Parser_Tests_MatrixParserTest_Parse_ValidParse_ElementEqualsExpected" />
    </api>
    <api id="T:GenericMath.Parser.Tests.PolynomialParserTest">
      <topicdata group="api" />
      <apidata name="PolynomialParserTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenericMath.Parser.Tests.PolynomialParserTest.#ctor" />
        <element api="M:GenericMath.Parser.Tests.PolynomialParserTest.Parse_ValidParse_ElementEqualsExpected(System.String,System.Int32)" />
        <element api="P:GenericMath.Parser.Tests.PolynomialParserTest.Parser" />
      </elements>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
      </containers>
      <file name="T_GenericMath_Parser_Tests_PolynomialParserTest" />
    </api>
    <api id="Methods.T:GenericMath.Parser.Tests.PolynomialParserTest">
      <topicdata name="PolynomialParserTest" group="list" subgroup="Methods" typeTopicId="T:GenericMath.Parser.Tests.PolynomialParserTest" />
      <apidata name="PolynomialParserTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenericMath.Parser.Tests.PolynomialParserTest.Parse_ValidParse_ElementEqualsExpected(System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.PolynomialParserTest" />
      </containers>
      <file name="Methods_T_GenericMath_Parser_Tests_PolynomialParserTest" />
    </api>
    <api id="Properties.T:GenericMath.Parser.Tests.PolynomialParserTest">
      <topicdata name="PolynomialParserTest" group="list" subgroup="Properties" typeTopicId="T:GenericMath.Parser.Tests.PolynomialParserTest" />
      <apidata name="PolynomialParserTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:GenericMath.Parser.Tests.PolynomialParserTest.Parser" />
      </elements>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.PolynomialParserTest" />
      </containers>
      <file name="Properties_T_GenericMath_Parser_Tests_PolynomialParserTest" />
    </api>
    <api id="M:GenericMath.Parser.Tests.PolynomialParserTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.PolynomialParserTest" ref="true" />
      </containers>
      <file name="M_GenericMath_Parser_Tests_PolynomialParserTest__ctor" />
    </api>
    <api id="M:GenericMath.Parser.Tests.PolynomialParserTest.Parse_ValidParse_ElementEqualsExpected(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Parse_ValidParse_ElementEqualsExpected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.PolynomialParserTest" ref="true" />
      </containers>
      <file name="M_GenericMath_Parser_Tests_PolynomialParserTest_Parse_ValidParse_ElementEqualsExpected" />
    </api>
    <api id="P:GenericMath.Parser.Tests.PolynomialParserTest.Parser">
      <topicdata group="api" />
      <apidata name="Parser" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parser" />
      <returns>
        <type api="T:GenricMath.Parser.PolynomialParser`3" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
            <type api="T:Math.Base.Int32Monoid" ref="true" />
            <type api="T:GenricMath.Parser.Int32Parser" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="GenericMath.Parser.Tests" module="GenericMath.Parser.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:GenericMath.Parser.Tests" />
        <type api="T:GenericMath.Parser.Tests.PolynomialParserTest" ref="true" />
      </containers>
      <file name="P_GenericMath_Parser_Tests_PolynomialParserTest_Parser" />
    </api>
    <api id="N:GenricMath.Parser">
      <topicdata group="api" />
      <apidata name="GenricMath.Parser" group="namespace" />
      <elements>
        <element api="T:GenricMath.Parser.IParser`1" />
        <element api="T:GenricMath.Parser.DirectSumParser`3" />
        <element api="T:GenricMath.Parser.ITypeParser`1" />
        <element api="T:GenricMath.Parser.Int32Parser" />
        <element api="T:GenricMath.Parser.IntervalParser`3" />
        <element api="T:GenricMath.Parser.MatrixParser`3" />
        <element api="T:GenricMath.Parser.PolynomialParser`3" />
      </elements>
      <file name="N_GenricMath_Parser" />
    </api>
    <api id="T:GenricMath.Parser.DirectSumParser`3">
      <topicdata group="api" />
      <apidata name="DirectSumParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.DirectSumParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TTypeParser">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:GenricMath.Parser.ITypeParser`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.DirectSumParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:GenricMath.Parser.IParser`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:GenricMath.Parser.DirectSumParser`3" />
                <template name="TStruct" index="1" api="T:GenricMath.Parser.DirectSumParser`3" />
              </specialization>
            </type>
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenricMath.Parser.DirectSumParser`3.#ctor" />
        <element api="M:GenricMath.Parser.DirectSumParser`3.Parse(System.String)" />
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
      </containers>
      <file name="T_GenricMath_Parser_DirectSumParser_3" />
    </api>
    <api id="Methods.T:GenricMath.Parser.DirectSumParser`3">
      <topicdata name="DirectSumParser" group="list" subgroup="Methods" typeTopicId="T:GenricMath.Parser.DirectSumParser`3" />
      <apidata name="DirectSumParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.DirectSumParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TTypeParser">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:GenricMath.Parser.ITypeParser`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.DirectSumParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenricMath.Parser.DirectSumParser`3.Parse(System.String)" />
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.DirectSumParser`3" />
      </containers>
      <file name="Methods_T_GenricMath_Parser_DirectSumParser_3" />
    </api>
    <api id="M:GenricMath.Parser.DirectSumParser`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.DirectSumParser`3" ref="true" />
      </containers>
      <file name="M_GenricMath_Parser_DirectSumParser_3__ctor" />
    </api>
    <api id="M:GenricMath.Parser.DirectSumParser`3.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="inputString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:GenricMath.Parser.DirectSumParser`3" />
            <template name="TStruct" index="1" api="T:GenricMath.Parser.DirectSumParser`3" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:GenricMath.Parser.IParser`1.Parse(System.String)">
          <type api="T:GenricMath.Parser.IParser`1" ref="true">
            <specialization>
              <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.DirectSumParser`3" />
                  <template name="TStruct" index="1" api="T:GenricMath.Parser.DirectSumParser`3" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.DirectSumParser`3" ref="true" />
      </containers>
      <file name="M_GenricMath_Parser_DirectSumParser_3_Parse" />
    </api>
    <api id="T:GenricMath.Parser.Int32Parser">
      <topicdata group="api" />
      <apidata name="Int32Parser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:GenricMath.Parser.ITypeParser`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
        <type api="T:GenricMath.Parser.IParser`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenricMath.Parser.Int32Parser.#ctor" />
        <element api="M:GenricMath.Parser.Int32Parser.Parse(System.String)" />
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
      </containers>
      <file name="T_GenricMath_Parser_Int32Parser" />
    </api>
    <api id="Methods.T:GenricMath.Parser.Int32Parser">
      <topicdata name="Int32Parser" group="list" subgroup="Methods" typeTopicId="T:GenricMath.Parser.Int32Parser" />
      <apidata name="Int32Parser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenricMath.Parser.Int32Parser.Parse(System.String)" />
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.Int32Parser" />
      </containers>
      <file name="Methods_T_GenricMath_Parser_Int32Parser" />
    </api>
    <api id="M:GenricMath.Parser.Int32Parser.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.Int32Parser" ref="true" />
      </containers>
      <file name="M_GenricMath_Parser_Int32Parser__ctor" />
    </api>
    <api id="M:GenricMath.Parser.Int32Parser.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="inputString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:GenricMath.Parser.ITypeParser`1.Parse(System.String)">
          <type api="T:GenricMath.Parser.ITypeParser`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
        <member api="M:GenricMath.Parser.IParser`1.Parse(System.String)">
          <type api="T:GenricMath.Parser.IParser`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.Int32Parser" ref="true" />
      </containers>
      <file name="M_GenricMath_Parser_Int32Parser_Parse" />
    </api>
    <api id="T:GenricMath.Parser.IntervalParser`3">
      <topicdata group="api" />
      <apidata name="IntervalParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.IntervalParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TTypeParser">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:GenricMath.Parser.ITypeParser`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.IntervalParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:GenricMath.Parser.IParser`1" ref="true">
          <specialization>
            <type api="T:Math.Base.Interval`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:GenricMath.Parser.IntervalParser`3" />
                <template name="TStruct" index="1" api="T:GenricMath.Parser.IntervalParser`3" />
              </specialization>
            </type>
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenricMath.Parser.IntervalParser`3.#ctor" />
        <element api="M:GenricMath.Parser.IntervalParser`3.Parse(System.String)" />
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
      </containers>
      <file name="T_GenricMath_Parser_IntervalParser_3" />
    </api>
    <api id="Methods.T:GenricMath.Parser.IntervalParser`3">
      <topicdata name="IntervalParser" group="list" subgroup="Methods" typeTopicId="T:GenricMath.Parser.IntervalParser`3" />
      <apidata name="IntervalParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.IntervalParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TTypeParser">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:GenricMath.Parser.ITypeParser`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.IntervalParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenricMath.Parser.IntervalParser`3.Parse(System.String)" />
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.IntervalParser`3" />
      </containers>
      <file name="Methods_T_GenricMath_Parser_IntervalParser_3" />
    </api>
    <api id="M:GenricMath.Parser.IntervalParser`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.IntervalParser`3" ref="true" />
      </containers>
      <file name="M_GenricMath_Parser_IntervalParser_3__ctor" />
    </api>
    <api id="M:GenricMath.Parser.IntervalParser`3.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="inputString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.Base.Interval`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:GenricMath.Parser.IntervalParser`3" />
            <template name="TStruct" index="1" api="T:GenricMath.Parser.IntervalParser`3" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:GenricMath.Parser.IParser`1.Parse(System.String)">
          <type api="T:GenricMath.Parser.IParser`1" ref="true">
            <specialization>
              <type api="T:Math.Base.Interval`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.IntervalParser`3" />
                  <template name="TStruct" index="1" api="T:GenricMath.Parser.IntervalParser`3" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.IntervalParser`3" ref="true" />
      </containers>
      <file name="M_GenricMath_Parser_IntervalParser_3_Parse" />
    </api>
    <api id="T:GenricMath.Parser.IParser`1">
      <topicdata group="api" />
      <apidata name="IParser" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <implementors>
        <type api="T:GenricMath.Parser.DirectSumParser`3" ref="true" />
        <type api="T:GenricMath.Parser.ITypeParser`1" ref="true" />
        <type api="T:GenricMath.Parser.Int32Parser" ref="true" />
        <type api="T:GenricMath.Parser.IntervalParser`3" ref="true" />
        <type api="T:GenricMath.Parser.MatrixParser`3" ref="true" />
        <type api="T:GenricMath.Parser.PolynomialParser`3" ref="true" />
      </implementors>
      <elements>
        <element api="M:GenricMath.Parser.IParser`1.Parse(System.String)" />
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
      </containers>
      <file name="T_GenricMath_Parser_IParser_1" />
    </api>
    <api id="Methods.T:GenricMath.Parser.IParser`1">
      <topicdata name="IParser" group="list" subgroup="Methods" typeTopicId="T:GenricMath.Parser.IParser`1" />
      <apidata name="IParser" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:GenricMath.Parser.IParser`1.Parse(System.String)" />
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.IParser`1" />
      </containers>
      <file name="Methods_T_GenricMath_Parser_IParser_1" />
    </api>
    <api id="M:GenricMath.Parser.IParser`1.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="inputString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:GenricMath.Parser.IParser`1" />
      </returns>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.IParser`1" ref="true" />
      </containers>
      <file name="M_GenricMath_Parser_IParser_1_Parse" />
    </api>
    <api id="T:GenricMath.Parser.ITypeParser`1">
      <topicdata group="api" />
      <apidata name="ITypeParser" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:GenricMath.Parser.IParser`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:GenricMath.Parser.ITypeParser`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:GenricMath.Parser.Int32Parser" ref="true" />
      </implementors>
      <elements>
        <element api="Overload:GenricMath.Parser.ITypeParser`1.Parse">
          <element api="M:GenricMath.Parser.IParser`1.Parse(System.String)" />
          <element api="M:GenricMath.Parser.ITypeParser`1.Parse(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
      </containers>
      <file name="T_GenricMath_Parser_ITypeParser_1" />
    </api>
    <api id="Methods.T:GenricMath.Parser.ITypeParser`1">
      <topicdata name="ITypeParser" group="list" subgroup="Methods" typeTopicId="T:GenricMath.Parser.ITypeParser`1" />
      <apidata name="ITypeParser" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:GenricMath.Parser.ITypeParser`1.Parse">
          <element api="M:GenricMath.Parser.IParser`1.Parse(System.String)" />
          <element api="M:GenricMath.Parser.ITypeParser`1.Parse(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.ITypeParser`1" />
      </containers>
      <file name="Methods_T_GenricMath_Parser_ITypeParser_1" />
    </api>
    <api id="Overload:GenricMath.Parser.ITypeParser`1.Parse">
      <topicdata name="Parse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Parse" group="member" subgroup="method" />
      <elements>
        <element api="M:GenricMath.Parser.IParser`1.Parse(System.String)" />
        <element api="M:GenricMath.Parser.ITypeParser`1.Parse(System.String)" />
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.ITypeParser`1" ref="true" />
      </containers>
      <file name="Overload_GenricMath_Parser_ITypeParser_1_Parse" />
    </api>
    <api id="M:GenricMath.Parser.ITypeParser`1.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:GenricMath.Parser.ITypeParser`1.Parse" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="inputString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:GenricMath.Parser.ITypeParser`1" />
      </returns>
      <implements>
        <member api="M:GenricMath.Parser.IParser`1.Parse(System.String)">
          <type api="T:GenricMath.Parser.IParser`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:GenricMath.Parser.ITypeParser`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.ITypeParser`1" ref="true" />
      </containers>
      <file name="M_GenricMath_Parser_ITypeParser_1_Parse" />
    </api>
    <api id="T:GenricMath.Parser.MatrixParser`3">
      <topicdata group="api" />
      <apidata name="MatrixParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.MatrixParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TTypeParser">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:GenricMath.Parser.ITypeParser`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.MatrixParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:GenricMath.Parser.IParser`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.Matrix`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:GenricMath.Parser.MatrixParser`3" />
                <template name="TStruct" index="1" api="T:GenricMath.Parser.MatrixParser`3" />
              </specialization>
            </type>
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenricMath.Parser.MatrixParser`3.#ctor" />
        <element api="M:GenricMath.Parser.MatrixParser`3.Parse(System.String)" />
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
      </containers>
      <file name="T_GenricMath_Parser_MatrixParser_3" />
    </api>
    <api id="Methods.T:GenricMath.Parser.MatrixParser`3">
      <topicdata name="MatrixParser" group="list" subgroup="Methods" typeTopicId="T:GenricMath.Parser.MatrixParser`3" />
      <apidata name="MatrixParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.MatrixParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TTypeParser">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:GenricMath.Parser.ITypeParser`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.MatrixParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenricMath.Parser.MatrixParser`3.Parse(System.String)" />
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.MatrixParser`3" />
      </containers>
      <file name="Methods_T_GenricMath_Parser_MatrixParser_3" />
    </api>
    <api id="M:GenricMath.Parser.MatrixParser`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.MatrixParser`3" ref="true" />
      </containers>
      <file name="M_GenricMath_Parser_MatrixParser_3__ctor" />
    </api>
    <api id="M:GenricMath.Parser.MatrixParser`3.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="inputString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:GenricMath.Parser.MatrixParser`3" />
            <template name="TStruct" index="1" api="T:GenricMath.Parser.MatrixParser`3" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:GenricMath.Parser.IParser`1.Parse(System.String)">
          <type api="T:GenricMath.Parser.IParser`1" ref="true">
            <specialization>
              <type api="T:Math.LinearAlgebra.Matrix`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.MatrixParser`3" />
                  <template name="TStruct" index="1" api="T:GenricMath.Parser.MatrixParser`3" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.MatrixParser`3" ref="true" />
      </containers>
      <file name="M_GenricMath_Parser_MatrixParser_3_Parse" />
    </api>
    <api id="T:GenricMath.Parser.PolynomialParser`3">
      <topicdata group="api" />
      <apidata name="PolynomialParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.PolynomialParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TTypeParser">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:GenricMath.Parser.ITypeParser`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.PolynomialParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:GenricMath.Parser.IParser`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:GenricMath.Parser.PolynomialParser`3" />
                <template name="TStruct" index="1" api="T:GenricMath.Parser.PolynomialParser`3" />
              </specialization>
            </type>
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenricMath.Parser.PolynomialParser`3.#ctor" />
        <element api="M:GenricMath.Parser.PolynomialParser`3.Parse(System.String)" />
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
      </containers>
      <file name="T_GenricMath_Parser_PolynomialParser_3" />
    </api>
    <api id="Methods.T:GenricMath.Parser.PolynomialParser`3">
      <topicdata name="PolynomialParser" group="list" subgroup="Methods" typeTopicId="T:GenricMath.Parser.PolynomialParser`3" />
      <apidata name="PolynomialParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.PolynomialParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TTypeParser">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:GenricMath.Parser.ITypeParser`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.PolynomialParser`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:GenricMath.Parser.PolynomialParser`3.Parse(System.String)" />
      </elements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.PolynomialParser`3" />
      </containers>
      <file name="Methods_T_GenricMath_Parser_PolynomialParser_3" />
    </api>
    <api id="M:GenricMath.Parser.PolynomialParser`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.PolynomialParser`3" ref="true" />
      </containers>
      <file name="M_GenricMath_Parser_PolynomialParser_3__ctor" />
    </api>
    <api id="M:GenricMath.Parser.PolynomialParser`3.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="inputString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:GenricMath.Parser.PolynomialParser`3" />
            <template name="TStruct" index="1" api="T:GenricMath.Parser.PolynomialParser`3" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:GenricMath.Parser.IParser`1.Parse(System.String)">
          <type api="T:GenricMath.Parser.IParser`1" ref="true">
            <specialization>
              <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:GenricMath.Parser.PolynomialParser`3" />
                  <template name="TStruct" index="1" api="T:GenricMath.Parser.PolynomialParser`3" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="GenricMath.Parser" module="GenricMath.Parser" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20653" />
          <noAptca />
        </library>
        <namespace api="N:GenricMath.Parser" />
        <type api="T:GenricMath.Parser.PolynomialParser`3" ref="true" />
      </containers>
      <file name="M_GenricMath_Parser_PolynomialParser_3_Parse" />
    </api>
    <api id="N:Math.Analysis.Tests">
      <topicdata group="api" />
      <apidata name="Math.Analysis.Tests" group="namespace" />
      <elements>
        <element api="T:Math.Analysis.Tests.IRingExtensionsTest" />
        <element api="T:Math.Analysis.Tests.IMonoidExtensionsTest" />
        <element api="T:Math.Analysis.Tests.IGroupExtensionsTest" />
        <element api="T:Math.Analysis.Tests.IFieldExtensionsTest" />
      </elements>
      <file name="N_Math_Analysis_Tests" />
    </api>
    <api id="T:Math.Analysis.Tests.IFieldExtensionsTest">
      <topicdata group="api" />
      <apidata name="IFieldExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Analysis.Tests.IFieldExtensionsTest.#ctor" />
        <element api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunction_CalculateAtPoint_EqualsExpectedPoint``1(``0,Math.Base.IField{``0},``0)" />
        <element api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunction_CalculateAtZero_ThrowsException``1(``0,Math.Base.IField{``0})" />
        <element api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunctionWithFunc_CalculateAtPoint_EqualsExpectedPoint``1(``0,Math.Base.IField{``0},``0)" />
        <element api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunctionWithFunc_CalculateAtPointFuncIsZero_ThrowsException``1(``0,Math.Base.IField{``0})" />
      </elements>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
      </containers>
      <file name="T_Math_Analysis_Tests_IFieldExtensionsTest" />
    </api>
    <api id="Methods.T:Math.Analysis.Tests.IFieldExtensionsTest">
      <topicdata name="IFieldExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.Analysis.Tests.IFieldExtensionsTest" />
      <apidata name="IFieldExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunction_CalculateAtPoint_EqualsExpectedPoint``1(``0,Math.Base.IField{``0},``0)" />
        <element api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunction_CalculateAtZero_ThrowsException``1(``0,Math.Base.IField{``0})" />
        <element api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunctionWithFunc_CalculateAtPoint_EqualsExpectedPoint``1(``0,Math.Base.IField{``0},``0)" />
        <element api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunctionWithFunc_CalculateAtPointFuncIsZero_ThrowsException``1(``0,Math.Base.IField{``0})" />
      </elements>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IFieldExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_Analysis_Tests_IFieldExtensionsTest" />
    </api>
    <api id="M:Math.Analysis.Tests.IFieldExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IFieldExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Analysis_Tests_IFieldExtensionsTest__ctor" />
    </api>
    <api id="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunction_CalculateAtPoint_EqualsExpectedPoint``1(``0,Math.Base.IField{``0},``0)">
      <topicdata group="api" />
      <apidata name="MultiplicationInverseFunction_CalculateAtPoint_EqualsExpectedPoint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="point">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunction_CalculateAtPoint_EqualsExpectedPoint``1(``0,Math.Base.IField{``0},``0)" />
        </parameter>
        <parameter name="field">
          <type api="T:Math.Base.IField`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunction_CalculateAtPoint_EqualsExpectedPoint``1(``0,Math.Base.IField{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="expeced">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunction_CalculateAtPoint_EqualsExpectedPoint``1(``0,Math.Base.IField{``0},``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IFieldExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Analysis_Tests_IFieldExtensionsTest_MultiplicationInverseFunction_CalculateAtPoint_EqualsExpectedPoint__1" />
    </api>
    <api id="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunction_CalculateAtZero_ThrowsException``1(``0,Math.Base.IField{``0})">
      <topicdata group="api" />
      <apidata name="MultiplicationInverseFunction_CalculateAtZero_ThrowsException" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="zero">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunction_CalculateAtZero_ThrowsException``1(``0,Math.Base.IField{``0})" />
        </parameter>
        <parameter name="field">
          <type api="T:Math.Base.IField`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunction_CalculateAtZero_ThrowsException``1(``0,Math.Base.IField{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IFieldExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Analysis_Tests_IFieldExtensionsTest_MultiplicationInverseFunction_CalculateAtZero_ThrowsException__1" />
    </api>
    <api id="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunctionWithFunc_CalculateAtPoint_EqualsExpectedPoint``1(``0,Math.Base.IField{``0},``0)">
      <topicdata group="api" />
      <apidata name="MultiplicationInverseFunctionWithFunc_CalculateAtPoint_EqualsExpectedPoint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="point">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunctionWithFunc_CalculateAtPoint_EqualsExpectedPoint``1(``0,Math.Base.IField{``0},``0)" />
        </parameter>
        <parameter name="field">
          <type api="T:Math.Base.IField`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunctionWithFunc_CalculateAtPoint_EqualsExpectedPoint``1(``0,Math.Base.IField{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="expected">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunctionWithFunc_CalculateAtPoint_EqualsExpectedPoint``1(``0,Math.Base.IField{``0},``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IFieldExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Analysis_Tests_IFieldExtensionsTest_MultiplicationInverseFunctionWithFunc_CalculateAtPoint_EqualsExpectedPoint__1" />
    </api>
    <api id="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunctionWithFunc_CalculateAtPointFuncIsZero_ThrowsException``1(``0,Math.Base.IField{``0})">
      <topicdata group="api" />
      <apidata name="MultiplicationInverseFunctionWithFunc_CalculateAtPointFuncIsZero_ThrowsException" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="point">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunctionWithFunc_CalculateAtPointFuncIsZero_ThrowsException``1(``0,Math.Base.IField{``0})" />
        </parameter>
        <parameter name="field">
          <type api="T:Math.Base.IField`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.Analysis.Tests.IFieldExtensionsTest.MultiplicationInverseFunctionWithFunc_CalculateAtPointFuncIsZero_ThrowsException``1(``0,Math.Base.IField{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IFieldExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Analysis_Tests_IFieldExtensionsTest_MultiplicationInverseFunctionWithFunc_CalculateAtPointFuncIsZero_ThrowsException__1" />
    </api>
    <api id="T:Math.Analysis.Tests.IGroupExtensionsTest">
      <topicdata group="api" />
      <apidata name="IGroupExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Analysis.Tests.IGroupExtensionsTest.#ctor" />
        <element api="M:Math.Analysis.Tests.IGroupExtensionsTest.InverseFunction_AddWithFunction_PointsEqualsMock``1(``0,Math.Base.IGroup{``0})" />
      </elements>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
      </containers>
      <file name="T_Math_Analysis_Tests_IGroupExtensionsTest" />
    </api>
    <api id="Methods.T:Math.Analysis.Tests.IGroupExtensionsTest">
      <topicdata name="IGroupExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.Analysis.Tests.IGroupExtensionsTest" />
      <apidata name="IGroupExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Analysis.Tests.IGroupExtensionsTest.InverseFunction_AddWithFunction_PointsEqualsMock``1(``0,Math.Base.IGroup{``0})" />
      </elements>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IGroupExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_Analysis_Tests_IGroupExtensionsTest" />
    </api>
    <api id="M:Math.Analysis.Tests.IGroupExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IGroupExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Analysis_Tests_IGroupExtensionsTest__ctor" />
    </api>
    <api id="M:Math.Analysis.Tests.IGroupExtensionsTest.InverseFunction_AddWithFunction_PointsEqualsMock``1(``0,Math.Base.IGroup{``0})">
      <topicdata group="api" />
      <apidata name="InverseFunction_AddWithFunction_PointsEqualsMock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IGroupExtensionsTest.InverseFunction_AddWithFunction_PointsEqualsMock``1(``0,Math.Base.IGroup{``0})" />
        </parameter>
        <parameter name="group">
          <type api="T:Math.Base.IGroup`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.Analysis.Tests.IGroupExtensionsTest.InverseFunction_AddWithFunction_PointsEqualsMock``1(``0,Math.Base.IGroup{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IGroupExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Analysis_Tests_IGroupExtensionsTest_InverseFunction_AddWithFunction_PointsEqualsMock__1" />
    </api>
    <api id="T:Math.Analysis.Tests.IMonoidExtensionsTest">
      <topicdata group="api" />
      <apidata name="IMonoidExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Analysis.Tests.IMonoidExtensionsTest.#ctor" />
        <element api="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_LeftMultiplicationFunctionRightAdditionFunction_PointsAreEqual``1(``0,``0,``0,Math.Base.IRing{``0})" />
        <element api="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_OfTwoAdditionFunctions_PointsAreEqual``1(``0,``0,``0,Math.Base.IMonoid{``0})" />
        <element api="M:Math.Analysis.Tests.IMonoidExtensionsTest.ZeroFunction_PointsEqualsMock``1(``0,Math.Base.IMonoid{``0})" />
      </elements>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
      </containers>
      <file name="T_Math_Analysis_Tests_IMonoidExtensionsTest" />
    </api>
    <api id="Methods.T:Math.Analysis.Tests.IMonoidExtensionsTest">
      <topicdata name="IMonoidExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.Analysis.Tests.IMonoidExtensionsTest" />
      <apidata name="IMonoidExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_LeftMultiplicationFunctionRightAdditionFunction_PointsAreEqual``1(``0,``0,``0,Math.Base.IRing{``0})" />
        <element api="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_OfTwoAdditionFunctions_PointsAreEqual``1(``0,``0,``0,Math.Base.IMonoid{``0})" />
        <element api="M:Math.Analysis.Tests.IMonoidExtensionsTest.ZeroFunction_PointsEqualsMock``1(``0,Math.Base.IMonoid{``0})" />
      </elements>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IMonoidExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_Analysis_Tests_IMonoidExtensionsTest" />
    </api>
    <api id="M:Math.Analysis.Tests.IMonoidExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IMonoidExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Analysis_Tests_IMonoidExtensionsTest__ctor" />
    </api>
    <api id="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_LeftMultiplicationFunctionRightAdditionFunction_PointsAreEqual``1(``0,``0,``0,Math.Base.IRing{``0})">
      <topicdata group="api" />
      <apidata name="Addition_LeftMultiplicationFunctionRightAdditionFunction_PointsAreEqual" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value1">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_LeftMultiplicationFunctionRightAdditionFunction_PointsAreEqual``1(``0,``0,``0,Math.Base.IRing{``0})" />
        </parameter>
        <parameter name="value2">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_LeftMultiplicationFunctionRightAdditionFunction_PointsAreEqual``1(``0,``0,``0,Math.Base.IRing{``0})" />
        </parameter>
        <parameter name="expectedResult">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_LeftMultiplicationFunctionRightAdditionFunction_PointsAreEqual``1(``0,``0,``0,Math.Base.IRing{``0})" />
        </parameter>
        <parameter name="ring">
          <type api="T:Math.Base.IRing`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_LeftMultiplicationFunctionRightAdditionFunction_PointsAreEqual``1(``0,``0,``0,Math.Base.IRing{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IMonoidExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Analysis_Tests_IMonoidExtensionsTest_Addition_LeftMultiplicationFunctionRightAdditionFunction_PointsAreEqual__1" />
    </api>
    <api id="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_OfTwoAdditionFunctions_PointsAreEqual``1(``0,``0,``0,Math.Base.IMonoid{``0})">
      <topicdata group="api" />
      <apidata name="Addition_OfTwoAdditionFunctions_PointsAreEqual" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value1">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_OfTwoAdditionFunctions_PointsAreEqual``1(``0,``0,``0,Math.Base.IMonoid{``0})" />
        </parameter>
        <parameter name="value2">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_OfTwoAdditionFunctions_PointsAreEqual``1(``0,``0,``0,Math.Base.IMonoid{``0})" />
        </parameter>
        <parameter name="expectedResult">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_OfTwoAdditionFunctions_PointsAreEqual``1(``0,``0,``0,Math.Base.IMonoid{``0})" />
        </parameter>
        <parameter name="monoid">
          <type api="T:Math.Base.IMonoid`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.Analysis.Tests.IMonoidExtensionsTest.Addition_OfTwoAdditionFunctions_PointsAreEqual``1(``0,``0,``0,Math.Base.IMonoid{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IMonoidExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Analysis_Tests_IMonoidExtensionsTest_Addition_OfTwoAdditionFunctions_PointsAreEqual__1" />
    </api>
    <api id="M:Math.Analysis.Tests.IMonoidExtensionsTest.ZeroFunction_PointsEqualsMock``1(``0,Math.Base.IMonoid{``0})">
      <topicdata group="api" />
      <apidata name="ZeroFunction_PointsEqualsMock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Math.Analysis.Tests.IMonoidExtensionsTest.ZeroFunction_PointsEqualsMock``1(``0,Math.Base.IMonoid{``0})" />
        </parameter>
        <parameter name="monoid">
          <type api="T:Math.Base.IMonoid`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.Analysis.Tests.IMonoidExtensionsTest.ZeroFunction_PointsEqualsMock``1(``0,Math.Base.IMonoid{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IMonoidExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Analysis_Tests_IMonoidExtensionsTest_ZeroFunction_PointsEqualsMock__1" />
    </api>
    <api id="T:Math.Analysis.Tests.IRingExtensionsTest">
      <topicdata group="api" />
      <apidata name="IRingExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Analysis.Tests.IRingExtensionsTest.#ctor" />
        <element api="M:Math.Analysis.Tests.IRingExtensionsTest.Multiplication" />
      </elements>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
      </containers>
      <file name="T_Math_Analysis_Tests_IRingExtensionsTest" />
    </api>
    <api id="Methods.T:Math.Analysis.Tests.IRingExtensionsTest">
      <topicdata name="IRingExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.Analysis.Tests.IRingExtensionsTest" />
      <apidata name="IRingExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Analysis.Tests.IRingExtensionsTest.Multiplication" />
      </elements>
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IRingExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_Analysis_Tests_IRingExtensionsTest" />
    </api>
    <api id="M:Math.Analysis.Tests.IRingExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IRingExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Analysis_Tests_IRingExtensionsTest__ctor" />
    </api>
    <api id="M:Math.Analysis.Tests.IRingExtensionsTest.Multiplication">
      <topicdata group="api" />
      <apidata name="Multiplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Math.Analyisis.Tests" module="Math.Analyisis.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Analysis.Tests" />
        <type api="T:Math.Analysis.Tests.IRingExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Analysis_Tests_IRingExtensionsTest_Multiplication" />
    </api>
    <api id="N:Math.Base">
      <topicdata group="api" />
      <apidata name="Math.Base" group="namespace" />
      <elements>
        <element api="T:Math.Base.IStructure`1" />
        <element api="T:Math.Base.IMonoid`1" />
        <element api="T:Math.Base.DoubleMonoid" />
        <element api="T:Math.Base.IGroup`1" />
        <element api="T:Math.Base.DoubleGroup" />
        <element api="T:Math.Base.Int32Monoid" />
        <element api="T:Math.Base.Int32Group" />
        <element api="T:Math.Base.ComplexMonoid" />
        <element api="T:Math.Base.ComplexGroup" />
        <element api="T:Math.Base.IRing`1" />
        <element api="T:Math.Base.DoubleRing" />
        <element api="T:Math.Base.ComplexRing" />
        <element api="T:Math.Base.Int32Ring" />
        <element api="T:Math.Base.IEuclidianRing`1" />
        <element api="T:Math.Base.DoubleEuclidianRing" />
        <element api="T:Math.Base.ComplexEuclidianRing" />
        <element api="T:Math.Base.Int32EuclidianRing" />
        <element api="T:Math.Base.UInt32Monoid" />
        <element api="T:Math.Base.IField`1" />
        <element api="T:Math.Base.DoubleField" />
        <element api="T:Math.Base.IModule`4" />
        <element api="T:Math.Base.IVectorRoom`4" />
        <element api="T:Math.Base.IntegerExtension" />
        <element api="T:Math.Base.ComplexField" />
        <element api="T:Math.Base.IRingExtensions" />
        <element api="T:Math.Base.IInterval`2" />
        <element api="T:Math.Base.Interval`2" />
      </elements>
      <file name="N_Math_Base" />
    </api>
    <api id="T:Math.Base.ComplexEuclidianRing">
      <topicdata group="api" />
      <apidata name="ComplexEuclidianRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.ComplexRing" ref="true" />
          <type api="T:Math.Base.ComplexGroup" ref="true" />
          <type api="T:Math.Base.ComplexMonoid" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Math.Base.IEuclidianRing`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Numerics.Complex" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Numerics.Complex" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Numerics.Complex" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.ComplexEuclidianRing.#ctor" />
        <element api="M:Math.Base.ComplexEuclidianRing.Norm(System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexEuclidianRing.ToString" />
        <element api="M:Math.Base.ComplexGroup.Inverse(System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexMonoid.Addition(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="P:Math.Base.ComplexMonoid.Zero" />
        <element api="M:Math.Base.ComplexRing.Multiplication(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="P:Math.Base.ComplexRing.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_ComplexEuclidianRing" />
    </api>
    <api id="Methods.T:Math.Base.ComplexEuclidianRing">
      <topicdata name="ComplexEuclidianRing" group="list" subgroup="Methods" typeTopicId="T:Math.Base.ComplexEuclidianRing" />
      <apidata name="ComplexEuclidianRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Numerics.Complex" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Numerics.Complex" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Numerics.Complex" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.ComplexEuclidianRing.Norm(System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexEuclidianRing.ToString" />
        <element api="M:Math.Base.ComplexGroup.Inverse(System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexMonoid.Addition(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexRing.Multiplication(System.Numerics.Complex,System.Numerics.Complex)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexEuclidianRing" />
      </containers>
      <file name="Methods_T_Math_Base_ComplexEuclidianRing" />
    </api>
    <api id="Properties.T:Math.Base.ComplexEuclidianRing">
      <topicdata name="ComplexEuclidianRing" group="list" subgroup="Properties" typeTopicId="T:Math.Base.ComplexEuclidianRing" />
      <apidata name="ComplexEuclidianRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.ComplexMonoid.Zero" />
        <element api="P:Math.Base.ComplexRing.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexEuclidianRing" />
      </containers>
      <file name="Properties_T_Math_Base_ComplexEuclidianRing" />
    </api>
    <api id="M:Math.Base.ComplexEuclidianRing.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexEuclidianRing" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexEuclidianRing__ctor" />
    </api>
    <api id="M:Math.Base.ComplexEuclidianRing.Norm(System.Numerics.Complex)">
      <topicdata group="api" />
      <apidata name="Norm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IEuclidianRing`1.Norm(`0)">
          <type api="T:Math.Base.IEuclidianRing`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexEuclidianRing" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexEuclidianRing_Norm" />
    </api>
    <api id="M:Math.Base.ComplexEuclidianRing.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.ComplexRing.ToString">
          <type api="T:Math.Base.ComplexRing" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexEuclidianRing" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexEuclidianRing_ToString" />
    </api>
    <api id="T:Math.Base.ComplexField">
      <topicdata group="api" />
      <apidata name="ComplexField" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.ComplexRing" ref="true" />
          <type api="T:Math.Base.ComplexGroup" ref="true" />
          <type api="T:Math.Base.ComplexMonoid" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Math.Base.IField`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Numerics.Complex" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Numerics.Complex" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Numerics.Complex" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.ComplexField.#ctor" />
        <element api="M:Math.Base.ComplexField.MultiplicationInverse(System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexGroup.Inverse(System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexMonoid.Addition(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="P:Math.Base.ComplexMonoid.Zero" />
        <element api="M:Math.Base.ComplexRing.Multiplication(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="P:Math.Base.ComplexRing.One" />
        <element api="M:Math.Base.ComplexRing.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_ComplexField" />
    </api>
    <api id="Methods.T:Math.Base.ComplexField">
      <topicdata name="ComplexField" group="list" subgroup="Methods" typeTopicId="T:Math.Base.ComplexField" />
      <apidata name="ComplexField" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Numerics.Complex" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Numerics.Complex" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Numerics.Complex" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.ComplexField.MultiplicationInverse(System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexGroup.Inverse(System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexMonoid.Addition(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexRing.Multiplication(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexRing.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexField" />
      </containers>
      <file name="Methods_T_Math_Base_ComplexField" />
    </api>
    <api id="Properties.T:Math.Base.ComplexField">
      <topicdata name="ComplexField" group="list" subgroup="Properties" typeTopicId="T:Math.Base.ComplexField" />
      <apidata name="ComplexField" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.ComplexMonoid.Zero" />
        <element api="P:Math.Base.ComplexRing.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexField" />
      </containers>
      <file name="Properties_T_Math_Base_ComplexField" />
    </api>
    <api id="M:Math.Base.ComplexField.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexField" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexField__ctor" />
    </api>
    <api id="M:Math.Base.ComplexField.MultiplicationInverse(System.Numerics.Complex)">
      <topicdata group="api" />
      <apidata name="MultiplicationInverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Numerics.Complex" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IField`1.MultiplicationInverse(`0)">
          <type api="T:Math.Base.IField`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexField" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexField_MultiplicationInverse" />
    </api>
    <api id="T:Math.Base.ComplexGroup">
      <topicdata group="api" />
      <apidata name="ComplexGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.ComplexMonoid" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.ComplexRing" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.ComplexGroup.#ctor" />
        <element api="M:Math.Base.ComplexGroup.Inverse(System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexGroup.ToString" />
        <element api="M:Math.Base.ComplexMonoid.Addition(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="P:Math.Base.ComplexMonoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_ComplexGroup" />
    </api>
    <api id="Methods.T:Math.Base.ComplexGroup">
      <topicdata name="ComplexGroup" group="list" subgroup="Methods" typeTopicId="T:Math.Base.ComplexGroup" />
      <apidata name="ComplexGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.ComplexGroup.Inverse(System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexGroup.ToString" />
        <element api="M:Math.Base.ComplexMonoid.Addition(System.Numerics.Complex,System.Numerics.Complex)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexGroup" />
      </containers>
      <file name="Methods_T_Math_Base_ComplexGroup" />
    </api>
    <api id="Properties.T:Math.Base.ComplexGroup">
      <topicdata name="ComplexGroup" group="list" subgroup="Properties" typeTopicId="T:Math.Base.ComplexGroup" />
      <apidata name="ComplexGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.ComplexMonoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexGroup" />
      </containers>
      <file name="Properties_T_Math_Base_ComplexGroup" />
    </api>
    <api id="M:Math.Base.ComplexGroup.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexGroup" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexGroup__ctor" />
    </api>
    <api id="M:Math.Base.ComplexGroup.Inverse(System.Numerics.Complex)">
      <topicdata group="api" />
      <apidata name="Inverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Numerics.Complex" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IGroup`1.Inverse(`0)">
          <type api="T:Math.Base.IGroup`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexGroup" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexGroup_Inverse" />
    </api>
    <api id="M:Math.Base.ComplexGroup.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.ComplexMonoid.ToString">
          <type api="T:Math.Base.ComplexMonoid" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexGroup" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexGroup_ToString" />
    </api>
    <api id="T:Math.Base.ComplexMonoid">
      <topicdata group="api" />
      <apidata name="ComplexMonoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.ComplexGroup" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.ComplexMonoid.#ctor" />
        <element api="M:Math.Base.ComplexMonoid.Addition(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexMonoid.ToString" />
        <element api="P:Math.Base.ComplexMonoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_ComplexMonoid" />
    </api>
    <api id="Methods.T:Math.Base.ComplexMonoid">
      <topicdata name="ComplexMonoid" group="list" subgroup="Methods" typeTopicId="T:Math.Base.ComplexMonoid" />
      <apidata name="ComplexMonoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.ComplexMonoid.Addition(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexMonoid.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexMonoid" />
      </containers>
      <file name="Methods_T_Math_Base_ComplexMonoid" />
    </api>
    <api id="Properties.T:Math.Base.ComplexMonoid">
      <topicdata name="ComplexMonoid" group="list" subgroup="Properties" typeTopicId="T:Math.Base.ComplexMonoid" />
      <apidata name="ComplexMonoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.ComplexMonoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexMonoid" />
      </containers>
      <file name="Properties_T_Math_Base_ComplexMonoid" />
    </api>
    <api id="M:Math.Base.ComplexMonoid.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexMonoid" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexMonoid__ctor" />
    </api>
    <api id="M:Math.Base.ComplexMonoid.Addition(System.Numerics.Complex,System.Numerics.Complex)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="leftElement">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
        <parameter name="rightElement">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Numerics.Complex" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IMonoid`1.Addition(`0,`0)">
          <type api="T:Math.Base.IMonoid`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexMonoid" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexMonoid_Addition" />
    </api>
    <api id="M:Math.Base.ComplexMonoid.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexMonoid" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexMonoid_ToString" />
    </api>
    <api id="P:Math.Base.ComplexMonoid.Zero">
      <topicdata group="api" />
      <apidata name="Zero" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Zero" />
      <returns>
        <type api="T:System.Numerics.Complex" ref="false" />
      </returns>
      <implements>
        <member api="P:Math.Base.IMonoid`1.Zero">
          <type api="T:Math.Base.IMonoid`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexMonoid" ref="true" />
      </containers>
      <file name="P_Math_Base_ComplexMonoid_Zero" />
    </api>
    <api id="T:Math.Base.ComplexRing">
      <topicdata group="api" />
      <apidata name="ComplexRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.ComplexGroup" ref="true" />
          <type api="T:Math.Base.ComplexMonoid" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.ComplexEuclidianRing" ref="true" />
          <type api="T:Math.Base.ComplexField" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Math.Base.ComplexGroup.Inverse(System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexMonoid.Addition(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="P:Math.Base.ComplexMonoid.Zero" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Numerics.Complex" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Numerics.Complex" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Numerics.Complex" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.ComplexRing.#ctor" />
        <element api="M:Math.Base.ComplexRing.Multiplication(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="P:Math.Base.ComplexRing.One" />
        <element api="M:Math.Base.ComplexRing.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_ComplexRing" />
    </api>
    <api id="Methods.T:Math.Base.ComplexRing">
      <topicdata name="ComplexRing" group="list" subgroup="Methods" typeTopicId="T:Math.Base.ComplexRing" />
      <apidata name="ComplexRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Math.Base.ComplexGroup.Inverse(System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexMonoid.Addition(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Numerics.Complex" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Numerics.Complex" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Numerics.Complex" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.ComplexRing.Multiplication(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.ComplexRing.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexRing" />
      </containers>
      <file name="Methods_T_Math_Base_ComplexRing" />
    </api>
    <api id="Properties.T:Math.Base.ComplexRing">
      <topicdata name="ComplexRing" group="list" subgroup="Properties" typeTopicId="T:Math.Base.ComplexRing" />
      <apidata name="ComplexRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.ComplexMonoid.Zero" />
        <element api="P:Math.Base.ComplexRing.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexRing" />
      </containers>
      <file name="Properties_T_Math_Base_ComplexRing" />
    </api>
    <api id="M:Math.Base.ComplexRing.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexRing" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexRing__ctor" />
    </api>
    <api id="M:Math.Base.ComplexRing.Multiplication(System.Numerics.Complex,System.Numerics.Complex)">
      <topicdata group="api" />
      <apidata name="Multiplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="leftElement">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
        <parameter name="rightElement">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Numerics.Complex" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IRing`1.Multiplication(`0,`0)">
          <type api="T:Math.Base.IRing`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexRing" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexRing_Multiplication" />
    </api>
    <api id="P:Math.Base.ComplexRing.One">
      <topicdata group="api" />
      <apidata name="One" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_One" />
      <returns>
        <type api="T:System.Numerics.Complex" ref="false" />
      </returns>
      <implements>
        <member api="P:Math.Base.IRing`1.One">
          <type api="T:Math.Base.IRing`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexRing" ref="true" />
      </containers>
      <file name="P_Math_Base_ComplexRing_One" />
    </api>
    <api id="M:Math.Base.ComplexRing.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.ComplexGroup.ToString">
          <type api="T:Math.Base.ComplexGroup" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.ComplexRing" ref="true" />
      </containers>
      <file name="M_Math_Base_ComplexRing_ToString" />
    </api>
    <api id="T:Math.Base.DoubleEuclidianRing">
      <topicdata group="api" />
      <apidata name="DoubleEuclidianRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.DoubleRing" ref="true" />
          <type api="T:Math.Base.DoubleGroup" ref="true" />
          <type api="T:Math.Base.DoubleMonoid" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Math.Base.IEuclidianRing`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Double" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Double" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.DoubleEuclidianRing.#ctor" />
        <element api="M:Math.Base.DoubleEuclidianRing.Norm(System.Double)" />
        <element api="M:Math.Base.DoubleEuclidianRing.ToString" />
        <element api="M:Math.Base.DoubleGroup.Inverse(System.Double)" />
        <element api="M:Math.Base.DoubleMonoid.Addition(System.Double,System.Double)" />
        <element api="P:Math.Base.DoubleMonoid.Zero" />
        <element api="M:Math.Base.DoubleRing.Multiplication(System.Double,System.Double)" />
        <element api="P:Math.Base.DoubleRing.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_DoubleEuclidianRing" />
    </api>
    <api id="Methods.T:Math.Base.DoubleEuclidianRing">
      <topicdata name="DoubleEuclidianRing" group="list" subgroup="Methods" typeTopicId="T:Math.Base.DoubleEuclidianRing" />
      <apidata name="DoubleEuclidianRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Double" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Double" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.DoubleEuclidianRing.Norm(System.Double)" />
        <element api="M:Math.Base.DoubleEuclidianRing.ToString" />
        <element api="M:Math.Base.DoubleGroup.Inverse(System.Double)" />
        <element api="M:Math.Base.DoubleMonoid.Addition(System.Double,System.Double)" />
        <element api="M:Math.Base.DoubleRing.Multiplication(System.Double,System.Double)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleEuclidianRing" />
      </containers>
      <file name="Methods_T_Math_Base_DoubleEuclidianRing" />
    </api>
    <api id="Properties.T:Math.Base.DoubleEuclidianRing">
      <topicdata name="DoubleEuclidianRing" group="list" subgroup="Properties" typeTopicId="T:Math.Base.DoubleEuclidianRing" />
      <apidata name="DoubleEuclidianRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.DoubleMonoid.Zero" />
        <element api="P:Math.Base.DoubleRing.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleEuclidianRing" />
      </containers>
      <file name="Properties_T_Math_Base_DoubleEuclidianRing" />
    </api>
    <api id="M:Math.Base.DoubleEuclidianRing.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleEuclidianRing" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleEuclidianRing__ctor" />
    </api>
    <api id="M:Math.Base.DoubleEuclidianRing.Norm(System.Double)">
      <topicdata group="api" />
      <apidata name="Norm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IEuclidianRing`1.Norm(`0)">
          <type api="T:Math.Base.IEuclidianRing`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleEuclidianRing" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleEuclidianRing_Norm" />
    </api>
    <api id="M:Math.Base.DoubleEuclidianRing.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.DoubleRing.ToString">
          <type api="T:Math.Base.DoubleRing" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleEuclidianRing" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleEuclidianRing_ToString" />
    </api>
    <api id="T:Math.Base.DoubleField">
      <topicdata group="api" />
      <apidata name="DoubleField" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.DoubleRing" ref="true" />
          <type api="T:Math.Base.DoubleGroup" ref="true" />
          <type api="T:Math.Base.DoubleMonoid" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Math.Base.IField`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Double" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Double" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.DoubleField.#ctor" />
        <element api="M:Math.Base.DoubleField.MultiplicationInverse(System.Double)" />
        <element api="M:Math.Base.DoubleGroup.Inverse(System.Double)" />
        <element api="M:Math.Base.DoubleMonoid.Addition(System.Double,System.Double)" />
        <element api="P:Math.Base.DoubleMonoid.Zero" />
        <element api="M:Math.Base.DoubleRing.Multiplication(System.Double,System.Double)" />
        <element api="P:Math.Base.DoubleRing.One" />
        <element api="M:Math.Base.DoubleRing.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_DoubleField" />
    </api>
    <api id="Methods.T:Math.Base.DoubleField">
      <topicdata name="DoubleField" group="list" subgroup="Methods" typeTopicId="T:Math.Base.DoubleField" />
      <apidata name="DoubleField" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Double" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Double" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.DoubleField.MultiplicationInverse(System.Double)" />
        <element api="M:Math.Base.DoubleGroup.Inverse(System.Double)" />
        <element api="M:Math.Base.DoubleMonoid.Addition(System.Double,System.Double)" />
        <element api="M:Math.Base.DoubleRing.Multiplication(System.Double,System.Double)" />
        <element api="M:Math.Base.DoubleRing.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleField" />
      </containers>
      <file name="Methods_T_Math_Base_DoubleField" />
    </api>
    <api id="Properties.T:Math.Base.DoubleField">
      <topicdata name="DoubleField" group="list" subgroup="Properties" typeTopicId="T:Math.Base.DoubleField" />
      <apidata name="DoubleField" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.DoubleMonoid.Zero" />
        <element api="P:Math.Base.DoubleRing.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleField" />
      </containers>
      <file name="Properties_T_Math_Base_DoubleField" />
    </api>
    <api id="M:Math.Base.DoubleField.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleField" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleField__ctor" />
    </api>
    <api id="M:Math.Base.DoubleField.MultiplicationInverse(System.Double)">
      <topicdata group="api" />
      <apidata name="MultiplicationInverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IField`1.MultiplicationInverse(`0)">
          <type api="T:Math.Base.IField`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleField" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleField_MultiplicationInverse" />
    </api>
    <api id="T:Math.Base.DoubleGroup">
      <topicdata group="api" />
      <apidata name="DoubleGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.DoubleMonoid" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.DoubleRing" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.DoubleGroup.#ctor" />
        <element api="M:Math.Base.DoubleGroup.Inverse(System.Double)" />
        <element api="M:Math.Base.DoubleGroup.ToString" />
        <element api="M:Math.Base.DoubleMonoid.Addition(System.Double,System.Double)" />
        <element api="P:Math.Base.DoubleMonoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_DoubleGroup" />
    </api>
    <api id="Methods.T:Math.Base.DoubleGroup">
      <topicdata name="DoubleGroup" group="list" subgroup="Methods" typeTopicId="T:Math.Base.DoubleGroup" />
      <apidata name="DoubleGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.DoubleGroup.Inverse(System.Double)" />
        <element api="M:Math.Base.DoubleGroup.ToString" />
        <element api="M:Math.Base.DoubleMonoid.Addition(System.Double,System.Double)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleGroup" />
      </containers>
      <file name="Methods_T_Math_Base_DoubleGroup" />
    </api>
    <api id="Properties.T:Math.Base.DoubleGroup">
      <topicdata name="DoubleGroup" group="list" subgroup="Properties" typeTopicId="T:Math.Base.DoubleGroup" />
      <apidata name="DoubleGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.DoubleMonoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleGroup" />
      </containers>
      <file name="Properties_T_Math_Base_DoubleGroup" />
    </api>
    <api id="M:Math.Base.DoubleGroup.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleGroup" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleGroup__ctor" />
    </api>
    <api id="M:Math.Base.DoubleGroup.Inverse(System.Double)">
      <topicdata group="api" />
      <apidata name="Inverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IGroup`1.Inverse(`0)">
          <type api="T:Math.Base.IGroup`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleGroup" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleGroup_Inverse" />
    </api>
    <api id="M:Math.Base.DoubleGroup.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.DoubleMonoid.ToString">
          <type api="T:Math.Base.DoubleMonoid" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleGroup" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleGroup_ToString" />
    </api>
    <api id="T:Math.Base.DoubleMonoid">
      <topicdata group="api" />
      <apidata name="DoubleMonoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.DoubleGroup" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.DoubleMonoid.#ctor" />
        <element api="M:Math.Base.DoubleMonoid.Addition(System.Double,System.Double)" />
        <element api="M:Math.Base.DoubleMonoid.ToString" />
        <element api="P:Math.Base.DoubleMonoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_DoubleMonoid" />
    </api>
    <api id="Methods.T:Math.Base.DoubleMonoid">
      <topicdata name="DoubleMonoid" group="list" subgroup="Methods" typeTopicId="T:Math.Base.DoubleMonoid" />
      <apidata name="DoubleMonoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.DoubleMonoid.Addition(System.Double,System.Double)" />
        <element api="M:Math.Base.DoubleMonoid.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleMonoid" />
      </containers>
      <file name="Methods_T_Math_Base_DoubleMonoid" />
    </api>
    <api id="Properties.T:Math.Base.DoubleMonoid">
      <topicdata name="DoubleMonoid" group="list" subgroup="Properties" typeTopicId="T:Math.Base.DoubleMonoid" />
      <apidata name="DoubleMonoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.DoubleMonoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleMonoid" />
      </containers>
      <file name="Properties_T_Math_Base_DoubleMonoid" />
    </api>
    <api id="M:Math.Base.DoubleMonoid.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleMonoid" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleMonoid__ctor" />
    </api>
    <api id="M:Math.Base.DoubleMonoid.Addition(System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="leftElement">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="rightElement">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IMonoid`1.Addition(`0,`0)">
          <type api="T:Math.Base.IMonoid`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleMonoid" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleMonoid_Addition" />
    </api>
    <api id="M:Math.Base.DoubleMonoid.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleMonoid" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleMonoid_ToString" />
    </api>
    <api id="P:Math.Base.DoubleMonoid.Zero">
      <topicdata group="api" />
      <apidata name="Zero" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Zero" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <implements>
        <member api="P:Math.Base.IMonoid`1.Zero">
          <type api="T:Math.Base.IMonoid`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleMonoid" ref="true" />
      </containers>
      <file name="P_Math_Base_DoubleMonoid_Zero" />
    </api>
    <api id="T:Math.Base.DoubleRing">
      <topicdata group="api" />
      <apidata name="DoubleRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.DoubleGroup" ref="true" />
          <type api="T:Math.Base.DoubleMonoid" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.DoubleEuclidianRing" ref="true" />
          <type api="T:Math.Base.DoubleField" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Math.Base.DoubleGroup.Inverse(System.Double)" />
        <element api="M:Math.Base.DoubleMonoid.Addition(System.Double,System.Double)" />
        <element api="P:Math.Base.DoubleMonoid.Zero" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Double" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Double" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.DoubleRing.#ctor" />
        <element api="M:Math.Base.DoubleRing.Multiplication(System.Double,System.Double)" />
        <element api="P:Math.Base.DoubleRing.One" />
        <element api="M:Math.Base.DoubleRing.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_DoubleRing" />
    </api>
    <api id="Methods.T:Math.Base.DoubleRing">
      <topicdata name="DoubleRing" group="list" subgroup="Methods" typeTopicId="T:Math.Base.DoubleRing" />
      <apidata name="DoubleRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Math.Base.DoubleGroup.Inverse(System.Double)" />
        <element api="M:Math.Base.DoubleMonoid.Addition(System.Double,System.Double)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Double" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Double" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.DoubleRing.Multiplication(System.Double,System.Double)" />
        <element api="M:Math.Base.DoubleRing.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleRing" />
      </containers>
      <file name="Methods_T_Math_Base_DoubleRing" />
    </api>
    <api id="Properties.T:Math.Base.DoubleRing">
      <topicdata name="DoubleRing" group="list" subgroup="Properties" typeTopicId="T:Math.Base.DoubleRing" />
      <apidata name="DoubleRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.DoubleMonoid.Zero" />
        <element api="P:Math.Base.DoubleRing.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleRing" />
      </containers>
      <file name="Properties_T_Math_Base_DoubleRing" />
    </api>
    <api id="M:Math.Base.DoubleRing.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleRing" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleRing__ctor" />
    </api>
    <api id="M:Math.Base.DoubleRing.Multiplication(System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name="Multiplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="leftElement">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="rightElement">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IRing`1.Multiplication(`0,`0)">
          <type api="T:Math.Base.IRing`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleRing" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleRing_Multiplication" />
    </api>
    <api id="P:Math.Base.DoubleRing.One">
      <topicdata group="api" />
      <apidata name="One" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_One" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <implements>
        <member api="P:Math.Base.IRing`1.One">
          <type api="T:Math.Base.IRing`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleRing" ref="true" />
      </containers>
      <file name="P_Math_Base_DoubleRing_One" />
    </api>
    <api id="M:Math.Base.DoubleRing.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.DoubleGroup.ToString">
          <type api="T:Math.Base.DoubleGroup" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.DoubleRing" ref="true" />
      </containers>
      <file name="M_Math_Base_DoubleRing_ToString" />
    </api>
    <api id="T:Math.Base.IEuclidianRing`1">
      <topicdata group="api" />
      <apidata name="IEuclidianRing" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IEuclidianRing`1" />
          </specialization>
        </type>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IEuclidianRing`1" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IEuclidianRing`1" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IEuclidianRing`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Math.Base.DoubleEuclidianRing" ref="true" />
        <type api="T:Math.Base.ComplexEuclidianRing" ref="true" />
        <type api="T:Math.Base.Int32EuclidianRing" ref="true" />
      </implementors>
      <elements>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:Math.Base.IEuclidianRing`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="T" index="0" api="T:Math.Base.IEuclidianRing`1" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:Math.Base.IEuclidianRing`1" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IEuclidianRing`1.Norm(`0)" />
        <element api="M:Math.Base.IGroup`1.Inverse(`0)" />
        <element api="M:Math.Base.IMonoid`1.Addition(`0,`0)" />
        <element api="P:Math.Base.IMonoid`1.Zero" />
        <element api="M:Math.Base.IRing`1.Multiplication(`0,`0)" />
        <element api="P:Math.Base.IRing`1.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_IEuclidianRing_1" />
    </api>
    <api id="Methods.T:Math.Base.IEuclidianRing`1">
      <topicdata name="IEuclidianRing" group="list" subgroup="Methods" typeTopicId="T:Math.Base.IEuclidianRing`1" />
      <apidata name="IEuclidianRing" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:Math.Base.IEuclidianRing`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="T" index="0" api="T:Math.Base.IEuclidianRing`1" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:Math.Base.IEuclidianRing`1" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IEuclidianRing`1.Norm(`0)" />
        <element api="M:Math.Base.IGroup`1.Inverse(`0)" />
        <element api="M:Math.Base.IMonoid`1.Addition(`0,`0)" />
        <element api="M:Math.Base.IRing`1.Multiplication(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IEuclidianRing`1" />
      </containers>
      <file name="Methods_T_Math_Base_IEuclidianRing_1" />
    </api>
    <api id="Properties.T:Math.Base.IEuclidianRing`1">
      <topicdata name="IEuclidianRing" group="list" subgroup="Properties" typeTopicId="T:Math.Base.IEuclidianRing`1" />
      <apidata name="IEuclidianRing" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Math.Base.IMonoid`1.Zero" />
        <element api="P:Math.Base.IRing`1.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IEuclidianRing`1" />
      </containers>
      <file name="Properties_T_Math_Base_IEuclidianRing_1" />
    </api>
    <api id="M:Math.Base.IEuclidianRing`1.Norm(`0)">
      <topicdata group="api" />
      <apidata name="Norm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="element">
          <template name="T" index="0" api="T:Math.Base.IEuclidianRing`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IEuclidianRing`1" ref="true" />
      </containers>
      <file name="M_Math_Base_IEuclidianRing_1_Norm" />
    </api>
    <api id="T:Math.Base.IField`1">
      <topicdata group="api" />
      <apidata name="IField" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IField`1" />
          </specialization>
        </type>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IField`1" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IField`1" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IField`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Math.Base.DoubleField" ref="true" />
        <type api="T:Math.Base.ComplexField" ref="true" />
      </implementors>
      <elements>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:Math.Base.IField`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="T" index="0" api="T:Math.Base.IField`1" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:Math.Base.IField`1" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IField`1.MultiplicationInverse(`0)" />
        <element api="M:Math.Base.IGroup`1.Inverse(`0)" />
        <element api="M:Math.Base.IMonoid`1.Addition(`0,`0)" />
        <element api="P:Math.Base.IMonoid`1.Zero" />
        <element api="M:Math.Base.IRing`1.Multiplication(`0,`0)" />
        <element api="P:Math.Base.IRing`1.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_IField_1" />
    </api>
    <api id="Methods.T:Math.Base.IField`1">
      <topicdata name="IField" group="list" subgroup="Methods" typeTopicId="T:Math.Base.IField`1" />
      <apidata name="IField" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:Math.Base.IField`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="T" index="0" api="T:Math.Base.IField`1" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:Math.Base.IField`1" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IField`1.MultiplicationInverse(`0)" />
        <element api="M:Math.Base.IGroup`1.Inverse(`0)" />
        <element api="M:Math.Base.IMonoid`1.Addition(`0,`0)" />
        <element api="M:Math.Base.IRing`1.Multiplication(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IField`1" />
      </containers>
      <file name="Methods_T_Math_Base_IField_1" />
    </api>
    <api id="Properties.T:Math.Base.IField`1">
      <topicdata name="IField" group="list" subgroup="Properties" typeTopicId="T:Math.Base.IField`1" />
      <apidata name="IField" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Math.Base.IMonoid`1.Zero" />
        <element api="P:Math.Base.IRing`1.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IField`1" />
      </containers>
      <file name="Properties_T_Math_Base_IField_1" />
    </api>
    <api id="M:Math.Base.IField`1.MultiplicationInverse(`0)">
      <topicdata group="api" />
      <apidata name="MultiplicationInverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="element">
          <template name="T" index="0" api="T:Math.Base.IField`1" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Math.Base.IField`1" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IField`1" ref="true" />
      </containers>
      <file name="M_Math_Base_IField_1_MultiplicationInverse" />
    </api>
    <api id="T:Math.Base.IGroup`1">
      <topicdata group="api" />
      <apidata name="IGroup" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IGroup`1" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IGroup`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Math.Base.DoubleGroup" ref="true" />
        <type api="T:Math.Base.Int32Group" ref="true" />
        <type api="T:Math.Base.ComplexGroup" ref="true" />
        <type api="T:Math.Base.IRing`1" ref="true" />
        <type api="T:Math.Base.DoubleRing" ref="true" />
        <type api="T:Math.Base.ComplexRing" ref="true" />
        <type api="T:Math.Base.Int32Ring" ref="true" />
        <type api="T:Math.Base.IEuclidianRing`1" ref="true" />
        <type api="T:Math.Base.DoubleEuclidianRing" ref="true" />
        <type api="T:Math.Base.ComplexEuclidianRing" ref="true" />
        <type api="T:Math.Base.Int32EuclidianRing" ref="true" />
        <type api="T:Math.Base.IField`1" ref="true" />
        <type api="T:Math.Base.DoubleField" ref="true" />
        <type api="T:Math.Base.ComplexField" ref="true" />
        <type api="T:Math.LinearAlgebra.DirectSumGroup`2" ref="true" />
        <type api="T:Math.LinearAlgebra.DirectSumRing`2" ref="true" />
      </implementors>
      <elements>
        <element api="M:Math.Base.IGroup`1.Inverse(`0)" />
        <element api="M:Math.Base.IMonoid`1.Addition(`0,`0)" />
        <element api="P:Math.Base.IMonoid`1.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_IGroup_1" />
    </api>
    <api id="Methods.T:Math.Base.IGroup`1">
      <topicdata name="IGroup" group="list" subgroup="Methods" typeTopicId="T:Math.Base.IGroup`1" />
      <apidata name="IGroup" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Math.Base.IGroup`1.Inverse(`0)" />
        <element api="M:Math.Base.IMonoid`1.Addition(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IGroup`1" />
      </containers>
      <file name="Methods_T_Math_Base_IGroup_1" />
    </api>
    <api id="Properties.T:Math.Base.IGroup`1">
      <topicdata name="IGroup" group="list" subgroup="Properties" typeTopicId="T:Math.Base.IGroup`1" />
      <apidata name="IGroup" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Math.Base.IMonoid`1.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IGroup`1" />
      </containers>
      <file name="Properties_T_Math_Base_IGroup_1" />
    </api>
    <api id="M:Math.Base.IGroup`1.Inverse(`0)">
      <topicdata group="api" />
      <apidata name="Inverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="element">
          <template name="T" index="0" api="T:Math.Base.IGroup`1" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Math.Base.IGroup`1" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IGroup`1" ref="true" />
      </containers>
      <file name="M_Math_Base_IGroup_1_Inverse" />
    </api>
    <api id="T:Math.Base.IInterval`2">
      <topicdata group="api" />
      <apidata name="IInterval" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.Base.IInterval`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implementors>
        <type api="T:Math.Base.Interval`2" ref="true" />
      </implementors>
      <elements>
        <element api="M:Math.Base.IInterval`2.IsinInterval(`0)" />
        <element api="P:Math.Base.IInterval`2.MaxElement" />
        <element api="P:Math.Base.IInterval`2.MinElement" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_IInterval_2" />
    </api>
    <api id="Methods.T:Math.Base.IInterval`2">
      <topicdata name="IInterval" group="list" subgroup="Methods" typeTopicId="T:Math.Base.IInterval`2" />
      <apidata name="IInterval" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.Base.IInterval`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Math.Base.IInterval`2.IsinInterval(`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IInterval`2" />
      </containers>
      <file name="Methods_T_Math_Base_IInterval_2" />
    </api>
    <api id="Properties.T:Math.Base.IInterval`2">
      <topicdata name="IInterval" group="list" subgroup="Properties" typeTopicId="T:Math.Base.IInterval`2" />
      <apidata name="IInterval" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.Base.IInterval`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Math.Base.IInterval`2.MaxElement" />
        <element api="P:Math.Base.IInterval`2.MinElement" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IInterval`2" />
      </containers>
      <file name="Properties_T_Math_Base_IInterval_2" />
    </api>
    <api id="M:Math.Base.IInterval`2.IsinInterval(`0)">
      <topicdata group="api" />
      <apidata name="IsinInterval" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="elementToCheck">
          <template name="T" index="0" api="T:Math.Base.IInterval`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IInterval`2" ref="true" />
      </containers>
      <file name="M_Math_Base_IInterval_2_IsinInterval" />
    </api>
    <api id="P:Math.Base.IInterval`2.MaxElement">
      <topicdata group="api" />
      <apidata name="MaxElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MaxElement" />
      <returns>
        <template name="T" index="0" api="T:Math.Base.IInterval`2" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IInterval`2" ref="true" />
      </containers>
      <file name="P_Math_Base_IInterval_2_MaxElement" />
    </api>
    <api id="P:Math.Base.IInterval`2.MinElement">
      <topicdata group="api" />
      <apidata name="MinElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MinElement" />
      <returns>
        <template name="T" index="0" api="T:Math.Base.IInterval`2" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IInterval`2" ref="true" />
      </containers>
      <file name="P_Math_Base_IInterval_2_MinElement" />
    </api>
    <api id="T:Math.Base.IModule`4">
      <topicdata group="api" />
      <apidata name="IModule" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TR" />
        <template name="TRing">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="TR" index="0" api="T:Math.Base.IModule`4" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TG" />
        <template name="TGroup">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="TG" index="2" api="T:Math.Base.IModule`4" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implementors>
        <type api="T:Math.Base.IVectorRoom`4" ref="true" />
      </implementors>
      <elements>
        <element api="M:Math.Base.IModule`4.ScalarMultiply(`1,`3)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_IModule_4" />
    </api>
    <api id="Methods.T:Math.Base.IModule`4">
      <topicdata name="IModule" group="list" subgroup="Methods" typeTopicId="T:Math.Base.IModule`4" />
      <apidata name="IModule" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TR" />
        <template name="TRing">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="TR" index="0" api="T:Math.Base.IModule`4" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TG" />
        <template name="TGroup">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="TG" index="2" api="T:Math.Base.IModule`4" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Math.Base.IModule`4.ScalarMultiply(`1,`3)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IModule`4" />
      </containers>
      <file name="Methods_T_Math_Base_IModule_4" />
    </api>
    <api id="M:Math.Base.IModule`4.ScalarMultiply(`1,`3)">
      <topicdata group="api" />
      <apidata name="ScalarMultiply" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="scalar">
          <template name="TRing" index="1" api="T:Math.Base.IModule`4" />
        </parameter>
        <parameter name="groupElement">
          <template name="TGroup" index="3" api="T:Math.Base.IModule`4" />
        </parameter>
      </parameters>
      <returns>
        <template name="TG" index="2" api="T:Math.Base.IModule`4" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IModule`4" ref="true" />
      </containers>
      <file name="M_Math_Base_IModule_4_ScalarMultiply" />
    </api>
    <api id="T:Math.Base.IMonoid`1">
      <topicdata group="api" />
      <apidata name="IMonoid" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IMonoid`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Math.Base.DoubleMonoid" ref="true" />
        <type api="T:Math.Base.IGroup`1" ref="true" />
        <type api="T:Math.Base.DoubleGroup" ref="true" />
        <type api="T:Math.Base.Int32Monoid" ref="true" />
        <type api="T:Math.Base.Int32Group" ref="true" />
        <type api="T:Math.Base.ComplexMonoid" ref="true" />
        <type api="T:Math.Base.ComplexGroup" ref="true" />
        <type api="T:Math.Base.IRing`1" ref="true" />
        <type api="T:Math.Base.DoubleRing" ref="true" />
        <type api="T:Math.Base.ComplexRing" ref="true" />
        <type api="T:Math.Base.Int32Ring" ref="true" />
        <type api="T:Math.Base.IEuclidianRing`1" ref="true" />
        <type api="T:Math.Base.DoubleEuclidianRing" ref="true" />
        <type api="T:Math.Base.ComplexEuclidianRing" ref="true" />
        <type api="T:Math.Base.Int32EuclidianRing" ref="true" />
        <type api="T:Math.Base.UInt32Monoid" ref="true" />
        <type api="T:Math.Base.IField`1" ref="true" />
        <type api="T:Math.Base.DoubleField" ref="true" />
        <type api="T:Math.Base.ComplexField" ref="true" />
        <type api="T:Math.LinearAlgebra.DirectSumMonoid`2" ref="true" />
        <type api="T:Math.LinearAlgebra.DirectSumGroup`2" ref="true" />
        <type api="T:Math.LinearAlgebra.DirectSumRing`2" ref="true" />
      </implementors>
      <elements>
        <element api="M:Math.Base.IMonoid`1.Addition(`0,`0)" />
        <element api="P:Math.Base.IMonoid`1.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_IMonoid_1" />
    </api>
    <api id="Methods.T:Math.Base.IMonoid`1">
      <topicdata name="IMonoid" group="list" subgroup="Methods" typeTopicId="T:Math.Base.IMonoid`1" />
      <apidata name="IMonoid" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Math.Base.IMonoid`1.Addition(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IMonoid`1" />
      </containers>
      <file name="Methods_T_Math_Base_IMonoid_1" />
    </api>
    <api id="Properties.T:Math.Base.IMonoid`1">
      <topicdata name="IMonoid" group="list" subgroup="Properties" typeTopicId="T:Math.Base.IMonoid`1" />
      <apidata name="IMonoid" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Math.Base.IMonoid`1.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IMonoid`1" />
      </containers>
      <file name="Properties_T_Math_Base_IMonoid_1" />
    </api>
    <api id="M:Math.Base.IMonoid`1.Addition(`0,`0)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="leftElement">
          <template name="T" index="0" api="T:Math.Base.IMonoid`1" />
        </parameter>
        <parameter name="rightElement">
          <template name="T" index="0" api="T:Math.Base.IMonoid`1" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Math.Base.IMonoid`1" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IMonoid`1" ref="true" />
      </containers>
      <file name="M_Math_Base_IMonoid_1_Addition" />
    </api>
    <api id="P:Math.Base.IMonoid`1.Zero">
      <topicdata group="api" />
      <apidata name="Zero" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Zero" />
      <returns>
        <template name="T" index="0" api="T:Math.Base.IMonoid`1" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IMonoid`1" ref="true" />
      </containers>
      <file name="P_Math_Base_IMonoid_1_Zero" />
    </api>
    <api id="T:Math.Base.Int32EuclidianRing">
      <topicdata group="api" />
      <apidata name="Int32EuclidianRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Int32Ring" ref="true" />
          <type api="T:Math.Base.Int32Group" ref="true" />
          <type api="T:Math.Base.Int32Monoid" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Math.Base.IEuclidianRing`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Int32" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Int32EuclidianRing.#ctor" />
        <element api="M:Math.Base.Int32EuclidianRing.Norm(System.Int32)" />
        <element api="M:Math.Base.Int32EuclidianRing.ToString" />
        <element api="M:Math.Base.Int32Group.Inverse(System.Int32)" />
        <element api="M:Math.Base.Int32Monoid.Addition(System.Int32,System.Int32)" />
        <element api="P:Math.Base.Int32Monoid.Zero" />
        <element api="M:Math.Base.Int32Ring.Multiplication(System.Int32,System.Int32)" />
        <element api="P:Math.Base.Int32Ring.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_Int32EuclidianRing" />
    </api>
    <api id="Methods.T:Math.Base.Int32EuclidianRing">
      <topicdata name="Int32EuclidianRing" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Int32EuclidianRing" />
      <apidata name="Int32EuclidianRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Int32" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Int32EuclidianRing.Norm(System.Int32)" />
        <element api="M:Math.Base.Int32EuclidianRing.ToString" />
        <element api="M:Math.Base.Int32Group.Inverse(System.Int32)" />
        <element api="M:Math.Base.Int32Monoid.Addition(System.Int32,System.Int32)" />
        <element api="M:Math.Base.Int32Ring.Multiplication(System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32EuclidianRing" />
      </containers>
      <file name="Methods_T_Math_Base_Int32EuclidianRing" />
    </api>
    <api id="Properties.T:Math.Base.Int32EuclidianRing">
      <topicdata name="Int32EuclidianRing" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Int32EuclidianRing" />
      <apidata name="Int32EuclidianRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Int32Monoid.Zero" />
        <element api="P:Math.Base.Int32Ring.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32EuclidianRing" />
      </containers>
      <file name="Properties_T_Math_Base_Int32EuclidianRing" />
    </api>
    <api id="M:Math.Base.Int32EuclidianRing.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32EuclidianRing" ref="true" />
      </containers>
      <file name="M_Math_Base_Int32EuclidianRing__ctor" />
    </api>
    <api id="M:Math.Base.Int32EuclidianRing.Norm(System.Int32)">
      <topicdata group="api" />
      <apidata name="Norm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IEuclidianRing`1.Norm(`0)">
          <type api="T:Math.Base.IEuclidianRing`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32EuclidianRing" ref="true" />
      </containers>
      <file name="M_Math_Base_Int32EuclidianRing_Norm" />
    </api>
    <api id="M:Math.Base.Int32EuclidianRing.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Int32Ring.ToString">
          <type api="T:Math.Base.Int32Ring" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32EuclidianRing" ref="true" />
      </containers>
      <file name="M_Math_Base_Int32EuclidianRing_ToString" />
    </api>
    <api id="T:Math.Base.Int32Group">
      <topicdata group="api" />
      <apidata name="Int32Group" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Int32Monoid" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.Int32Ring" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Int32Group.#ctor" />
        <element api="M:Math.Base.Int32Group.Inverse(System.Int32)" />
        <element api="M:Math.Base.Int32Group.ToString" />
        <element api="M:Math.Base.Int32Monoid.Addition(System.Int32,System.Int32)" />
        <element api="P:Math.Base.Int32Monoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_Int32Group" />
    </api>
    <api id="Methods.T:Math.Base.Int32Group">
      <topicdata name="Int32Group" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Int32Group" />
      <apidata name="Int32Group" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Int32Group.Inverse(System.Int32)" />
        <element api="M:Math.Base.Int32Group.ToString" />
        <element api="M:Math.Base.Int32Monoid.Addition(System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Group" />
      </containers>
      <file name="Methods_T_Math_Base_Int32Group" />
    </api>
    <api id="Properties.T:Math.Base.Int32Group">
      <topicdata name="Int32Group" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Int32Group" />
      <apidata name="Int32Group" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Int32Monoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Group" />
      </containers>
      <file name="Properties_T_Math_Base_Int32Group" />
    </api>
    <api id="M:Math.Base.Int32Group.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Group" ref="true" />
      </containers>
      <file name="M_Math_Base_Int32Group__ctor" />
    </api>
    <api id="M:Math.Base.Int32Group.Inverse(System.Int32)">
      <topicdata group="api" />
      <apidata name="Inverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IGroup`1.Inverse(`0)">
          <type api="T:Math.Base.IGroup`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Group" ref="true" />
      </containers>
      <file name="M_Math_Base_Int32Group_Inverse" />
    </api>
    <api id="M:Math.Base.Int32Group.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Int32Monoid.ToString">
          <type api="T:Math.Base.Int32Monoid" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Group" ref="true" />
      </containers>
      <file name="M_Math_Base_Int32Group_ToString" />
    </api>
    <api id="T:Math.Base.Int32Monoid">
      <topicdata group="api" />
      <apidata name="Int32Monoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.Int32Group" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Int32Monoid.#ctor" />
        <element api="M:Math.Base.Int32Monoid.Addition(System.Int32,System.Int32)" />
        <element api="M:Math.Base.Int32Monoid.ToString" />
        <element api="P:Math.Base.Int32Monoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_Int32Monoid" />
    </api>
    <api id="Methods.T:Math.Base.Int32Monoid">
      <topicdata name="Int32Monoid" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Int32Monoid" />
      <apidata name="Int32Monoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Int32Monoid.Addition(System.Int32,System.Int32)" />
        <element api="M:Math.Base.Int32Monoid.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Monoid" />
      </containers>
      <file name="Methods_T_Math_Base_Int32Monoid" />
    </api>
    <api id="Properties.T:Math.Base.Int32Monoid">
      <topicdata name="Int32Monoid" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Int32Monoid" />
      <apidata name="Int32Monoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Int32Monoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Monoid" />
      </containers>
      <file name="Properties_T_Math_Base_Int32Monoid" />
    </api>
    <api id="M:Math.Base.Int32Monoid.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Monoid" ref="true" />
      </containers>
      <file name="M_Math_Base_Int32Monoid__ctor" />
    </api>
    <api id="M:Math.Base.Int32Monoid.Addition(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="leftElement">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rightElement">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IMonoid`1.Addition(`0,`0)">
          <type api="T:Math.Base.IMonoid`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Monoid" ref="true" />
      </containers>
      <file name="M_Math_Base_Int32Monoid_Addition" />
    </api>
    <api id="M:Math.Base.Int32Monoid.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Monoid" ref="true" />
      </containers>
      <file name="M_Math_Base_Int32Monoid_ToString" />
    </api>
    <api id="P:Math.Base.Int32Monoid.Zero">
      <topicdata group="api" />
      <apidata name="Zero" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Zero" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Math.Base.IMonoid`1.Zero">
          <type api="T:Math.Base.IMonoid`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Monoid" ref="true" />
      </containers>
      <file name="P_Math_Base_Int32Monoid_Zero" />
    </api>
    <api id="T:Math.Base.Int32Ring">
      <topicdata group="api" />
      <apidata name="Int32Ring" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Int32Group" ref="true" />
          <type api="T:Math.Base.Int32Monoid" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.Int32EuclidianRing" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Math.Base.Int32Group.Inverse(System.Int32)" />
        <element api="M:Math.Base.Int32Monoid.Addition(System.Int32,System.Int32)" />
        <element api="P:Math.Base.Int32Monoid.Zero" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Int32" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Int32Ring.#ctor" />
        <element api="M:Math.Base.Int32Ring.Multiplication(System.Int32,System.Int32)" />
        <element api="P:Math.Base.Int32Ring.One" />
        <element api="M:Math.Base.Int32Ring.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_Int32Ring" />
    </api>
    <api id="Methods.T:Math.Base.Int32Ring">
      <topicdata name="Int32Ring" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Int32Ring" />
      <apidata name="Int32Ring" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Math.Base.Int32Group.Inverse(System.Int32)" />
        <element api="M:Math.Base.Int32Monoid.Addition(System.Int32,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Int32" ref="false" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Int32Ring.Multiplication(System.Int32,System.Int32)" />
        <element api="M:Math.Base.Int32Ring.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Ring" />
      </containers>
      <file name="Methods_T_Math_Base_Int32Ring" />
    </api>
    <api id="Properties.T:Math.Base.Int32Ring">
      <topicdata name="Int32Ring" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Int32Ring" />
      <apidata name="Int32Ring" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Int32Monoid.Zero" />
        <element api="P:Math.Base.Int32Ring.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Ring" />
      </containers>
      <file name="Properties_T_Math_Base_Int32Ring" />
    </api>
    <api id="M:Math.Base.Int32Ring.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Ring" ref="true" />
      </containers>
      <file name="M_Math_Base_Int32Ring__ctor" />
    </api>
    <api id="M:Math.Base.Int32Ring.Multiplication(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Multiplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="leftElement">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rightElement">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IRing`1.Multiplication(`0,`0)">
          <type api="T:Math.Base.IRing`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Ring" ref="true" />
      </containers>
      <file name="M_Math_Base_Int32Ring_Multiplication" />
    </api>
    <api id="P:Math.Base.Int32Ring.One">
      <topicdata group="api" />
      <apidata name="One" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_One" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Math.Base.IRing`1.One">
          <type api="T:Math.Base.IRing`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Ring" ref="true" />
      </containers>
      <file name="P_Math_Base_Int32Ring_One" />
    </api>
    <api id="M:Math.Base.Int32Ring.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Int32Group.ToString">
          <type api="T:Math.Base.Int32Group" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Int32Ring" ref="true" />
      </containers>
      <file name="M_Math_Base_Int32Ring_ToString" />
    </api>
    <api id="T:Math.Base.IntegerExtension">
      <topicdata group="api" />
      <apidata name="IntegerExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.Base.IntegerExtension.ChineseRestTerm(System.Int32[],System.Int32[])" />
        <element api="M:Math.Base.IntegerExtension.EuclidianAlgorithm(System.Int32,System.Int32)" />
        <element api="M:Math.Base.IntegerExtension.ExtendedEuclidianAlgorithm(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_Base_IntegerExtension" />
    </api>
    <api id="Methods.T:Math.Base.IntegerExtension">
      <topicdata name="IntegerExtension" group="list" subgroup="Methods" typeTopicId="T:Math.Base.IntegerExtension" />
      <apidata name="IntegerExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.Base.IntegerExtension.ChineseRestTerm(System.Int32[],System.Int32[])" />
        <element api="M:Math.Base.IntegerExtension.EuclidianAlgorithm(System.Int32,System.Int32)" />
        <element api="M:Math.Base.IntegerExtension.ExtendedEuclidianAlgorithm(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IntegerExtension" />
      </containers>
      <file name="Methods_T_Math_Base_IntegerExtension" />
    </api>
    <api id="M:Math.Base.IntegerExtension.ChineseRestTerm(System.Int32[],System.Int32[])">
      <topicdata group="api" />
      <apidata name="ChineseRestTerm" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="moduli">
          <arrayOf rank="1">
            <type api="T:System.Int32" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="x">
          <arrayOf rank="1">
            <type api="T:System.Int32" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IntegerExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_Base_IntegerExtension_ChineseRestTerm" />
    </api>
    <api id="M:Math.Base.IntegerExtension.EuclidianAlgorithm(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="EuclidianAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IntegerExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_Base_IntegerExtension_EuclidianAlgorithm" />
    </api>
    <api id="M:Math.Base.IntegerExtension.ExtendedEuclidianAlgorithm(System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <topicdata group="api" />
      <apidata name="ExtendedEuclidianAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="x" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="y" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IntegerExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_Base_IntegerExtension_ExtendedEuclidianAlgorithm" />
    </api>
    <api id="T:Math.Base.Interval`2">
      <topicdata group="api" />
      <apidata name="Interval" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.Base.Interval`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:Math.Base.IInterval`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.Interval`2" />
            <template name="TStruct" index="1" api="T:Math.Base.Interval`2" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Math.Base.Interval`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.Base.Interval`2" />
                <template name="TStruct" index="1" api="T:Math.Base.Interval`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="Overload:Math.Base.Interval`2.Equals">
          <element api="M:System.Object.Equals(System.Object)">
            <apidata name="Equals" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="obj">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:Math.Base.Interval`2.Equals(Math.Base.Interval{`0,`1})" />
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Interval`2.#ctor(`0,`0)" />
        <element api="M:Math.Base.Interval`2.IsinInterval(`0)" />
        <element api="P:Math.Base.Interval`2.MaxElement" />
        <element api="P:Math.Base.Interval`2.MinElement" />
        <element api="M:Math.Base.Interval`2.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_Interval_2" />
    </api>
    <api id="Methods.T:Math.Base.Interval`2">
      <topicdata name="Interval" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Interval`2" />
      <apidata name="Interval" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.Base.Interval`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="Overload:Math.Base.Interval`2.Equals">
          <element api="M:System.Object.Equals(System.Object)">
            <apidata name="Equals" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="obj">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:Math.Base.Interval`2.Equals(Math.Base.Interval{`0,`1})" />
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Interval`2.IsinInterval(`0)" />
        <element api="M:Math.Base.Interval`2.ToString" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Interval`2" />
      </containers>
      <file name="Methods_T_Math_Base_Interval_2" />
    </api>
    <api id="Properties.T:Math.Base.Interval`2">
      <topicdata name="Interval" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Interval`2" />
      <apidata name="Interval" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.Base.Interval`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Math.Base.Interval`2.MaxElement" />
        <element api="P:Math.Base.Interval`2.MinElement" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Interval`2" />
      </containers>
      <file name="Properties_T_Math_Base_Interval_2" />
    </api>
    <api id="Overload:Math.Base.Interval`2.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Interval`2.Equals(Math.Base.Interval{`0,`1})" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Interval`2" ref="true" />
      </containers>
      <file name="Overload_Math_Base_Interval_2_Equals" />
    </api>
    <api id="M:Math.Base.Interval`2.#ctor(`0,`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="minElement">
          <template name="T" index="0" api="T:Math.Base.Interval`2" />
        </parameter>
        <parameter name="maxElement">
          <template name="T" index="0" api="T:Math.Base.Interval`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Interval`2" ref="true" />
      </containers>
      <file name="M_Math_Base_Interval_2__ctor" />
    </api>
    <api id="M:Math.Base.Interval`2.Equals(Math.Base.Interval{`0,`1})">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Math.Base.Interval`2.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Math.Base.Interval`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.Base.Interval`2" />
              <template name="TStruct" index="1" api="T:Math.Base.Interval`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Math.Base.Interval`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.Base.Interval`2" />
                  <template name="TStruct" index="1" api="T:Math.Base.Interval`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Interval`2" ref="true" />
      </containers>
      <file name="M_Math_Base_Interval_2_Equals" />
    </api>
    <api id="M:Math.Base.Interval`2.IsinInterval(`0)">
      <topicdata group="api" />
      <apidata name="IsinInterval" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="elementToCheck">
          <template name="T" index="0" api="T:Math.Base.Interval`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IInterval`2.IsinInterval(`0)">
          <type api="T:Math.Base.IInterval`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.Base.Interval`2" />
              <template name="TStruct" index="1" api="T:Math.Base.Interval`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Interval`2" ref="true" />
      </containers>
      <file name="M_Math_Base_Interval_2_IsinInterval" />
    </api>
    <api id="P:Math.Base.Interval`2.MaxElement">
      <topicdata group="api" />
      <apidata name="MaxElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_MaxElement" />
      <returns>
        <template name="T" index="0" api="T:Math.Base.Interval`2" />
      </returns>
      <implements>
        <member api="P:Math.Base.IInterval`2.MaxElement">
          <type api="T:Math.Base.IInterval`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.Base.Interval`2" />
              <template name="TStruct" index="1" api="T:Math.Base.Interval`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Interval`2" ref="true" />
      </containers>
      <file name="P_Math_Base_Interval_2_MaxElement" />
    </api>
    <api id="P:Math.Base.Interval`2.MinElement">
      <topicdata group="api" />
      <apidata name="MinElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_MinElement" />
      <returns>
        <template name="T" index="0" api="T:Math.Base.Interval`2" />
      </returns>
      <implements>
        <member api="P:Math.Base.IInterval`2.MinElement">
          <type api="T:Math.Base.IInterval`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.Base.Interval`2" />
              <template name="TStruct" index="1" api="T:Math.Base.Interval`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Interval`2" ref="true" />
      </containers>
      <file name="P_Math_Base_Interval_2_MinElement" />
    </api>
    <api id="M:Math.Base.Interval`2.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.Interval`2" ref="true" />
      </containers>
      <file name="M_Math_Base_Interval_2_ToString" />
    </api>
    <api id="T:Math.Base.IRing`1">
      <topicdata group="api" />
      <apidata name="IRing" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IRing`1" />
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IRing`1" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.IRing`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Math.Base.DoubleRing" ref="true" />
        <type api="T:Math.Base.ComplexRing" ref="true" />
        <type api="T:Math.Base.Int32Ring" ref="true" />
        <type api="T:Math.Base.IEuclidianRing`1" ref="true" />
        <type api="T:Math.Base.DoubleEuclidianRing" ref="true" />
        <type api="T:Math.Base.ComplexEuclidianRing" ref="true" />
        <type api="T:Math.Base.Int32EuclidianRing" ref="true" />
        <type api="T:Math.Base.IField`1" ref="true" />
        <type api="T:Math.Base.DoubleField" ref="true" />
        <type api="T:Math.Base.ComplexField" ref="true" />
        <type api="T:Math.LinearAlgebra.DirectSumRing`2" ref="true" />
      </implementors>
      <elements>
        <element api="M:Math.Base.IGroup`1.Inverse(`0)" />
        <element api="M:Math.Base.IMonoid`1.Addition(`0,`0)" />
        <element api="P:Math.Base.IMonoid`1.Zero" />
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="T" index="0" api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRing`1.Multiplication(`0,`0)" />
        <element api="P:Math.Base.IRing`1.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_IRing_1" />
    </api>
    <api id="Methods.T:Math.Base.IRing`1">
      <topicdata name="IRing" group="list" subgroup="Methods" typeTopicId="T:Math.Base.IRing`1" />
      <apidata name="IRing" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Math.Base.IGroup`1.Inverse(`0)" />
        <element api="M:Math.Base.IMonoid`1.Addition(`0,`0)" />
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="T" index="0" api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" />
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" />
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRing`1.Multiplication(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IRing`1" />
      </containers>
      <file name="Methods_T_Math_Base_IRing_1" />
    </api>
    <api id="Properties.T:Math.Base.IRing`1">
      <topicdata name="IRing" group="list" subgroup="Properties" typeTopicId="T:Math.Base.IRing`1" />
      <apidata name="IRing" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Math.Base.IMonoid`1.Zero" />
        <element api="P:Math.Base.IRing`1.One" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IRing`1" />
      </containers>
      <file name="Properties_T_Math_Base_IRing_1" />
    </api>
    <api id="M:Math.Base.IRing`1.Multiplication(`0,`0)">
      <topicdata group="api" />
      <apidata name="Multiplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="leftElement">
          <template name="T" index="0" api="T:Math.Base.IRing`1" />
        </parameter>
        <parameter name="rightElement">
          <template name="T" index="0" api="T:Math.Base.IRing`1" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Math.Base.IRing`1" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IRing`1" ref="true" />
      </containers>
      <file name="M_Math_Base_IRing_1_Multiplication" />
    </api>
    <api id="P:Math.Base.IRing`1.One">
      <topicdata group="api" />
      <apidata name="One" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_One" />
      <returns>
        <template name="T" index="0" api="T:Math.Base.IRing`1" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IRing`1" ref="true" />
      </containers>
      <file name="P_Math_Base_IRing_1_One" />
    </api>
    <api id="T:Math.Base.IRingExtensions">
      <topicdata group="api" />
      <apidata name="IRingExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_Base_IRingExtensions" />
    </api>
    <api id="Methods.T:Math.Base.IRingExtensions">
      <topicdata name="IRingExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.Base.IRingExtensions" />
      <apidata name="IRingExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IRingExtensions" />
      </containers>
      <file name="Methods_T_Math_Base_IRingExtensions" />
    </api>
    <api id="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)">
      <topicdata group="api" />
      <apidata name="Pow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="ring">
          <type api="T:Math.Base.IRing`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="element">
          <template name="T" index="0" api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" />
        </parameter>
        <parameter name="power">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" />
      </returns>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IRingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_Base_IRingExtensions_Pow__1" />
    </api>
    <api id="T:Math.Base.IStructure`1">
      <topicdata group="api" />
      <apidata name="IStructure" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <implementors>
        <type api="T:Math.Base.IMonoid`1" ref="true" />
        <type api="T:Math.Base.DoubleMonoid" ref="true" />
        <type api="T:Math.Base.IGroup`1" ref="true" />
        <type api="T:Math.Base.DoubleGroup" ref="true" />
        <type api="T:Math.Base.Int32Monoid" ref="true" />
        <type api="T:Math.Base.Int32Group" ref="true" />
        <type api="T:Math.Base.ComplexMonoid" ref="true" />
        <type api="T:Math.Base.ComplexGroup" ref="true" />
        <type api="T:Math.Base.IRing`1" ref="true" />
        <type api="T:Math.Base.DoubleRing" ref="true" />
        <type api="T:Math.Base.ComplexRing" ref="true" />
        <type api="T:Math.Base.Int32Ring" ref="true" />
        <type api="T:Math.Base.IEuclidianRing`1" ref="true" />
        <type api="T:Math.Base.DoubleEuclidianRing" ref="true" />
        <type api="T:Math.Base.ComplexEuclidianRing" ref="true" />
        <type api="T:Math.Base.Int32EuclidianRing" ref="true" />
        <type api="T:Math.Base.UInt32Monoid" ref="true" />
        <type api="T:Math.Base.IField`1" ref="true" />
        <type api="T:Math.Base.DoubleField" ref="true" />
        <type api="T:Math.Base.ComplexField" ref="true" />
        <type api="T:Math.LinearAlgebra.DirectSumMonoid`2" ref="true" />
        <type api="T:Math.LinearAlgebra.DirectSumGroup`2" ref="true" />
        <type api="T:Math.LinearAlgebra.DirectSumRing`2" ref="true" />
      </implementors>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_IStructure_1" />
    </api>
    <api id="T:Math.Base.IVectorRoom`4">
      <topicdata group="api" />
      <apidata name="IVectorRoom" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TF" />
        <template name="TField">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IField`1" ref="true">
                <specialization>
                  <template name="TF" index="0" api="T:Math.Base.IVectorRoom`4" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TG" />
        <template name="TGroup">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="TG" index="2" api="T:Math.Base.IVectorRoom`4" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:Math.Base.IModule`4" ref="true">
          <specialization>
            <template name="TF" index="0" api="T:Math.Base.IVectorRoom`4" />
            <template name="TField" index="1" api="T:Math.Base.IVectorRoom`4" />
            <template name="TG" index="2" api="T:Math.Base.IVectorRoom`4" />
            <template name="TGroup" index="3" api="T:Math.Base.IVectorRoom`4" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Math.Base.IModule`4.ScalarMultiply(`1,`3)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_IVectorRoom_4" />
    </api>
    <api id="Methods.T:Math.Base.IVectorRoom`4">
      <topicdata name="IVectorRoom" group="list" subgroup="Methods" typeTopicId="T:Math.Base.IVectorRoom`4" />
      <apidata name="IVectorRoom" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TF" />
        <template name="TField">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IField`1" ref="true">
                <specialization>
                  <template name="TF" index="0" api="T:Math.Base.IVectorRoom`4" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TG" />
        <template name="TGroup">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="TG" index="2" api="T:Math.Base.IVectorRoom`4" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Math.Base.IModule`4.ScalarMultiply(`1,`3)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.IVectorRoom`4" />
      </containers>
      <file name="Methods_T_Math_Base_IVectorRoom_4" />
    </api>
    <api id="T:Math.Base.UInt32Monoid">
      <topicdata group="api" />
      <apidata name="UInt32Monoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.UInt32" ref="false" />
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:System.UInt32" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.UInt32Monoid.#ctor" />
        <element api="M:Math.Base.UInt32Monoid.Addition(System.UInt32,System.UInt32)" />
        <element api="P:Math.Base.UInt32Monoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
      </containers>
      <file name="T_Math_Base_UInt32Monoid" />
    </api>
    <api id="Methods.T:Math.Base.UInt32Monoid">
      <topicdata name="UInt32Monoid" group="list" subgroup="Methods" typeTopicId="T:Math.Base.UInt32Monoid" />
      <apidata name="UInt32Monoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.UInt32Monoid.Addition(System.UInt32,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.UInt32Monoid" />
      </containers>
      <file name="Methods_T_Math_Base_UInt32Monoid" />
    </api>
    <api id="Properties.T:Math.Base.UInt32Monoid">
      <topicdata name="UInt32Monoid" group="list" subgroup="Properties" typeTopicId="T:Math.Base.UInt32Monoid" />
      <apidata name="UInt32Monoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.UInt32Monoid.Zero" />
      </elements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.UInt32Monoid" />
      </containers>
      <file name="Properties_T_Math_Base_UInt32Monoid" />
    </api>
    <api id="M:Math.Base.UInt32Monoid.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.UInt32Monoid" ref="true" />
      </containers>
      <file name="M_Math_Base_UInt32Monoid__ctor" />
    </api>
    <api id="M:Math.Base.UInt32Monoid.Addition(System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="leftElement">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="rightElement">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <implements>
        <member api="M:Math.Base.IMonoid`1.Addition(`0,`0)">
          <type api="T:Math.Base.IMonoid`1" ref="true">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.UInt32Monoid" ref="true" />
      </containers>
      <file name="M_Math_Base_UInt32Monoid_Addition" />
    </api>
    <api id="P:Math.Base.UInt32Monoid.Zero">
      <topicdata group="api" />
      <apidata name="Zero" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Zero" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <implements>
        <member api="P:Math.Base.IMonoid`1.Zero">
          <type api="T:Math.Base.IMonoid`1" ref="true">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base" />
        <type api="T:Math.Base.UInt32Monoid" ref="true" />
      </containers>
      <file name="P_Math_Base_UInt32Monoid_Zero" />
    </api>
    <api id="N:Math.Base.Tests">
      <topicdata group="api" />
      <apidata name="Math.Base.Tests" group="namespace" />
      <elements>
        <element api="T:Math.Base.Tests.TemplateGroupTest`1" />
        <element api="T:Math.Base.Tests.DoubleGroupTest" />
        <element api="T:Math.Base.Tests.Int32GroupTest" />
        <element api="T:Math.Base.Tests.ComplexGroupTest" />
        <element api="T:Math.Base.Tests.TemplateRingTest`1" />
        <element api="T:Math.Base.Tests.Int32RingTest" />
        <element api="T:Math.Base.Tests.DoubleRingTest" />
        <element api="T:Math.Base.Tests.ComplexRingTest" />
        <element api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" />
        <element api="T:Math.Base.Tests.Int32EuclidianRingTest" />
        <element api="T:Math.Base.Tests.DoubleEuclidianRingTest" />
        <element api="T:Math.Base.Tests.ComplexEuclidianRingTest" />
        <element api="T:Math.Base.Tests.RingExtensionsTest" />
        <element api="T:Math.Base.Tests.EuclidianRingExtensionsTest" />
        <element api="T:Math.Base.Tests.TemplateMonoidTest`1" />
        <element api="T:Math.Base.Tests.UInt32MonoidTest" />
        <element api="T:Math.Base.Tests.TemplateFieldTest`1" />
        <element api="T:Math.Base.Tests.DoubleFieldTest" />
        <element api="T:Math.Base.Tests.ComplexFieldTest" />
        <element api="T:Math.Base.Tests.IntervalTest`2" />
        <element api="T:Math.Base.Tests.DoubleIntervalTest`1" />
      </elements>
      <file name="N_Math_Base_Tests" />
    </api>
    <api id="T:Math.Base.Tests.ComplexEuclidianRingTest">
      <topicdata group="api" />
      <apidata name="ComplexEuclidianRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.ComplexEuclidianRingTest.#ctor" />
        <element api="P:Math.Base.Tests.ComplexEuclidianRingTest.EuclidianRing" />
        <element api="M:Math.Base.Tests.ComplexEuclidianRingTest.TestEuclidianNorm(System.Numerics.Complex,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TemplateTestEuclidianNorm(`0,System.Double)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_ComplexEuclidianRingTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.ComplexEuclidianRingTest">
      <topicdata name="ComplexEuclidianRingTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.ComplexEuclidianRingTest" />
      <apidata name="ComplexEuclidianRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.ComplexEuclidianRingTest.TestEuclidianNorm(System.Numerics.Complex,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TemplateTestEuclidianNorm(`0,System.Double)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexEuclidianRingTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_ComplexEuclidianRingTest" />
    </api>
    <api id="Properties.T:Math.Base.Tests.ComplexEuclidianRingTest">
      <topicdata name="ComplexEuclidianRingTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.ComplexEuclidianRingTest" />
      <apidata name="ComplexEuclidianRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Tests.ComplexEuclidianRingTest.EuclidianRing" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexEuclidianRingTest" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_ComplexEuclidianRingTest" />
    </api>
    <api id="M:Math.Base.Tests.ComplexEuclidianRingTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexEuclidianRingTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_ComplexEuclidianRingTest__ctor" />
    </api>
    <api id="P:Math.Base.Tests.ComplexEuclidianRingTest.EuclidianRing">
      <topicdata group="api" />
      <apidata name="EuclidianRing" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.TemplateEuclidianRingTest`1.EuclidianRing">
          <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_EuclidianRing" />
      <returns>
        <type api="T:Math.Base.IEuclidianRing`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexEuclidianRingTest" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_ComplexEuclidianRingTest_EuclidianRing" />
    </api>
    <api id="M:Math.Base.Tests.ComplexEuclidianRingTest.TestEuclidianNorm(System.Numerics.Complex,System.Double)">
      <topicdata group="api" />
      <apidata name="TestEuclidianNorm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TestEuclidianNorm(`0,System.Double)">
          <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexEuclidianRingTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_ComplexEuclidianRingTest_TestEuclidianNorm" />
    </api>
    <api id="T:Math.Base.Tests.ComplexFieldTest">
      <topicdata group="api" />
      <apidata name="ComplexFieldTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Tests.TemplateFieldTest`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.ComplexFieldTest.#ctor" />
        <element api="P:Math.Base.Tests.ComplexFieldTest.Field" />
        <element api="M:Math.Base.Tests.ComplexFieldTest.TestMultiplicationInverse(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.Tests.TemplateFieldTest`1.TemplateTestMultiplicationInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_ComplexFieldTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.ComplexFieldTest">
      <topicdata name="ComplexFieldTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.ComplexFieldTest" />
      <apidata name="ComplexFieldTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.ComplexFieldTest.TestMultiplicationInverse(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.Tests.TemplateFieldTest`1.TemplateTestMultiplicationInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexFieldTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_ComplexFieldTest" />
    </api>
    <api id="Properties.T:Math.Base.Tests.ComplexFieldTest">
      <topicdata name="ComplexFieldTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.ComplexFieldTest" />
      <apidata name="ComplexFieldTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Tests.ComplexFieldTest.Field" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexFieldTest" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_ComplexFieldTest" />
    </api>
    <api id="M:Math.Base.Tests.ComplexFieldTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexFieldTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_ComplexFieldTest__ctor" />
    </api>
    <api id="P:Math.Base.Tests.ComplexFieldTest.Field">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.TemplateFieldTest`1.Field">
          <type api="T:Math.Base.Tests.TemplateFieldTest`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Field" />
      <returns>
        <type api="T:Math.Base.IField`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexFieldTest" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_ComplexFieldTest_Field" />
    </api>
    <api id="M:Math.Base.Tests.ComplexFieldTest.TestMultiplicationInverse(System.Numerics.Complex,System.Numerics.Complex)">
      <topicdata group="api" />
      <apidata name="TestMultiplicationInverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateFieldTest`1.TestMultiplicationInverse(`0,`0)">
          <type api="T:Math.Base.Tests.TemplateFieldTest`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexFieldTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_ComplexFieldTest_TestMultiplicationInverse" />
    </api>
    <api id="T:Math.Base.Tests.ComplexGroupTest">
      <topicdata group="api" />
      <apidata name="ComplexGroupTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.ComplexGroupTest.#ctor" />
        <element api="P:Math.Base.Tests.ComplexGroupTest.Group" />
        <element api="M:Math.Base.Tests.ComplexGroupTest.TestAddition(System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.Tests.ComplexGroupTest.TestInverse(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestAddition(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_ComplexGroupTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.ComplexGroupTest">
      <topicdata name="ComplexGroupTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.ComplexGroupTest" />
      <apidata name="ComplexGroupTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.ComplexGroupTest.TestAddition(System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.Tests.ComplexGroupTest.TestInverse(System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestAddition(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexGroupTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_ComplexGroupTest" />
    </api>
    <api id="Properties.T:Math.Base.Tests.ComplexGroupTest">
      <topicdata name="ComplexGroupTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.ComplexGroupTest" />
      <apidata name="ComplexGroupTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Tests.ComplexGroupTest.Group" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexGroupTest" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_ComplexGroupTest" />
    </api>
    <api id="M:Math.Base.Tests.ComplexGroupTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexGroupTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_ComplexGroupTest__ctor" />
    </api>
    <api id="P:Math.Base.Tests.ComplexGroupTest.Group">
      <topicdata group="api" />
      <apidata name="Group" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.TemplateGroupTest`1.Group">
          <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Group" />
      <returns>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexGroupTest" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_ComplexGroupTest_Group" />
    </api>
    <api id="M:Math.Base.Tests.ComplexGroupTest.TestAddition(System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)">
      <topicdata group="api" />
      <apidata name="TestAddition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateGroupTest`1.TestAddition(`0,`0,`0)">
          <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="leftInput">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
        <parameter name="rightInput">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
        <parameter name="expectedSum">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexGroupTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_ComplexGroupTest_TestAddition" />
    </api>
    <api id="M:Math.Base.Tests.ComplexGroupTest.TestInverse(System.Numerics.Complex,System.Numerics.Complex)">
      <topicdata group="api" />
      <apidata name="TestInverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateGroupTest`1.TestInverse(`0,`0)">
          <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexGroupTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_ComplexGroupTest_TestInverse" />
    </api>
    <api id="T:Math.Base.Tests.ComplexRingTest">
      <topicdata group="api" />
      <apidata name="ComplexRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Tests.TemplateRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.ComplexRingTest.#ctor" />
        <element api="P:Math.Base.Tests.ComplexRingTest.Ring" />
        <element api="M:Math.Base.Tests.ComplexRingTest.TestMultiplication(System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.Tests.TemplateRingTest`1.TemplateTestMultiplication(`0,`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_ComplexRingTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.ComplexRingTest">
      <topicdata name="ComplexRingTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.ComplexRingTest" />
      <apidata name="ComplexRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.ComplexRingTest.TestMultiplication(System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)" />
        <element api="M:Math.Base.Tests.TemplateRingTest`1.TemplateTestMultiplication(`0,`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexRingTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_ComplexRingTest" />
    </api>
    <api id="Properties.T:Math.Base.Tests.ComplexRingTest">
      <topicdata name="ComplexRingTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.ComplexRingTest" />
      <apidata name="ComplexRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Tests.ComplexRingTest.Ring" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexRingTest" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_ComplexRingTest" />
    </api>
    <api id="M:Math.Base.Tests.ComplexRingTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexRingTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_ComplexRingTest__ctor" />
    </api>
    <api id="P:Math.Base.Tests.ComplexRingTest.Ring">
      <topicdata group="api" />
      <apidata name="Ring" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.TemplateRingTest`1.Ring">
          <type api="T:Math.Base.Tests.TemplateRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Ring" />
      <returns>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexRingTest" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_ComplexRingTest_Ring" />
    </api>
    <api id="M:Math.Base.Tests.ComplexRingTest.TestMultiplication(System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)">
      <topicdata group="api" />
      <apidata name="TestMultiplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateRingTest`1.TestMultiplication(`0,`0,`0)">
          <type api="T:Math.Base.Tests.TemplateRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Numerics.Complex" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="leftInput">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
        <parameter name="rightInput">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Numerics.Complex" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.ComplexRingTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_ComplexRingTest_TestMultiplication" />
    </api>
    <api id="T:Math.Base.Tests.DoubleEuclidianRingTest">
      <topicdata group="api" />
      <apidata name="DoubleEuclidianRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.DoubleEuclidianRingTest.#ctor" />
        <element api="P:Math.Base.Tests.DoubleEuclidianRingTest.EuclidianRing" />
        <element api="M:Math.Base.Tests.DoubleEuclidianRingTest.TestEuclidianNorm(System.Double,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TemplateTestEuclidianNorm(`0,System.Double)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_DoubleEuclidianRingTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.DoubleEuclidianRingTest">
      <topicdata name="DoubleEuclidianRingTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.DoubleEuclidianRingTest" />
      <apidata name="DoubleEuclidianRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.DoubleEuclidianRingTest.TestEuclidianNorm(System.Double,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TemplateTestEuclidianNorm(`0,System.Double)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleEuclidianRingTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_DoubleEuclidianRingTest" />
    </api>
    <api id="Properties.T:Math.Base.Tests.DoubleEuclidianRingTest">
      <topicdata name="DoubleEuclidianRingTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.DoubleEuclidianRingTest" />
      <apidata name="DoubleEuclidianRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Tests.DoubleEuclidianRingTest.EuclidianRing" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleEuclidianRingTest" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_DoubleEuclidianRingTest" />
    </api>
    <api id="M:Math.Base.Tests.DoubleEuclidianRingTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleEuclidianRingTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_DoubleEuclidianRingTest__ctor" />
    </api>
    <api id="P:Math.Base.Tests.DoubleEuclidianRingTest.EuclidianRing">
      <topicdata group="api" />
      <apidata name="EuclidianRing" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.TemplateEuclidianRingTest`1.EuclidianRing">
          <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_EuclidianRing" />
      <returns>
        <type api="T:Math.Base.IEuclidianRing`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleEuclidianRingTest" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_DoubleEuclidianRingTest_EuclidianRing" />
    </api>
    <api id="M:Math.Base.Tests.DoubleEuclidianRingTest.TestEuclidianNorm(System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name="TestEuclidianNorm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TestEuclidianNorm(`0,System.Double)">
          <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleEuclidianRingTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_DoubleEuclidianRingTest_TestEuclidianNorm" />
    </api>
    <api id="T:Math.Base.Tests.DoubleFieldTest">
      <topicdata group="api" />
      <apidata name="DoubleFieldTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Tests.TemplateFieldTest`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.DoubleFieldTest.#ctor" />
        <element api="P:Math.Base.Tests.DoubleFieldTest.Field" />
        <element api="M:Math.Base.Tests.DoubleFieldTest.TestMultiplicationInverse(System.Double,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateFieldTest`1.TemplateTestMultiplicationInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_DoubleFieldTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.DoubleFieldTest">
      <topicdata name="DoubleFieldTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.DoubleFieldTest" />
      <apidata name="DoubleFieldTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.DoubleFieldTest.TestMultiplicationInverse(System.Double,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateFieldTest`1.TemplateTestMultiplicationInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleFieldTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_DoubleFieldTest" />
    </api>
    <api id="Properties.T:Math.Base.Tests.DoubleFieldTest">
      <topicdata name="DoubleFieldTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.DoubleFieldTest" />
      <apidata name="DoubleFieldTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Tests.DoubleFieldTest.Field" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleFieldTest" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_DoubleFieldTest" />
    </api>
    <api id="M:Math.Base.Tests.DoubleFieldTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleFieldTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_DoubleFieldTest__ctor" />
    </api>
    <api id="P:Math.Base.Tests.DoubleFieldTest.Field">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.TemplateFieldTest`1.Field">
          <type api="T:Math.Base.Tests.TemplateFieldTest`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Field" />
      <returns>
        <type api="T:Math.Base.IField`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleFieldTest" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_DoubleFieldTest_Field" />
    </api>
    <api id="M:Math.Base.Tests.DoubleFieldTest.TestMultiplicationInverse(System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name="TestMultiplicationInverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateFieldTest`1.TestMultiplicationInverse(`0,`0)">
          <type api="T:Math.Base.Tests.TemplateFieldTest`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleFieldTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_DoubleFieldTest_TestMultiplicationInverse" />
    </api>
    <api id="T:Math.Base.Tests.DoubleGroupTest">
      <topicdata group="api" />
      <apidata name="DoubleGroupTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.DoubleGroupTest.#ctor" />
        <element api="P:Math.Base.Tests.DoubleGroupTest.Group" />
        <element api="M:Math.Base.Tests.DoubleGroupTest.TestAddition(System.Double,System.Double,System.Double)" />
        <element api="M:Math.Base.Tests.DoubleGroupTest.TestInverse(System.Double,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestAddition(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_DoubleGroupTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.DoubleGroupTest">
      <topicdata name="DoubleGroupTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.DoubleGroupTest" />
      <apidata name="DoubleGroupTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.DoubleGroupTest.TestAddition(System.Double,System.Double,System.Double)" />
        <element api="M:Math.Base.Tests.DoubleGroupTest.TestInverse(System.Double,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestAddition(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleGroupTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_DoubleGroupTest" />
    </api>
    <api id="Properties.T:Math.Base.Tests.DoubleGroupTest">
      <topicdata name="DoubleGroupTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.DoubleGroupTest" />
      <apidata name="DoubleGroupTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Tests.DoubleGroupTest.Group" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleGroupTest" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_DoubleGroupTest" />
    </api>
    <api id="M:Math.Base.Tests.DoubleGroupTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleGroupTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_DoubleGroupTest__ctor" />
    </api>
    <api id="P:Math.Base.Tests.DoubleGroupTest.Group">
      <topicdata group="api" />
      <apidata name="Group" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.TemplateGroupTest`1.Group">
          <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Group" />
      <returns>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleGroupTest" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_DoubleGroupTest_Group" />
    </api>
    <api id="M:Math.Base.Tests.DoubleGroupTest.TestAddition(System.Double,System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name="TestAddition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateGroupTest`1.TestAddition(`0,`0,`0)">
          <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="leftInput">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="rightInput">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="expectedSum">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleGroupTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_DoubleGroupTest_TestAddition" />
    </api>
    <api id="M:Math.Base.Tests.DoubleGroupTest.TestInverse(System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name="TestInverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateGroupTest`1.TestInverse(`0,`0)">
          <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleGroupTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_DoubleGroupTest_TestInverse" />
    </api>
    <api id="T:Math.Base.Tests.DoubleIntervalTest`1">
      <topicdata group="api" />
      <apidata name="DoubleIntervalTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Tests.IntervalTest`2" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
              <template name="TStructure" index="0" api="T:Math.Base.Tests.DoubleIntervalTest`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TStructure">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.DoubleIntervalTest`1.#ctor" />
        <element api="M:Math.Base.Tests.DoubleIntervalTest`1.Construct_RightParameter_IsNotNull(System.Double,System.Double)" />
        <element api="M:Math.Base.Tests.DoubleIntervalTest`1.Construct_WrongParameter_ThrowsException(System.Double,System.Double)" />
        <element api="P:Math.Base.Tests.DoubleIntervalTest`1.ConstructTestDataSource" />
        <element api="P:Math.Base.Tests.DoubleIntervalTest`1.ConstructThrowsTestDataSource" />
        <element api="M:Math.Base.Tests.DoubleIntervalTest`1.IsInInterval_CheckValue_EqualsExpected(System.Double,System.Double,System.Double,System.Boolean)" />
        <element api="P:Math.Base.Tests.DoubleIntervalTest`1.TestDataSource" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_DoubleIntervalTest_1" />
    </api>
    <api id="Methods.T:Math.Base.Tests.DoubleIntervalTest`1">
      <topicdata name="DoubleIntervalTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.DoubleIntervalTest`1" />
      <apidata name="DoubleIntervalTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TStructure">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.DoubleIntervalTest`1.Construct_RightParameter_IsNotNull(System.Double,System.Double)" />
        <element api="M:Math.Base.Tests.DoubleIntervalTest`1.Construct_WrongParameter_ThrowsException(System.Double,System.Double)" />
        <element api="M:Math.Base.Tests.DoubleIntervalTest`1.IsInInterval_CheckValue_EqualsExpected(System.Double,System.Double,System.Double,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleIntervalTest`1" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_DoubleIntervalTest_1" />
    </api>
    <api id="Properties.T:Math.Base.Tests.DoubleIntervalTest`1">
      <topicdata name="DoubleIntervalTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.DoubleIntervalTest`1" />
      <apidata name="DoubleIntervalTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TStructure">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Math.Base.Tests.DoubleIntervalTest`1.ConstructTestDataSource" />
        <element api="P:Math.Base.Tests.DoubleIntervalTest`1.ConstructThrowsTestDataSource" />
        <element api="P:Math.Base.Tests.DoubleIntervalTest`1.TestDataSource" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleIntervalTest`1" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_DoubleIntervalTest_1" />
    </api>
    <api id="M:Math.Base.Tests.DoubleIntervalTest`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleIntervalTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_DoubleIntervalTest_1__ctor" />
    </api>
    <api id="M:Math.Base.Tests.DoubleIntervalTest`1.Construct_RightParameter_IsNotNull(System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name="Construct_RightParameter_IsNotNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.IntervalTest`2.Construct_RightParameter_IsNotNull(`0,`0)">
          <type api="T:Math.Base.Tests.IntervalTest`2" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
              <template name="TStructure" index="0" api="T:Math.Base.Tests.DoubleIntervalTest`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="minElement">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="maxElement">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleIntervalTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_DoubleIntervalTest_1_Construct_RightParameter_IsNotNull" />
    </api>
    <api id="M:Math.Base.Tests.DoubleIntervalTest`1.Construct_WrongParameter_ThrowsException(System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name="Construct_WrongParameter_ThrowsException" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.IntervalTest`2.Construct_WrongParameter_ThrowsException(`0,`0)">
          <type api="T:Math.Base.Tests.IntervalTest`2" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
              <template name="TStructure" index="0" api="T:Math.Base.Tests.DoubleIntervalTest`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="minElement">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="maxElement">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleIntervalTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_DoubleIntervalTest_1_Construct_WrongParameter_ThrowsException" />
    </api>
    <api id="P:Math.Base.Tests.DoubleIntervalTest`1.ConstructTestDataSource">
      <topicdata group="api" />
      <apidata name="ConstructTestDataSource" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.IntervalTest`2.ConstructTestDataSource">
          <type api="T:Math.Base.Tests.IntervalTest`2" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
              <template name="TStructure" index="0" api="T:Math.Base.Tests.DoubleIntervalTest`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ConstructTestDataSource" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:NUnit.Framework.TestCaseData" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleIntervalTest`1" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_DoubleIntervalTest_1_ConstructTestDataSource" />
    </api>
    <api id="P:Math.Base.Tests.DoubleIntervalTest`1.ConstructThrowsTestDataSource">
      <topicdata group="api" />
      <apidata name="ConstructThrowsTestDataSource" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.IntervalTest`2.ConstructThrowsTestDataSource">
          <type api="T:Math.Base.Tests.IntervalTest`2" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
              <template name="TStructure" index="0" api="T:Math.Base.Tests.DoubleIntervalTest`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ConstructThrowsTestDataSource" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:NUnit.Framework.TestCaseData" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleIntervalTest`1" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_DoubleIntervalTest_1_ConstructThrowsTestDataSource" />
    </api>
    <api id="M:Math.Base.Tests.DoubleIntervalTest`1.IsInInterval_CheckValue_EqualsExpected(System.Double,System.Double,System.Double,System.Boolean)">
      <topicdata group="api" />
      <apidata name="IsInInterval_CheckValue_EqualsExpected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.IntervalTest`2.IsInInterval_CheckValue_EqualsExpected(`0,`0,`0,System.Boolean)">
          <type api="T:Math.Base.Tests.IntervalTest`2" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
              <template name="TStructure" index="0" api="T:Math.Base.Tests.DoubleIntervalTest`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="minElement">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="maxElement">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="elementToCheck">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleIntervalTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_DoubleIntervalTest_1_IsInInterval_CheckValue_EqualsExpected" />
    </api>
    <api id="P:Math.Base.Tests.DoubleIntervalTest`1.TestDataSource">
      <topicdata group="api" />
      <apidata name="TestDataSource" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.IntervalTest`2.TestDataSource">
          <type api="T:Math.Base.Tests.IntervalTest`2" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
              <template name="TStructure" index="0" api="T:Math.Base.Tests.DoubleIntervalTest`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TestDataSource" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:NUnit.Framework.TestCaseData" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleIntervalTest`1" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_DoubleIntervalTest_1_TestDataSource" />
    </api>
    <api id="T:Math.Base.Tests.DoubleRingTest">
      <topicdata group="api" />
      <apidata name="DoubleRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Tests.TemplateRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.DoubleRingTest.#ctor" />
        <element api="P:Math.Base.Tests.DoubleRingTest.Ring" />
        <element api="M:Math.Base.Tests.DoubleRingTest.TestMultiplication(System.Double,System.Double,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateRingTest`1.TemplateTestMultiplication(`0,`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_DoubleRingTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.DoubleRingTest">
      <topicdata name="DoubleRingTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.DoubleRingTest" />
      <apidata name="DoubleRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.DoubleRingTest.TestMultiplication(System.Double,System.Double,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateRingTest`1.TemplateTestMultiplication(`0,`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleRingTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_DoubleRingTest" />
    </api>
    <api id="Properties.T:Math.Base.Tests.DoubleRingTest">
      <topicdata name="DoubleRingTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.DoubleRingTest" />
      <apidata name="DoubleRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Tests.DoubleRingTest.Ring" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleRingTest" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_DoubleRingTest" />
    </api>
    <api id="M:Math.Base.Tests.DoubleRingTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleRingTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_DoubleRingTest__ctor" />
    </api>
    <api id="P:Math.Base.Tests.DoubleRingTest.Ring">
      <topicdata group="api" />
      <apidata name="Ring" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.TemplateRingTest`1.Ring">
          <type api="T:Math.Base.Tests.TemplateRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Ring" />
      <returns>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleRingTest" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_DoubleRingTest_Ring" />
    </api>
    <api id="M:Math.Base.Tests.DoubleRingTest.TestMultiplication(System.Double,System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name="TestMultiplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateRingTest`1.TestMultiplication(`0,`0,`0)">
          <type api="T:Math.Base.Tests.TemplateRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="leftInput">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="rightInput">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.DoubleRingTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_DoubleRingTest_TestMultiplication" />
    </api>
    <api id="T:Math.Base.Tests.EuclidianRingExtensionsTest">
      <topicdata group="api" />
      <apidata name="EuclidianRingExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.EuclidianRingExtensionsTest.#ctor" />
        <element api="M:Math.Base.Tests.EuclidianRingExtensionsTest.TestChineseRestTermHelper" />
        <element api="M:Math.Base.Tests.EuclidianRingExtensionsTest.TestEuclidianAlgorithm" />
        <element api="M:Math.Base.Tests.EuclidianRingExtensionsTest.TestExtendedEuclidianAlgorithm" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_EuclidianRingExtensionsTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.EuclidianRingExtensionsTest">
      <topicdata name="EuclidianRingExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.EuclidianRingExtensionsTest" />
      <apidata name="EuclidianRingExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.EuclidianRingExtensionsTest.TestChineseRestTermHelper" />
        <element api="M:Math.Base.Tests.EuclidianRingExtensionsTest.TestEuclidianAlgorithm" />
        <element api="M:Math.Base.Tests.EuclidianRingExtensionsTest.TestExtendedEuclidianAlgorithm" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.EuclidianRingExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_EuclidianRingExtensionsTest" />
    </api>
    <api id="M:Math.Base.Tests.EuclidianRingExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.EuclidianRingExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_EuclidianRingExtensionsTest__ctor" />
    </api>
    <api id="M:Math.Base.Tests.EuclidianRingExtensionsTest.TestChineseRestTermHelper">
      <topicdata group="api" />
      <apidata name="TestChineseRestTermHelper" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.EuclidianRingExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_EuclidianRingExtensionsTest_TestChineseRestTermHelper" />
    </api>
    <api id="M:Math.Base.Tests.EuclidianRingExtensionsTest.TestEuclidianAlgorithm">
      <topicdata group="api" />
      <apidata name="TestEuclidianAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.EuclidianRingExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_EuclidianRingExtensionsTest_TestEuclidianAlgorithm" />
    </api>
    <api id="M:Math.Base.Tests.EuclidianRingExtensionsTest.TestExtendedEuclidianAlgorithm">
      <topicdata group="api" />
      <apidata name="TestExtendedEuclidianAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.EuclidianRingExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_EuclidianRingExtensionsTest_TestExtendedEuclidianAlgorithm" />
    </api>
    <api id="T:Math.Base.Tests.Int32EuclidianRingTest">
      <topicdata group="api" />
      <apidata name="Int32EuclidianRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.Int32EuclidianRingTest.#ctor" />
        <element api="P:Math.Base.Tests.Int32EuclidianRingTest.EuclidianRing" />
        <element api="M:Math.Base.Tests.Int32EuclidianRingTest.TestEuclidianNorm(System.Int32,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TemplateTestEuclidianNorm(`0,System.Double)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_Int32EuclidianRingTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.Int32EuclidianRingTest">
      <topicdata name="Int32EuclidianRingTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.Int32EuclidianRingTest" />
      <apidata name="Int32EuclidianRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.Int32EuclidianRingTest.TestEuclidianNorm(System.Int32,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TemplateTestEuclidianNorm(`0,System.Double)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32EuclidianRingTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_Int32EuclidianRingTest" />
    </api>
    <api id="Properties.T:Math.Base.Tests.Int32EuclidianRingTest">
      <topicdata name="Int32EuclidianRingTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.Int32EuclidianRingTest" />
      <apidata name="Int32EuclidianRingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Tests.Int32EuclidianRingTest.EuclidianRing" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32EuclidianRingTest" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_Int32EuclidianRingTest" />
    </api>
    <api id="M:Math.Base.Tests.Int32EuclidianRingTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32EuclidianRingTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_Int32EuclidianRingTest__ctor" />
    </api>
    <api id="P:Math.Base.Tests.Int32EuclidianRingTest.EuclidianRing">
      <topicdata group="api" />
      <apidata name="EuclidianRing" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.TemplateEuclidianRingTest`1.EuclidianRing">
          <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_EuclidianRing" />
      <returns>
        <type api="T:Math.Base.IEuclidianRing`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32EuclidianRingTest" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_Int32EuclidianRingTest_EuclidianRing" />
    </api>
    <api id="M:Math.Base.Tests.Int32EuclidianRingTest.TestEuclidianNorm(System.Int32,System.Double)">
      <topicdata group="api" />
      <apidata name="TestEuclidianNorm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TestEuclidianNorm(`0,System.Double)">
          <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32EuclidianRingTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_Int32EuclidianRingTest_TestEuclidianNorm" />
    </api>
    <api id="T:Math.Base.Tests.Int32GroupTest">
      <topicdata group="api" />
      <apidata name="Int32GroupTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.Int32GroupTest.#ctor" />
        <element api="P:Math.Base.Tests.Int32GroupTest.Group" />
        <element api="M:Math.Base.Tests.Int32GroupTest.TestAddition(System.Int32,System.Int32,System.Int32)" />
        <element api="M:Math.Base.Tests.Int32GroupTest.TestInverse(System.Int32,System.Int32)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestAddition(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_Int32GroupTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.Int32GroupTest">
      <topicdata name="Int32GroupTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.Int32GroupTest" />
      <apidata name="Int32GroupTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.Int32GroupTest.TestAddition(System.Int32,System.Int32,System.Int32)" />
        <element api="M:Math.Base.Tests.Int32GroupTest.TestInverse(System.Int32,System.Int32)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestAddition(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32GroupTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_Int32GroupTest" />
    </api>
    <api id="Properties.T:Math.Base.Tests.Int32GroupTest">
      <topicdata name="Int32GroupTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.Int32GroupTest" />
      <apidata name="Int32GroupTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Tests.Int32GroupTest.Group" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32GroupTest" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_Int32GroupTest" />
    </api>
    <api id="M:Math.Base.Tests.Int32GroupTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32GroupTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_Int32GroupTest__ctor" />
    </api>
    <api id="P:Math.Base.Tests.Int32GroupTest.Group">
      <topicdata group="api" />
      <apidata name="Group" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.TemplateGroupTest`1.Group">
          <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Group" />
      <returns>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32GroupTest" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_Int32GroupTest_Group" />
    </api>
    <api id="M:Math.Base.Tests.Int32GroupTest.TestAddition(System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="TestAddition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateGroupTest`1.TestAddition(`0,`0,`0)">
          <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="leftInput">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rightInput">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="expectedSum">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32GroupTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_Int32GroupTest_TestAddition" />
    </api>
    <api id="M:Math.Base.Tests.Int32GroupTest.TestInverse(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="TestInverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateGroupTest`1.TestInverse(`0,`0)">
          <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32GroupTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_Int32GroupTest_TestInverse" />
    </api>
    <api id="T:Math.Base.Tests.Int32RingTest">
      <topicdata group="api" />
      <apidata name="Int32RingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Tests.TemplateRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.Int32RingTest.#ctor" />
        <element api="P:Math.Base.Tests.Int32RingTest.Ring" />
        <element api="M:Math.Base.Tests.Int32RingTest.TestMultiplication(System.Int32,System.Int32,System.Int32)" />
        <element api="M:Math.Base.Tests.TemplateRingTest`1.TemplateTestMultiplication(`0,`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_Int32RingTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.Int32RingTest">
      <topicdata name="Int32RingTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.Int32RingTest" />
      <apidata name="Int32RingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.Int32RingTest.TestMultiplication(System.Int32,System.Int32,System.Int32)" />
        <element api="M:Math.Base.Tests.TemplateRingTest`1.TemplateTestMultiplication(`0,`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32RingTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_Int32RingTest" />
    </api>
    <api id="Properties.T:Math.Base.Tests.Int32RingTest">
      <topicdata name="Int32RingTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.Int32RingTest" />
      <apidata name="Int32RingTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Tests.Int32RingTest.Ring" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32RingTest" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_Int32RingTest" />
    </api>
    <api id="M:Math.Base.Tests.Int32RingTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32RingTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_Int32RingTest__ctor" />
    </api>
    <api id="P:Math.Base.Tests.Int32RingTest.Ring">
      <topicdata group="api" />
      <apidata name="Ring" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.TemplateRingTest`1.Ring">
          <type api="T:Math.Base.Tests.TemplateRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Ring" />
      <returns>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32RingTest" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_Int32RingTest_Ring" />
    </api>
    <api id="M:Math.Base.Tests.Int32RingTest.TestMultiplication(System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="TestMultiplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateRingTest`1.TestMultiplication(`0,`0,`0)">
          <type api="T:Math.Base.Tests.TemplateRingTest`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="leftInput">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rightInput">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.Int32RingTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_Int32RingTest_TestMultiplication" />
    </api>
    <api id="T:Math.Base.Tests.IntervalTest`2">
      <topicdata group="api" />
      <apidata name="IntervalTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.Tests.DoubleIntervalTest`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.Base.Tests.IntervalTest`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.IntervalTest`2.#ctor" />
        <element api="M:Math.Base.Tests.IntervalTest`2.Construct_RightParameter_IsNotNull(`0,`0)" />
        <element api="M:Math.Base.Tests.IntervalTest`2.Construct_WrongParameter_ThrowsException(`0,`0)" />
        <element api="P:Math.Base.Tests.IntervalTest`2.ConstructTestDataSource" />
        <element api="P:Math.Base.Tests.IntervalTest`2.ConstructThrowsTestDataSource" />
        <element api="M:Math.Base.Tests.IntervalTest`2.IsInInterval_CheckValue_EqualsExpected(`0,`0,`0,System.Boolean)" />
        <element api="P:Math.Base.Tests.IntervalTest`2.TestDataSource" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_IntervalTest_2" />
    </api>
    <api id="Methods.T:Math.Base.Tests.IntervalTest`2">
      <topicdata name="IntervalTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.IntervalTest`2" />
      <apidata name="IntervalTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.Base.Tests.IntervalTest`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.IntervalTest`2.Construct_RightParameter_IsNotNull(`0,`0)" />
        <element api="M:Math.Base.Tests.IntervalTest`2.Construct_WrongParameter_ThrowsException(`0,`0)" />
        <element api="M:Math.Base.Tests.IntervalTest`2.IsInInterval_CheckValue_EqualsExpected(`0,`0,`0,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.IntervalTest`2" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_IntervalTest_2" />
    </api>
    <api id="Properties.T:Math.Base.Tests.IntervalTest`2">
      <topicdata name="IntervalTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.IntervalTest`2" />
      <apidata name="IntervalTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.Base.Tests.IntervalTest`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Math.Base.Tests.IntervalTest`2.ConstructTestDataSource" />
        <element api="P:Math.Base.Tests.IntervalTest`2.ConstructThrowsTestDataSource" />
        <element api="P:Math.Base.Tests.IntervalTest`2.TestDataSource" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.IntervalTest`2" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_IntervalTest_2" />
    </api>
    <api id="M:Math.Base.Tests.IntervalTest`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.IntervalTest`2" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_IntervalTest_2__ctor" />
    </api>
    <api id="M:Math.Base.Tests.IntervalTest`2.Construct_RightParameter_IsNotNull(`0,`0)">
      <topicdata group="api" />
      <apidata name="Construct_RightParameter_IsNotNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="minElement">
          <template name="T" index="0" api="T:Math.Base.Tests.IntervalTest`2" />
        </parameter>
        <parameter name="maxElement">
          <template name="T" index="0" api="T:Math.Base.Tests.IntervalTest`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.IntervalTest`2" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_IntervalTest_2_Construct_RightParameter_IsNotNull" />
    </api>
    <api id="M:Math.Base.Tests.IntervalTest`2.Construct_WrongParameter_ThrowsException(`0,`0)">
      <topicdata group="api" />
      <apidata name="Construct_WrongParameter_ThrowsException" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="minElement">
          <template name="T" index="0" api="T:Math.Base.Tests.IntervalTest`2" />
        </parameter>
        <parameter name="maxElement">
          <template name="T" index="0" api="T:Math.Base.Tests.IntervalTest`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.IntervalTest`2" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_IntervalTest_2_Construct_WrongParameter_ThrowsException" />
    </api>
    <api id="P:Math.Base.Tests.IntervalTest`2.ConstructTestDataSource">
      <topicdata group="api" />
      <apidata name="ConstructTestDataSource" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ConstructTestDataSource" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:NUnit.Framework.TestCaseData" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.IntervalTest`2" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_IntervalTest_2_ConstructTestDataSource" />
    </api>
    <api id="P:Math.Base.Tests.IntervalTest`2.ConstructThrowsTestDataSource">
      <topicdata group="api" />
      <apidata name="ConstructThrowsTestDataSource" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ConstructThrowsTestDataSource" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:NUnit.Framework.TestCaseData" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.IntervalTest`2" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_IntervalTest_2_ConstructThrowsTestDataSource" />
    </api>
    <api id="M:Math.Base.Tests.IntervalTest`2.IsInInterval_CheckValue_EqualsExpected(`0,`0,`0,System.Boolean)">
      <topicdata group="api" />
      <apidata name="IsInInterval_CheckValue_EqualsExpected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="minElement">
          <template name="T" index="0" api="T:Math.Base.Tests.IntervalTest`2" />
        </parameter>
        <parameter name="maxElement">
          <template name="T" index="0" api="T:Math.Base.Tests.IntervalTest`2" />
        </parameter>
        <parameter name="elementToCheck">
          <template name="T" index="0" api="T:Math.Base.Tests.IntervalTest`2" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.IntervalTest`2" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_IntervalTest_2_IsInInterval_CheckValue_EqualsExpected" />
    </api>
    <api id="P:Math.Base.Tests.IntervalTest`2.TestDataSource">
      <topicdata group="api" />
      <apidata name="TestDataSource" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TestDataSource" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:NUnit.Framework.TestCaseData" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.IntervalTest`2" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_IntervalTest_2_TestDataSource" />
    </api>
    <api id="T:Math.Base.Tests.RingExtensionsTest">
      <topicdata group="api" />
      <apidata name="RingExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.RingExtensionsTest.#ctor" />
        <element api="M:Math.Base.Tests.RingExtensionsTest.Pow_CheckResult_AreEqual``1(``0,System.UInt32,``0,Math.Base.IRing{``0})" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_RingExtensionsTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.RingExtensionsTest">
      <topicdata name="RingExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.RingExtensionsTest" />
      <apidata name="RingExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.RingExtensionsTest.Pow_CheckResult_AreEqual``1(``0,System.UInt32,``0,Math.Base.IRing{``0})" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.RingExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_RingExtensionsTest" />
    </api>
    <api id="M:Math.Base.Tests.RingExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.RingExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_RingExtensionsTest__ctor" />
    </api>
    <api id="M:Math.Base.Tests.RingExtensionsTest.Pow_CheckResult_AreEqual``1(``0,System.UInt32,``0,Math.Base.IRing{``0})">
      <topicdata group="api" />
      <apidata name="Pow_CheckResult_AreEqual" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="factor">
          <template name="T" index="0" api="M:Math.Base.Tests.RingExtensionsTest.Pow_CheckResult_AreEqual``1(``0,System.UInt32,``0,Math.Base.IRing{``0})" />
        </parameter>
        <parameter name="power">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="expected">
          <template name="T" index="0" api="M:Math.Base.Tests.RingExtensionsTest.Pow_CheckResult_AreEqual``1(``0,System.UInt32,``0,Math.Base.IRing{``0})" />
        </parameter>
        <parameter name="ring">
          <type api="T:Math.Base.IRing`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.Base.Tests.RingExtensionsTest.Pow_CheckResult_AreEqual``1(``0,System.UInt32,``0,Math.Base.IRing{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.RingExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_RingExtensionsTest_Pow_CheckResult_AreEqual__1" />
    </api>
    <api id="T:Math.Base.Tests.TemplateEuclidianRingTest`1">
      <topicdata group="api" />
      <apidata name="TemplateEuclidianRingTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.Tests.Int32EuclidianRingTest" ref="true" />
          <type api="T:Math.Base.Tests.DoubleEuclidianRingTest" ref="true" />
          <type api="T:Math.Base.Tests.ComplexEuclidianRingTest" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.#ctor" />
        <element api="P:Math.Base.Tests.TemplateEuclidianRingTest`1.EuclidianRing" />
        <element api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TemplateTestEuclidianNorm(`0,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TestEuclidianNorm(`0,System.Double)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_TemplateEuclidianRingTest_1" />
    </api>
    <api id="Methods.T:Math.Base.Tests.TemplateEuclidianRingTest`1">
      <topicdata name="TemplateEuclidianRingTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.TemplateEuclidianRingTest`1" />
      <apidata name="TemplateEuclidianRingTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TemplateTestEuclidianNorm(`0,System.Double)" />
        <element api="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TestEuclidianNorm(`0,System.Double)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_TemplateEuclidianRingTest_1" />
    </api>
    <api id="Properties.T:Math.Base.Tests.TemplateEuclidianRingTest`1">
      <topicdata name="TemplateEuclidianRingTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.TemplateEuclidianRingTest`1" />
      <apidata name="TemplateEuclidianRingTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Math.Base.Tests.TemplateEuclidianRingTest`1.EuclidianRing" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_TemplateEuclidianRingTest_1" />
    </api>
    <api id="M:Math.Base.Tests.TemplateEuclidianRingTest`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateEuclidianRingTest_1__ctor" />
    </api>
    <api id="P:Math.Base.Tests.TemplateEuclidianRingTest`1.EuclidianRing">
      <topicdata group="api" />
      <apidata name="EuclidianRing" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_EuclidianRing" />
      <returns>
        <type api="T:Math.Base.IEuclidianRing`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_TemplateEuclidianRingTest_1_EuclidianRing" />
    </api>
    <api id="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TemplateTestEuclidianNorm(`0,System.Double)">
      <topicdata group="api" />
      <apidata name="TemplateTestEuclidianNorm" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateEuclidianRingTest_1_TemplateTestEuclidianNorm" />
    </api>
    <api id="M:Math.Base.Tests.TemplateEuclidianRingTest`1.TestEuclidianNorm(`0,System.Double)">
      <topicdata group="api" />
      <apidata name="TestEuclidianNorm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="input">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" />
        </parameter>
        <parameter name="expected">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateEuclidianRingTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateEuclidianRingTest_1_TestEuclidianNorm" />
    </api>
    <api id="T:Math.Base.Tests.TemplateFieldTest`1">
      <topicdata group="api" />
      <apidata name="TemplateFieldTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.Tests.DoubleFieldTest" ref="true" />
          <type api="T:Math.Base.Tests.ComplexFieldTest" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.TemplateFieldTest`1.#ctor" />
        <element api="P:Math.Base.Tests.TemplateFieldTest`1.Field" />
        <element api="M:Math.Base.Tests.TemplateFieldTest`1.TemplateTestMultiplicationInverse(`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateFieldTest`1.TestMultiplicationInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_TemplateFieldTest_1" />
    </api>
    <api id="Methods.T:Math.Base.Tests.TemplateFieldTest`1">
      <topicdata name="TemplateFieldTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.TemplateFieldTest`1" />
      <apidata name="TemplateFieldTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.TemplateFieldTest`1.TemplateTestMultiplicationInverse(`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateFieldTest`1.TestMultiplicationInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateFieldTest`1" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_TemplateFieldTest_1" />
    </api>
    <api id="Properties.T:Math.Base.Tests.TemplateFieldTest`1">
      <topicdata name="TemplateFieldTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.TemplateFieldTest`1" />
      <apidata name="TemplateFieldTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Math.Base.Tests.TemplateFieldTest`1.Field" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateFieldTest`1" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_TemplateFieldTest_1" />
    </api>
    <api id="M:Math.Base.Tests.TemplateFieldTest`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateFieldTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateFieldTest_1__ctor" />
    </api>
    <api id="P:Math.Base.Tests.TemplateFieldTest`1.Field">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Field" />
      <returns>
        <type api="T:Math.Base.IField`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.Tests.TemplateFieldTest`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateFieldTest`1" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_TemplateFieldTest_1_Field" />
    </api>
    <api id="M:Math.Base.Tests.TemplateFieldTest`1.TemplateTestMultiplicationInverse(`0,`0)">
      <topicdata group="api" />
      <apidata name="TemplateTestMultiplicationInverse" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateFieldTest`1" />
        </parameter>
        <parameter name="expected">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateFieldTest`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateFieldTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateFieldTest_1_TemplateTestMultiplicationInverse" />
    </api>
    <api id="M:Math.Base.Tests.TemplateFieldTest`1.TestMultiplicationInverse(`0,`0)">
      <topicdata group="api" />
      <apidata name="TestMultiplicationInverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="input">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateFieldTest`1" />
        </parameter>
        <parameter name="expected">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateFieldTest`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateFieldTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateFieldTest_1_TestMultiplicationInverse" />
    </api>
    <api id="T:Math.Base.Tests.TemplateGroupTest`1">
      <topicdata group="api" />
      <apidata name="TemplateGroupTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.Tests.DoubleGroupTest" ref="true" />
          <type api="T:Math.Base.Tests.Int32GroupTest" ref="true" />
          <type api="T:Math.Base.Tests.ComplexGroupTest" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.#ctor" />
        <element api="P:Math.Base.Tests.TemplateGroupTest`1.Group" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestAddition(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestInverse(`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TestAddition(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TestInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_TemplateGroupTest_1" />
    </api>
    <api id="Methods.T:Math.Base.Tests.TemplateGroupTest`1">
      <topicdata name="TemplateGroupTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.TemplateGroupTest`1" />
      <apidata name="TemplateGroupTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestAddition(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestInverse(`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TestAddition(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateGroupTest`1.TestInverse(`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateGroupTest`1" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_TemplateGroupTest_1" />
    </api>
    <api id="Properties.T:Math.Base.Tests.TemplateGroupTest`1">
      <topicdata name="TemplateGroupTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.TemplateGroupTest`1" />
      <apidata name="TemplateGroupTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Math.Base.Tests.TemplateGroupTest`1.Group" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateGroupTest`1" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_TemplateGroupTest_1" />
    </api>
    <api id="M:Math.Base.Tests.TemplateGroupTest`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateGroupTest_1__ctor" />
    </api>
    <api id="P:Math.Base.Tests.TemplateGroupTest`1.Group">
      <topicdata group="api" />
      <apidata name="Group" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Group" />
      <returns>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.Tests.TemplateGroupTest`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_TemplateGroupTest_1_Group" />
    </api>
    <api id="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestAddition(`0,`0,`0)">
      <topicdata group="api" />
      <apidata name="TemplateTestAddition" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="leftInput">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateGroupTest`1" />
        </parameter>
        <parameter name="rightInput">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateGroupTest`1" />
        </parameter>
        <parameter name="expectedSum">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateGroupTest`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateGroupTest_1_TemplateTestAddition" />
    </api>
    <api id="M:Math.Base.Tests.TemplateGroupTest`1.TemplateTestInverse(`0,`0)">
      <topicdata group="api" />
      <apidata name="TemplateTestInverse" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateGroupTest`1" />
        </parameter>
        <parameter name="expected">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateGroupTest`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateGroupTest_1_TemplateTestInverse" />
    </api>
    <api id="M:Math.Base.Tests.TemplateGroupTest`1.TestAddition(`0,`0,`0)">
      <topicdata group="api" />
      <apidata name="TestAddition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="leftInput">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateGroupTest`1" />
        </parameter>
        <parameter name="rightInput">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateGroupTest`1" />
        </parameter>
        <parameter name="expectedSum">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateGroupTest`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateGroupTest_1_TestAddition" />
    </api>
    <api id="M:Math.Base.Tests.TemplateGroupTest`1.TestInverse(`0,`0)">
      <topicdata group="api" />
      <apidata name="TestInverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="input">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateGroupTest`1" />
        </parameter>
        <parameter name="expected">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateGroupTest`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateGroupTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateGroupTest_1_TestInverse" />
    </api>
    <api id="T:Math.Base.Tests.TemplateMonoidTest`1">
      <topicdata group="api" />
      <apidata name="TemplateMonoidTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.Tests.UInt32MonoidTest" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.TemplateMonoidTest`1.#ctor" />
        <element api="P:Math.Base.Tests.TemplateMonoidTest`1.Monoid" />
        <element api="M:Math.Base.Tests.TemplateMonoidTest`1.TemplateTestAddition(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateMonoidTest`1.TestAddition(`0,`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_TemplateMonoidTest_1" />
    </api>
    <api id="Methods.T:Math.Base.Tests.TemplateMonoidTest`1">
      <topicdata name="TemplateMonoidTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.TemplateMonoidTest`1" />
      <apidata name="TemplateMonoidTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.TemplateMonoidTest`1.TemplateTestAddition(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateMonoidTest`1.TestAddition(`0,`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateMonoidTest`1" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_TemplateMonoidTest_1" />
    </api>
    <api id="Properties.T:Math.Base.Tests.TemplateMonoidTest`1">
      <topicdata name="TemplateMonoidTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.TemplateMonoidTest`1" />
      <apidata name="TemplateMonoidTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Math.Base.Tests.TemplateMonoidTest`1.Monoid" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateMonoidTest`1" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_TemplateMonoidTest_1" />
    </api>
    <api id="M:Math.Base.Tests.TemplateMonoidTest`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateMonoidTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateMonoidTest_1__ctor" />
    </api>
    <api id="P:Math.Base.Tests.TemplateMonoidTest`1.Monoid">
      <topicdata group="api" />
      <apidata name="Monoid" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Monoid" />
      <returns>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.Tests.TemplateMonoidTest`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateMonoidTest`1" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_TemplateMonoidTest_1_Monoid" />
    </api>
    <api id="M:Math.Base.Tests.TemplateMonoidTest`1.TemplateTestAddition(`0,`0,`0)">
      <topicdata group="api" />
      <apidata name="TemplateTestAddition" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="leftInput">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateMonoidTest`1" />
        </parameter>
        <parameter name="rightInput">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateMonoidTest`1" />
        </parameter>
        <parameter name="expectedSum">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateMonoidTest`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateMonoidTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateMonoidTest_1_TemplateTestAddition" />
    </api>
    <api id="M:Math.Base.Tests.TemplateMonoidTest`1.TestAddition(`0,`0,`0)">
      <topicdata group="api" />
      <apidata name="TestAddition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="leftInput">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateMonoidTest`1" />
        </parameter>
        <parameter name="rightInput">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateMonoidTest`1" />
        </parameter>
        <parameter name="expectedSum">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateMonoidTest`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateMonoidTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateMonoidTest_1_TestAddition" />
    </api>
    <api id="T:Math.Base.Tests.TemplateRingTest`1">
      <topicdata group="api" />
      <apidata name="TemplateRingTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.Base.Tests.Int32RingTest" ref="true" />
          <type api="T:Math.Base.Tests.DoubleRingTest" ref="true" />
          <type api="T:Math.Base.Tests.ComplexRingTest" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.TemplateRingTest`1.#ctor" />
        <element api="P:Math.Base.Tests.TemplateRingTest`1.Ring" />
        <element api="M:Math.Base.Tests.TemplateRingTest`1.TemplateTestMultiplication(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateRingTest`1.TestMultiplication(`0,`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_TemplateRingTest_1" />
    </api>
    <api id="Methods.T:Math.Base.Tests.TemplateRingTest`1">
      <topicdata name="TemplateRingTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.TemplateRingTest`1" />
      <apidata name="TemplateRingTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.TemplateRingTest`1.TemplateTestMultiplication(`0,`0,`0)" />
        <element api="M:Math.Base.Tests.TemplateRingTest`1.TestMultiplication(`0,`0,`0)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateRingTest`1" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_TemplateRingTest_1" />
    </api>
    <api id="Properties.T:Math.Base.Tests.TemplateRingTest`1">
      <topicdata name="TemplateRingTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.TemplateRingTest`1" />
      <apidata name="TemplateRingTest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Math.Base.Tests.TemplateRingTest`1.Ring" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateRingTest`1" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_TemplateRingTest_1" />
    </api>
    <api id="M:Math.Base.Tests.TemplateRingTest`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateRingTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateRingTest_1__ctor" />
    </api>
    <api id="P:Math.Base.Tests.TemplateRingTest`1.Ring">
      <topicdata group="api" />
      <apidata name="Ring" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Ring" />
      <returns>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.Base.Tests.TemplateRingTest`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateRingTest`1" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_TemplateRingTest_1_Ring" />
    </api>
    <api id="M:Math.Base.Tests.TemplateRingTest`1.TemplateTestMultiplication(`0,`0,`0)">
      <topicdata group="api" />
      <apidata name="TemplateTestMultiplication" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="leftInput">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateRingTest`1" />
        </parameter>
        <parameter name="rightInput">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateRingTest`1" />
        </parameter>
        <parameter name="expected">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateRingTest`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateRingTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateRingTest_1_TemplateTestMultiplication" />
    </api>
    <api id="M:Math.Base.Tests.TemplateRingTest`1.TestMultiplication(`0,`0,`0)">
      <topicdata group="api" />
      <apidata name="TestMultiplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="leftInput">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateRingTest`1" />
        </parameter>
        <parameter name="rightInput">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateRingTest`1" />
        </parameter>
        <parameter name="expected">
          <template name="T" index="0" api="T:Math.Base.Tests.TemplateRingTest`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.TemplateRingTest`1" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_TemplateRingTest_1_TestMultiplication" />
    </api>
    <api id="T:Math.Base.Tests.UInt32MonoidTest">
      <topicdata group="api" />
      <apidata name="UInt32MonoidTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.Base.Tests.TemplateMonoidTest`1" ref="true">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.Base.Tests.TemplateMonoidTest`1.TemplateTestAddition(`0,`0,`0)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.UInt32MonoidTest.#ctor" />
        <element api="P:Math.Base.Tests.UInt32MonoidTest.Monoid" />
        <element api="M:Math.Base.Tests.UInt32MonoidTest.TestAddition(System.UInt32,System.UInt32,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
      </containers>
      <file name="T_Math_Base_Tests_UInt32MonoidTest" />
    </api>
    <api id="Methods.T:Math.Base.Tests.UInt32MonoidTest">
      <topicdata name="UInt32MonoidTest" group="list" subgroup="Methods" typeTopicId="T:Math.Base.Tests.UInt32MonoidTest" />
      <apidata name="UInt32MonoidTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Math.Base.Tests.TemplateMonoidTest`1.TemplateTestAddition(`0,`0,`0)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.Tests.UInt32MonoidTest.TestAddition(System.UInt32,System.UInt32,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.UInt32MonoidTest" />
      </containers>
      <file name="Methods_T_Math_Base_Tests_UInt32MonoidTest" />
    </api>
    <api id="Properties.T:Math.Base.Tests.UInt32MonoidTest">
      <topicdata name="UInt32MonoidTest" group="list" subgroup="Properties" typeTopicId="T:Math.Base.Tests.UInt32MonoidTest" />
      <apidata name="UInt32MonoidTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.Base.Tests.UInt32MonoidTest.Monoid" />
      </elements>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.UInt32MonoidTest" />
      </containers>
      <file name="Properties_T_Math_Base_Tests_UInt32MonoidTest" />
    </api>
    <api id="M:Math.Base.Tests.UInt32MonoidTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.UInt32MonoidTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_UInt32MonoidTest__ctor" />
    </api>
    <api id="P:Math.Base.Tests.UInt32MonoidTest.Monoid">
      <topicdata group="api" />
      <apidata name="Monoid" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Math.Base.Tests.TemplateMonoidTest`1.Monoid">
          <type api="T:Math.Base.Tests.TemplateMonoidTest`1" ref="true">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Monoid" />
      <returns>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:System.UInt32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.UInt32MonoidTest" ref="true" />
      </containers>
      <file name="P_Math_Base_Tests_UInt32MonoidTest_Monoid" />
    </api>
    <api id="M:Math.Base.Tests.UInt32MonoidTest.TestAddition(System.UInt32,System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="TestAddition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Math.Base.Tests.TemplateMonoidTest`1.TestAddition(`0,`0,`0)">
          <type api="T:Math.Base.Tests.TemplateMonoidTest`1" ref="true">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="leftInput">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="rightInput">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="expectedSum">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.Base.Tests" module="Math.Base.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.Base.Tests" />
        <type api="T:Math.Base.Tests.UInt32MonoidTest" ref="true" />
      </containers>
      <file name="M_Math_Base_Tests_UInt32MonoidTest_TestAddition" />
    </api>
    <api id="N:Math.LinearAlgebra">
      <topicdata group="api" />
      <apidata name="Math.LinearAlgebra" group="namespace" />
      <elements>
        <element api="T:Math.LinearAlgebra.SpecialPolynomials" />
        <element api="T:Math.LinearAlgebra.IPolynomial`2" />
        <element api="T:Math.LinearAlgebra.Polynomial`2" />
        <element api="T:Math.LinearAlgebra.IMatrix`2" />
        <element api="T:Math.LinearAlgebra.Matrix`2" />
        <element api="T:Math.LinearAlgebra.SpecialMatrices" />
        <element api="T:Math.LinearAlgebra.IPolynomialFromRingExtensions" />
        <element api="T:Math.LinearAlgebra.IPolynomialExtensions" />
        <element api="T:Math.LinearAlgebra.IPolynomialFromGroupExtensions" />
        <element api="T:Math.LinearAlgebra.IPolynomialFromMonoidExtensions" />
        <element api="T:Math.LinearAlgebra.IMatrixExtensions" />
        <element api="T:Math.LinearAlgebra.IMatrixFromGroupExtensions" />
        <element api="T:Math.LinearAlgebra.IMatrixFromMonoidExtensions" />
        <element api="T:Math.LinearAlgebra.IMatrixFromRingExtensions" />
        <element api="T:Math.LinearAlgebra.IDirectSum`2" />
        <element api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
        <element api="T:Math.LinearAlgebra.DirectSum`2" />
        <element api="T:Math.LinearAlgebra.IDirectSumExtensions" />
        <element api="T:Math.LinearAlgebra.IDirectSumFromGroupExtensions" />
        <element api="T:Math.LinearAlgebra.IDirectSumFromMonoidExtensions" />
        <element api="T:Math.LinearAlgebra.IDirectSumFromRingExtensions" />
        <element api="T:Math.LinearAlgebra.DirectSumGroup`2" />
        <element api="T:Math.LinearAlgebra.SpecialDirectSums" />
        <element api="T:Math.LinearAlgebra.DirectSumRing`2" />
        <element api="T:Math.LinearAlgebra.LinearAlgebraException" />
        <element api="T:Math.LinearAlgebra.LinearAlgebraExceptionType" />
        <element api="T:Math.LinearAlgebra.IMatrixSquaredExtensions" />
      </elements>
      <file name="N_Math_LinearAlgebra" />
    </api>
    <api id="T:Math.LinearAlgebra.DirectSum`2">
      <topicdata group="api" />
      <apidata name="DirectSum" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSum`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSum`2" />
                <template name="TStruct" index="1" api="T:Math.LinearAlgebra.DirectSum`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSum`2" />
            <template name="TStruct" index="1" api="T:Math.LinearAlgebra.DirectSum`2" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="Overload:Math.LinearAlgebra.DirectSum`2.Equals">
          <element api="M:System.Object.Equals(System.Object)">
            <apidata name="Equals" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="obj">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:Math.LinearAlgebra.DirectSum`2.Equals(Math.LinearAlgebra.DirectSum{`0,`1})" />
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.DirectSum`2.#ctor(System.UInt32)" />
        <element api="P:Math.LinearAlgebra.DirectSum`2.Dimension" />
        <element api="P:Math.LinearAlgebra.DirectSum`2.Item(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.DirectSum`2.ReturnNewInstance(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.DirectSum`2.ToString" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_DirectSum_2" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.DirectSum`2">
      <topicdata name="DirectSum" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.DirectSum`2" />
      <apidata name="DirectSum" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSum`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="Overload:Math.LinearAlgebra.DirectSum`2.Equals">
          <element api="M:System.Object.Equals(System.Object)">
            <apidata name="Equals" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="obj">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:Math.LinearAlgebra.DirectSum`2.Equals(Math.LinearAlgebra.DirectSum{`0,`1})" />
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.DirectSum`2.ReturnNewInstance(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.DirectSum`2.ToString" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSum`2" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_DirectSum_2" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.DirectSum`2">
      <topicdata name="DirectSum" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.DirectSum`2" />
      <apidata name="DirectSum" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSum`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Math.LinearAlgebra.DirectSum`2.Dimension" />
        <element api="P:Math.LinearAlgebra.DirectSum`2.Item(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSum`2" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_DirectSum_2" />
    </api>
    <api id="Overload:Math.LinearAlgebra.DirectSum`2.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.DirectSum`2.Equals(Math.LinearAlgebra.DirectSum{`0,`1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true" />
      </containers>
      <file name="Overload_Math_LinearAlgebra_DirectSum_2_Equals" />
    </api>
    <api id="M:Math.LinearAlgebra.DirectSum`2.#ctor(System.UInt32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_DirectSum_2__ctor" />
    </api>
    <api id="P:Math.LinearAlgebra.DirectSum`2.Dimension">
      <topicdata group="api" />
      <apidata name="Dimension" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Dimension" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <implements>
        <member api="P:Math.LinearAlgebra.IDirectSum`2.Dimension">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSum`2" />
              <template name="TStruct" index="1" api="T:Math.LinearAlgebra.DirectSum`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_DirectSum_2_Dimension" />
    </api>
    <api id="M:Math.LinearAlgebra.DirectSum`2.Equals(Math.LinearAlgebra.DirectSum{`0,`1})">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Math.LinearAlgebra.DirectSum`2.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSum`2" />
              <template name="TStruct" index="1" api="T:Math.LinearAlgebra.DirectSum`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSum`2" />
                  <template name="TStruct" index="1" api="T:Math.LinearAlgebra.DirectSum`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_DirectSum_2_Equals" />
    </api>
    <api id="P:Math.LinearAlgebra.DirectSum`2.Item(System.UInt32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSum`2" />
      </returns>
      <implements>
        <member api="P:Math.LinearAlgebra.IDirectSum`2.Item(System.UInt32)">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSum`2" />
              <template name="TStruct" index="1" api="T:Math.LinearAlgebra.DirectSum`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_DirectSum_2_Item" />
    </api>
    <api id="M:Math.LinearAlgebra.DirectSum`2.ReturnNewInstance(System.UInt32)">
      <topicdata group="api" />
      <apidata name="ReturnNewInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="rowDimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSum`2" />
            <template name="TStruct" index="1" api="T:Math.LinearAlgebra.DirectSum`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Math.LinearAlgebra.IDirectSum`2.ReturnNewInstance(System.UInt32)">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSum`2" />
              <template name="TStruct" index="1" api="T:Math.LinearAlgebra.DirectSum`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_DirectSum_2_ReturnNewInstance" />
    </api>
    <api id="M:Math.LinearAlgebra.DirectSum`2.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_DirectSum_2_ToString" />
    </api>
    <api id="T:Math.LinearAlgebra.DirectSumGroup`2">
      <topicdata group="api" />
      <apidata name="DirectSumGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.LinearAlgebra.DirectSumMonoid`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
              <template name="TGroup" index="1" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.LinearAlgebra.DirectSumRing`2" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
        <template name="TGroup">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
                <template name="TGroup" index="1" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
                <template name="TGroup" index="1" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
                <template name="TGroup" index="1" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.DirectSumGroup`2.#ctor(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.DirectSumGroup`2.Inverse(Math.LinearAlgebra.DirectSum{`0,`1})" />
        <element api="M:Math.LinearAlgebra.DirectSumMonoid`2.Addition(Math.LinearAlgebra.DirectSum{`0,`1},Math.LinearAlgebra.DirectSum{`0,`1})" />
        <element api="P:Math.LinearAlgebra.DirectSumMonoid`2.Dimension" />
        <element api="P:Math.LinearAlgebra.DirectSumMonoid`2.Zero" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_DirectSumGroup_2" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.DirectSumGroup`2">
      <topicdata name="DirectSumGroup" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.DirectSumGroup`2" />
      <apidata name="DirectSumGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TGroup">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.DirectSumGroup`2.Inverse(Math.LinearAlgebra.DirectSum{`0,`1})" />
        <element api="M:Math.LinearAlgebra.DirectSumMonoid`2.Addition(Math.LinearAlgebra.DirectSum{`0,`1},Math.LinearAlgebra.DirectSum{`0,`1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumGroup`2" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_DirectSumGroup_2" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.DirectSumGroup`2">
      <topicdata name="DirectSumGroup" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.DirectSumGroup`2" />
      <apidata name="DirectSumGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TGroup">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Math.LinearAlgebra.DirectSumMonoid`2.Dimension" />
        <element api="P:Math.LinearAlgebra.DirectSumMonoid`2.Zero" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumGroup`2" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_DirectSumGroup_2" />
    </api>
    <api id="M:Math.LinearAlgebra.DirectSumGroup`2.#ctor(System.UInt32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumGroup`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_DirectSumGroup_2__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.DirectSumGroup`2.Inverse(Math.LinearAlgebra.DirectSum{`0,`1})">
      <topicdata group="api" />
      <apidata name="Inverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="element">
          <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
              <template name="TGroup" index="1" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
            <template name="TGroup" index="1" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Math.Base.IGroup`1.Inverse(`0)">
          <type api="T:Math.Base.IGroup`1" ref="true">
            <specialization>
              <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
                  <template name="TGroup" index="1" api="T:Math.LinearAlgebra.DirectSumGroup`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumGroup`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_DirectSumGroup_2_Inverse" />
    </api>
    <api id="T:Math.LinearAlgebra.DirectSumMonoid`2">
      <topicdata group="api" />
      <apidata name="DirectSumMonoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Math.LinearAlgebra.DirectSumGroup`2" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
                <template name="TMonoid" index="1" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
                <template name="TMonoid" index="1" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.DirectSumMonoid`2.#ctor(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.DirectSumMonoid`2.Addition(Math.LinearAlgebra.DirectSum{`0,`1},Math.LinearAlgebra.DirectSum{`0,`1})" />
        <element api="P:Math.LinearAlgebra.DirectSumMonoid`2.Dimension" />
        <element api="P:Math.LinearAlgebra.DirectSumMonoid`2.Zero" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_DirectSumMonoid_2" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.DirectSumMonoid`2">
      <topicdata name="DirectSumMonoid" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.DirectSumMonoid`2" />
      <apidata name="DirectSumMonoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.DirectSumMonoid`2.Addition(Math.LinearAlgebra.DirectSum{`0,`1},Math.LinearAlgebra.DirectSum{`0,`1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_DirectSumMonoid_2" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.DirectSumMonoid`2">
      <topicdata name="DirectSumMonoid" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.DirectSumMonoid`2" />
      <apidata name="DirectSumMonoid" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Math.LinearAlgebra.DirectSumMonoid`2.Dimension" />
        <element api="P:Math.LinearAlgebra.DirectSumMonoid`2.Zero" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_DirectSumMonoid_2" />
    </api>
    <api id="M:Math.LinearAlgebra.DirectSumMonoid`2.#ctor(System.UInt32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumMonoid`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_DirectSumMonoid_2__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.DirectSumMonoid`2.Addition(Math.LinearAlgebra.DirectSum{`0,`1},Math.LinearAlgebra.DirectSum{`0,`1})">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="leftElement">
          <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
              <template name="TMonoid" index="1" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="rightElement">
          <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
              <template name="TMonoid" index="1" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
            <template name="TMonoid" index="1" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Math.Base.IMonoid`1.Addition(`0,`0)">
          <type api="T:Math.Base.IMonoid`1" ref="true">
            <specialization>
              <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
                  <template name="TMonoid" index="1" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumMonoid`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_DirectSumMonoid_2_Addition" />
    </api>
    <api id="P:Math.LinearAlgebra.DirectSumMonoid`2.Dimension">
      <topicdata group="api" />
      <apidata name="Dimension" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Dimension" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumMonoid`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_DirectSumMonoid_2_Dimension" />
    </api>
    <api id="P:Math.LinearAlgebra.DirectSumMonoid`2.Zero">
      <topicdata group="api" />
      <apidata name="Zero" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Zero" />
      <returns>
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
            <template name="TMonoid" index="1" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Math.Base.IMonoid`1.Zero">
          <type api="T:Math.Base.IMonoid`1" ref="true">
            <specialization>
              <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
                  <template name="TMonoid" index="1" api="T:Math.LinearAlgebra.DirectSumMonoid`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumMonoid`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_DirectSumMonoid_2_Zero" />
    </api>
    <api id="T:Math.LinearAlgebra.DirectSumRing`2">
      <topicdata group="api" />
      <apidata name="DirectSumRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Math.LinearAlgebra.DirectSumGroup`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
              <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
            </specialization>
          </type>
          <type api="T:Math.LinearAlgebra.DirectSumMonoid`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
              <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:Math.Base.IRing`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:Math.Base.IGroup`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:Math.Base.IMonoid`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:Math.Base.IStructure`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Math.LinearAlgebra.DirectSumGroup`2.Inverse(Math.LinearAlgebra.DirectSum{`0,`1})" />
        <element api="M:Math.LinearAlgebra.DirectSumMonoid`2.Addition(Math.LinearAlgebra.DirectSum{`0,`1},Math.LinearAlgebra.DirectSum{`0,`1})" />
        <element api="P:Math.LinearAlgebra.DirectSumMonoid`2.Dimension" />
        <element api="P:Math.LinearAlgebra.DirectSumMonoid`2.Zero" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                  <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                </specialization>
              </type>
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.DirectSumRing`2.#ctor(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.DirectSumRing`2.Multiplication(Math.LinearAlgebra.DirectSum{`0,`1},Math.LinearAlgebra.DirectSum{`0,`1})" />
        <element api="P:Math.LinearAlgebra.DirectSumRing`2.One" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_DirectSumRing_2" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.DirectSumRing`2">
      <topicdata name="DirectSumRing" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.DirectSumRing`2" />
      <apidata name="DirectSumRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Math.LinearAlgebra.DirectSumGroup`2.Inverse(Math.LinearAlgebra.DirectSum{`0,`1})" />
        <element api="M:Math.LinearAlgebra.DirectSumMonoid`2.Addition(Math.LinearAlgebra.DirectSum{`0,`1},Math.LinearAlgebra.DirectSum{`0,`1})" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.Base.IRingExtensions.Pow``1(Math.Base.IRing{``0},``0,System.UInt32)" source="extension">
          <apidata name="Pow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                  <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                </specialization>
              </type>
            </parameter>
            <parameter name="power">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Math.Base" module="Math.Base" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Math.Base" />
            <type api="T:Math.Base.IRingExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.DirectSumRing`2.Multiplication(Math.LinearAlgebra.DirectSum{`0,`1},Math.LinearAlgebra.DirectSum{`0,`1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumRing`2" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_DirectSumRing_2" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.DirectSumRing`2">
      <topicdata name="DirectSumRing" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.DirectSumRing`2" />
      <apidata name="DirectSumRing" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Math.LinearAlgebra.DirectSumMonoid`2.Dimension" />
        <element api="P:Math.LinearAlgebra.DirectSumMonoid`2.Zero" />
        <element api="P:Math.LinearAlgebra.DirectSumRing`2.One" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumRing`2" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_DirectSumRing_2" />
    </api>
    <api id="M:Math.LinearAlgebra.DirectSumRing`2.#ctor(System.UInt32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumRing`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_DirectSumRing_2__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.DirectSumRing`2.Multiplication(Math.LinearAlgebra.DirectSum{`0,`1},Math.LinearAlgebra.DirectSum{`0,`1})">
      <topicdata group="api" />
      <apidata name="Multiplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="leftElement">
          <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
              <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="rightElement">
          <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
              <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
            <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Math.Base.IRing`1.Multiplication(`0,`0)">
          <type api="T:Math.Base.IRing`1" ref="true">
            <specialization>
              <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                  <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumRing`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_DirectSumRing_2_Multiplication" />
    </api>
    <api id="P:Math.LinearAlgebra.DirectSumRing`2.One">
      <topicdata group="api" />
      <apidata name="One" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_One" />
      <returns>
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
            <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Math.Base.IRing`1.One">
          <type api="T:Math.Base.IRing`1" ref="true">
            <specialization>
              <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                  <template name="TRing" index="1" api="T:Math.LinearAlgebra.DirectSumRing`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.DirectSumRing`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_DirectSumRing_2_One" />
    </api>
    <api id="T:Math.LinearAlgebra.IDirectSum`2">
      <topicdata group="api" />
      <apidata name="IDirectSum" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.IDirectSum`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implementors>
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true" />
      </implementors>
      <elements>
        <element api="P:Math.LinearAlgebra.IDirectSum`2.Dimension" />
        <element api="P:Math.LinearAlgebra.IDirectSum`2.Item(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IDirectSum`2.ReturnNewInstance(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_IDirectSum_2" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IDirectSum`2">
      <topicdata name="IDirectSum" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IDirectSum`2" />
      <apidata name="IDirectSum" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.IDirectSum`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Math.LinearAlgebra.IDirectSum`2.ReturnNewInstance(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSum`2" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IDirectSum_2" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.IDirectSum`2">
      <topicdata name="IDirectSum" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.IDirectSum`2" />
      <apidata name="IDirectSum" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.IDirectSum`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Math.LinearAlgebra.IDirectSum`2.Dimension" />
        <element api="P:Math.LinearAlgebra.IDirectSum`2.Item(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSum`2" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_IDirectSum_2" />
    </api>
    <api id="P:Math.LinearAlgebra.IDirectSum`2.Dimension">
      <topicdata group="api" />
      <apidata name="Dimension" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Dimension" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_IDirectSum_2_Dimension" />
    </api>
    <api id="P:Math.LinearAlgebra.IDirectSum`2.Item(System.UInt32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Math.LinearAlgebra.IDirectSum`2" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_IDirectSum_2_Item" />
    </api>
    <api id="M:Math.LinearAlgebra.IDirectSum`2.ReturnNewInstance(System.UInt32)">
      <topicdata group="api" />
      <apidata name="ReturnNewInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="dimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.IDirectSum`2" />
            <template name="TStruct" index="1" api="T:Math.LinearAlgebra.IDirectSum`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_IDirectSum_2_ReturnNewInstance" />
    </api>
    <api id="T:Math.LinearAlgebra.IDirectSumExtensions">
      <topicdata group="api" />
      <apidata name="IDirectSumExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.LinearAlgebra.IDirectSumExtensions.BubbleSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IDirectSumExtensions.Copy``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IDirectSumExtensions.InsertionSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_LinearAlgebra_IDirectSumExtensions" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IDirectSumExtensions">
      <topicdata name="IDirectSumExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IDirectSumExtensions" />
      <apidata name="IDirectSumExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.LinearAlgebra.IDirectSumExtensions.BubbleSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IDirectSumExtensions.Copy``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IDirectSumExtensions.InsertionSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumExtensions" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IDirectSumExtensions" />
    </api>
    <api id="M:Math.LinearAlgebra.IDirectSumExtensions.BubbleSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="BubbleSort" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumExtensions.BubbleSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="tuple">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumExtensions.BubbleSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IDirectSumExtensions.BubbleSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumExtensions.BubbleSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
            <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IDirectSumExtensions.BubbleSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IDirectSumExtensions_BubbleSort__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IDirectSumExtensions.Copy``2(Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumExtensions.Copy``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="tuple">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumExtensions.Copy``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IDirectSumExtensions.Copy``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumExtensions.Copy``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
            <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IDirectSumExtensions.Copy``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IDirectSumExtensions_Copy__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IDirectSumExtensions.InsertionSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="InsertionSort" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumExtensions.InsertionSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="tuple">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumExtensions.InsertionSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IDirectSumExtensions.InsertionSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumExtensions.InsertionSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
            <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IDirectSumExtensions.InsertionSort``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IDirectSumExtensions_InsertionSort__2" />
    </api>
    <api id="T:Math.LinearAlgebra.IDirectSumFromGroupExtensions">
      <topicdata group="api" />
      <apidata name="IDirectSumFromGroupExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.LinearAlgebra.IDirectSumFromGroupExtensions.InverseElement``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_LinearAlgebra_IDirectSumFromGroupExtensions" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IDirectSumFromGroupExtensions">
      <topicdata name="IDirectSumFromGroupExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IDirectSumFromGroupExtensions" />
      <apidata name="IDirectSumFromGroupExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.LinearAlgebra.IDirectSumFromGroupExtensions.InverseElement``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumFromGroupExtensions" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IDirectSumFromGroupExtensions" />
    </api>
    <api id="M:Math.LinearAlgebra.IDirectSumFromGroupExtensions.InverseElement``2(Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="InverseElement" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TGroup">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromGroupExtensions.InverseElement``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="tuple">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromGroupExtensions.InverseElement``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TGroup" index="1" api="M:Math.LinearAlgebra.IDirectSumFromGroupExtensions.InverseElement``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromGroupExtensions.InverseElement``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
            <template name="TGroup" index="1" api="M:Math.LinearAlgebra.IDirectSumFromGroupExtensions.InverseElement``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumFromGroupExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IDirectSumFromGroupExtensions_InverseElement__2" />
    </api>
    <api id="T:Math.LinearAlgebra.IDirectSumFromMonoidExtensions">
      <topicdata group="api" />
      <apidata name="IDirectSumFromMonoidExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Add``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Injection``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_LinearAlgebra_IDirectSumFromMonoidExtensions" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IDirectSumFromMonoidExtensions">
      <topicdata name="IDirectSumFromMonoidExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IDirectSumFromMonoidExtensions" />
      <apidata name="IDirectSumFromMonoidExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Add``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Injection``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumFromMonoidExtensions" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IDirectSumFromMonoidExtensions" />
    </api>
    <api id="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Add``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Add``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="tuple1">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Add``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Add``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tuple2">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Add``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Add``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Add``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Add``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumFromMonoidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IDirectSumFromMonoidExtensions_Add__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Injection``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)">
      <topicdata group="api" />
      <apidata name="Injection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Injection``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="tuple">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Injection``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Injection``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="additionalDimensions">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Injection``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
            <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.Injection``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumFromMonoidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IDirectSumFromMonoidExtensions_Injection__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="SumElements" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="vector">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumFromMonoidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IDirectSumFromMonoidExtensions_SumElements__2" />
    </api>
    <api id="T:Math.LinearAlgebra.IDirectSumFromRingExtensions">
      <topicdata group="api" />
      <apidata name="IDirectSumFromRingExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Multiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Pow``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},``0)" />
        <element api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarProduct``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_LinearAlgebra_IDirectSumFromRingExtensions" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IDirectSumFromRingExtensions">
      <topicdata name="IDirectSumFromRingExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IDirectSumFromRingExtensions" />
      <apidata name="IDirectSumFromRingExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Multiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Pow``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},``0)" />
        <element api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarProduct``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumFromRingExtensions" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IDirectSumFromRingExtensions" />
    </api>
    <api id="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Multiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Multiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="tuple1">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Multiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Multiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tuple2">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Multiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Multiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Multiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            <template name="TRing" index="1" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Multiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumFromRingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IDirectSumFromRingExtensions_Multiply__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Pow``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)">
      <topicdata group="api" />
      <apidata name="Pow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Pow``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="tuple">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Pow``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Pow``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="power">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Pow``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
            <template name="TRing" index="1" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.Pow``2(Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumFromRingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IDirectSumFromRingExtensions_Pow__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},``0)">
      <topicdata group="api" />
      <apidata name="ScalarMultiply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},``0)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="tuple">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},``0)" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="scalar">
          <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},``0)" />
            <template name="TRing" index="1" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IDirectSum{``0,``1},``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumFromRingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IDirectSumFromRingExtensions_ScalarMultiply__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarProduct``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="ScalarProduct" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarProduct``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="vector1">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarProduct``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarProduct``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="vector2">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarProduct``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarProduct``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Math.LinearAlgebra.IDirectSumFromRingExtensions.ScalarProduct``2(Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IDirectSumFromRingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IDirectSumFromRingExtensions_ScalarProduct__2" />
    </api>
    <api id="T:Math.LinearAlgebra.IMatrix`2">
      <topicdata group="api" />
      <apidata name="IMatrix" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.IMatrix`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implementors>
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true" />
      </implementors>
      <elements>
        <element api="P:Math.LinearAlgebra.IMatrix`2.ColumnDimension" />
        <element api="P:Math.LinearAlgebra.IMatrix`2.Item(System.UInt32,System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IMatrix`2.ReturnNewInstance(System.UInt32,System.UInt32)" />
        <element api="P:Math.LinearAlgebra.IMatrix`2.RowDimension" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_IMatrix_2" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IMatrix`2">
      <topicdata name="IMatrix" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IMatrix`2" />
      <apidata name="IMatrix" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.IMatrix`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Math.LinearAlgebra.IMatrix`2.ReturnNewInstance(System.UInt32,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrix`2" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IMatrix_2" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.IMatrix`2">
      <topicdata name="IMatrix" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.IMatrix`2" />
      <apidata name="IMatrix" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.IMatrix`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Math.LinearAlgebra.IMatrix`2.ColumnDimension" />
        <element api="P:Math.LinearAlgebra.IMatrix`2.Item(System.UInt32,System.UInt32)" />
        <element api="P:Math.LinearAlgebra.IMatrix`2.RowDimension" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrix`2" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_IMatrix_2" />
    </api>
    <api id="P:Math.LinearAlgebra.IMatrix`2.ColumnDimension">
      <topicdata group="api" />
      <apidata name="ColumnDimension" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ColumnDimension" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_IMatrix_2_ColumnDimension" />
    </api>
    <api id="P:Math.LinearAlgebra.IMatrix`2.Item(System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="row">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Math.LinearAlgebra.IMatrix`2" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_IMatrix_2_Item" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrix`2.ReturnNewInstance(System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="ReturnNewInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="rowDimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="columnDimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.IMatrix`2" />
            <template name="TStruct" index="1" api="T:Math.LinearAlgebra.IMatrix`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_IMatrix_2_ReturnNewInstance" />
    </api>
    <api id="P:Math.LinearAlgebra.IMatrix`2.RowDimension">
      <topicdata group="api" />
      <apidata name="RowDimension" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RowDimension" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_IMatrix_2_RowDimension" />
    </api>
    <api id="T:Math.LinearAlgebra.IMatrixExtensions">
      <topicdata group="api" />
      <apidata name="IMatrixExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.LinearAlgebra.IMatrixExtensions.Copy``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IMatrixExtensions.GetColumnVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IMatrixExtensions.GetRowVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IMatrixExtensions.Transpose``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_LinearAlgebra_IMatrixExtensions" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IMatrixExtensions">
      <topicdata name="IMatrixExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IMatrixExtensions" />
      <apidata name="IMatrixExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.LinearAlgebra.IMatrixExtensions.Copy``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IMatrixExtensions.GetColumnVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IMatrixExtensions.GetRowVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IMatrixExtensions.Transpose``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixExtensions" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IMatrixExtensions" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixExtensions.Copy``2(Math.LinearAlgebra.IMatrix{``0,``1})">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixExtensions.Copy``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixExtensions.Copy``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IMatrixExtensions.Copy``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixExtensions.Copy``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
            <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IMatrixExtensions.Copy``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixExtensions_Copy__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixExtensions.GetColumnVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)">
      <topicdata group="api" />
      <apidata name="GetColumnVector" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixExtensions.GetColumnVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixExtensions.GetColumnVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IMatrixExtensions.GetColumnVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="columnIndex">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixExtensions.GetColumnVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
            <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IMatrixExtensions.GetColumnVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixExtensions_GetColumnVector__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixExtensions.GetRowVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)">
      <topicdata group="api" />
      <apidata name="GetRowVector" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixExtensions.GetRowVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixExtensions.GetRowVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IMatrixExtensions.GetRowVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="rowIndex">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixExtensions.GetRowVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
            <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IMatrixExtensions.GetRowVector``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixExtensions_GetRowVector__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixExtensions.Transpose``2(Math.LinearAlgebra.IMatrix{``0,``1})">
      <topicdata group="api" />
      <apidata name="Transpose" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixExtensions.Transpose``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixExtensions.Transpose``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IMatrixExtensions.Transpose``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixExtensions.Transpose``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
            <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IMatrixExtensions.Transpose``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixExtensions_Transpose__2" />
    </api>
    <api id="T:Math.LinearAlgebra.IMatrixFromGroupExtensions">
      <topicdata group="api" />
      <apidata name="IMatrixFromGroupExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.LinearAlgebra.IMatrixFromGroupExtensions.Inverse``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_LinearAlgebra_IMatrixFromGroupExtensions" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IMatrixFromGroupExtensions">
      <topicdata name="IMatrixFromGroupExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IMatrixFromGroupExtensions" />
      <apidata name="IMatrixFromGroupExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.LinearAlgebra.IMatrixFromGroupExtensions.Inverse``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixFromGroupExtensions" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IMatrixFromGroupExtensions" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixFromGroupExtensions.Inverse``2(Math.LinearAlgebra.IMatrix{``0,``1})">
      <topicdata group="api" />
      <apidata name="Inverse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TGroup">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromGroupExtensions.Inverse``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromGroupExtensions.Inverse``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TGroup" index="1" api="M:Math.LinearAlgebra.IMatrixFromGroupExtensions.Inverse``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromGroupExtensions.Inverse``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
            <template name="TGroup" index="1" api="M:Math.LinearAlgebra.IMatrixFromGroupExtensions.Inverse``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixFromGroupExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixFromGroupExtensions_Inverse__2" />
    </api>
    <api id="T:Math.LinearAlgebra.IMatrixFromMonoidExtensions">
      <topicdata group="api" />
      <apidata name="IMatrixFromMonoidExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.Add``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_LinearAlgebra_IMatrixFromMonoidExtensions" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IMatrixFromMonoidExtensions">
      <topicdata name="IMatrixFromMonoidExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IMatrixFromMonoidExtensions" />
      <apidata name="IMatrixFromMonoidExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.Add``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixFromMonoidExtensions" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IMatrixFromMonoidExtensions" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.Add``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TGroup">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.Add``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="leftMatrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.Add``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TGroup" index="1" api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.Add``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="rightMatrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.Add``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TGroup" index="1" api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.Add``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.Add``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
            <template name="TGroup" index="1" api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.Add``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixFromMonoidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixFromMonoidExtensions_Add__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IMatrix{``0,``1})">
      <topicdata group="api" />
      <apidata name="SumElements" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TGroup">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TGroup" index="1" api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromMonoidExtensions.SumElements``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixFromMonoidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixFromMonoidExtensions_SumElements__2" />
    </api>
    <api id="T:Math.LinearAlgebra.IMatrixFromRingExtensions">
      <topicdata group="api" />
      <apidata name="IMatrixFromRingExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyMatrix``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyVector``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.Pow``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IMatrix{``0,``1},``0)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_LinearAlgebra_IMatrixFromRingExtensions" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IMatrixFromRingExtensions">
      <topicdata name="IMatrixFromRingExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IMatrixFromRingExtensions" />
      <apidata name="IMatrixFromRingExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyMatrix``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyVector``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.Pow``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IMatrix{``0,``1},``0)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixFromRingExtensions" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IMatrixFromRingExtensions" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyMatrix``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})">
      <topicdata group="api" />
      <apidata name="MultiplyMatrix" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyMatrix``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="matrix1">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyMatrix``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyMatrix``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="matrix2">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyMatrix``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyMatrix``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyMatrix``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
            <template name="TRing" index="1" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyMatrix``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IMatrix{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixFromRingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixFromRingExtensions_MultiplyMatrix__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyVector``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="MultiplyVector" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyVector``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyVector``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyVector``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="vector">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyVector``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyVector``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyVector``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            <template name="TRing" index="1" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.MultiplyVector``2(Math.LinearAlgebra.IMatrix{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixFromRingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixFromRingExtensions_MultiplyVector__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixFromRingExtensions.Pow``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)">
      <topicdata group="api" />
      <apidata name="Pow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.Pow``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.Pow``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.Pow``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="power">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.Pow``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
            <template name="TRing" index="1" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.Pow``2(Math.LinearAlgebra.IMatrix{``0,``1},System.UInt32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixFromRingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixFromRingExtensions_Pow__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IMatrix{``0,``1},``0)">
      <topicdata group="api" />
      <apidata name="ScalarMultiply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IMatrix{``0,``1},``0)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IMatrix{``0,``1},``0)" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IMatrix{``0,``1},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="scalar">
          <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IMatrix{``0,``1},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IMatrix{``0,``1},``0)" />
            <template name="TRing" index="1" api="M:Math.LinearAlgebra.IMatrixFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IMatrix{``0,``1},``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixFromRingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixFromRingExtensions_ScalarMultiply__2" />
    </api>
    <api id="T:Math.LinearAlgebra.IMatrixSquaredExtensions">
      <topicdata group="api" />
      <apidata name="IMatrixSquaredExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithm``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithmWithSteps``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.Trace``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_LinearAlgebra_IMatrixSquaredExtensions" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IMatrixSquaredExtensions">
      <topicdata name="IMatrixSquaredExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IMatrixSquaredExtensions" />
      <apidata name="IMatrixSquaredExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithm``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithmWithSteps``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.Trace``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixSquaredExtensions" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IMatrixSquaredExtensions" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithm``2(Math.LinearAlgebra.IMatrix{``0,``1})">
      <topicdata group="api" />
      <apidata name="GaussJordanAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TField">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IField`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithm``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithm``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TField" index="1" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithm``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithm``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
            <template name="TField" index="1" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithm``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixSquaredExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixSquaredExtensions_GaussJordanAlgorithm__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithmWithSteps``2(Math.LinearAlgebra.IMatrix{``0,``1})">
      <topicdata group="api" />
      <apidata name="GaussJordanAlgorithmWithSteps" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TField">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IField`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithmWithSteps``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithmWithSteps``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TField" index="1" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithmWithSteps``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
              <specialization>
                <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithmWithSteps``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
                <template name="TField" index="1" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.GaussJordanAlgorithmWithSteps``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixSquaredExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixSquaredExtensions_GaussJordanAlgorithmWithSteps__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IMatrixSquaredExtensions.Trace``2(Math.LinearAlgebra.IMatrix{``0,``1})">
      <topicdata group="api" />
      <apidata name="Trace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.Trace``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.Trace``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.Trace``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Math.LinearAlgebra.IMatrixSquaredExtensions.Trace``2(Math.LinearAlgebra.IMatrix{``0,``1})" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IMatrixSquaredExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IMatrixSquaredExtensions_Trace__2" />
    </api>
    <api id="T:Math.LinearAlgebra.IPolynomial`2">
      <topicdata group="api" />
      <apidata name="IPolynomial" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.IPolynomial`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implementors>
        <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true" />
      </implementors>
      <elements>
        <element api="P:Math.LinearAlgebra.IPolynomial`2.Degree" />
        <element api="P:Math.LinearAlgebra.IPolynomial`2.Item(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IPolynomial`2.ReturnNewInstance(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_IPolynomial_2" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IPolynomial`2">
      <topicdata name="IPolynomial" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IPolynomial`2" />
      <apidata name="IPolynomial" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.IPolynomial`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Math.LinearAlgebra.IPolynomial`2.ReturnNewInstance(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomial`2" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IPolynomial_2" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.IPolynomial`2">
      <topicdata name="IPolynomial" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.IPolynomial`2" />
      <apidata name="IPolynomial" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.IPolynomial`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Math.LinearAlgebra.IPolynomial`2.Degree" />
        <element api="P:Math.LinearAlgebra.IPolynomial`2.Item(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomial`2" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_IPolynomial_2" />
    </api>
    <api id="P:Math.LinearAlgebra.IPolynomial`2.Degree">
      <topicdata group="api" />
      <apidata name="Degree" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Degree" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_IPolynomial_2_Degree" />
    </api>
    <api id="P:Math.LinearAlgebra.IPolynomial`2.Item(System.UInt32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Math.LinearAlgebra.IPolynomial`2" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_IPolynomial_2_Item" />
    </api>
    <api id="M:Math.LinearAlgebra.IPolynomial`2.ReturnNewInstance(System.UInt32)">
      <topicdata group="api" />
      <apidata name="ReturnNewInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="degree">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.IPolynomial`2" />
            <template name="TStruct" index="1" api="T:Math.LinearAlgebra.IPolynomial`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_IPolynomial_2_ReturnNewInstance" />
    </api>
    <api id="T:Math.LinearAlgebra.IPolynomialExtensions">
      <topicdata group="api" />
      <apidata name="IPolynomialExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.LinearAlgebra.IPolynomialExtensions.Copy``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_LinearAlgebra_IPolynomialExtensions" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IPolynomialExtensions">
      <topicdata name="IPolynomialExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IPolynomialExtensions" />
      <apidata name="IPolynomialExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.LinearAlgebra.IPolynomialExtensions.Copy``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomialExtensions" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IPolynomialExtensions" />
    </api>
    <api id="M:Math.LinearAlgebra.IPolynomialExtensions.Copy``2(Math.LinearAlgebra.IPolynomial{``0,``1})">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialExtensions.Copy``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="polynomial">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialExtensions.Copy``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IPolynomialExtensions.Copy``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialExtensions.Copy``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
            <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IPolynomialExtensions.Copy``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomialExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IPolynomialExtensions_Copy__2" />
    </api>
    <api id="T:Math.LinearAlgebra.IPolynomialFromGroupExtensions">
      <topicdata group="api" />
      <apidata name="IPolynomialFromGroupExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.LinearAlgebra.IPolynomialFromGroupExtensions.InversePolynomial``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_LinearAlgebra_IPolynomialFromGroupExtensions" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IPolynomialFromGroupExtensions">
      <topicdata name="IPolynomialFromGroupExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IPolynomialFromGroupExtensions" />
      <apidata name="IPolynomialFromGroupExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.LinearAlgebra.IPolynomialFromGroupExtensions.InversePolynomial``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomialFromGroupExtensions" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IPolynomialFromGroupExtensions" />
    </api>
    <api id="M:Math.LinearAlgebra.IPolynomialFromGroupExtensions.InversePolynomial``2(Math.LinearAlgebra.IPolynomial{``0,``1})">
      <topicdata group="api" />
      <apidata name="InversePolynomial" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromGroupExtensions.InversePolynomial``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="polynomial">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromGroupExtensions.InversePolynomial``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IPolynomialFromGroupExtensions.InversePolynomial``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromGroupExtensions.InversePolynomial``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
            <template name="TStruct" index="1" api="M:Math.LinearAlgebra.IPolynomialFromGroupExtensions.InversePolynomial``2(Math.LinearAlgebra.IPolynomial{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomialFromGroupExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IPolynomialFromGroupExtensions_InversePolynomial__2" />
    </api>
    <api id="T:Math.LinearAlgebra.IPolynomialFromMonoidExtensions">
      <topicdata group="api" />
      <apidata name="IPolynomialFromMonoidExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.LinearAlgebra.IPolynomialFromMonoidExtensions.Add``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_LinearAlgebra_IPolynomialFromMonoidExtensions" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IPolynomialFromMonoidExtensions">
      <topicdata name="IPolynomialFromMonoidExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IPolynomialFromMonoidExtensions" />
      <apidata name="IPolynomialFromMonoidExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.LinearAlgebra.IPolynomialFromMonoidExtensions.Add``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomialFromMonoidExtensions" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IPolynomialFromMonoidExtensions" />
    </api>
    <api id="M:Math.LinearAlgebra.IPolynomialFromMonoidExtensions.Add``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromMonoidExtensions.Add``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="polynomial1">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromMonoidExtensions.Add``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.IPolynomialFromMonoidExtensions.Add``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="polynomial2">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromMonoidExtensions.Add``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.IPolynomialFromMonoidExtensions.Add``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromMonoidExtensions.Add``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
            <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.IPolynomialFromMonoidExtensions.Add``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomialFromMonoidExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IPolynomialFromMonoidExtensions_Add__2" />
    </api>
    <api id="T:Math.LinearAlgebra.IPolynomialFromRingExtensions">
      <topicdata group="api" />
      <apidata name="IPolynomialFromRingExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Calculate``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
        <element api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Multiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Pow``2(Math.LinearAlgebra.IPolynomial{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_Math_LinearAlgebra_IPolynomialFromRingExtensions" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.IPolynomialFromRingExtensions">
      <topicdata name="IPolynomialFromRingExtensions" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.IPolynomialFromRingExtensions" />
      <apidata name="IPolynomialFromRingExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Calculate``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
        <element api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Multiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
        <element api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Pow``2(Math.LinearAlgebra.IPolynomial{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomialFromRingExtensions" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_IPolynomialFromRingExtensions" />
    </api>
    <api id="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Calculate``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)">
      <topicdata group="api" />
      <apidata name="Calculate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Calculate``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="polynomial">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Calculate``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Calculate``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="x">
          <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Calculate``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Calculate``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomialFromRingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IPolynomialFromRingExtensions_Calculate__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Multiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Multiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="polynomial1">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Multiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Multiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="polynomial2">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Multiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Multiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Multiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
            <template name="TRing" index="1" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Multiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomialFromRingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IPolynomialFromRingExtensions_Multiply__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Pow``2(Math.LinearAlgebra.IPolynomial{``0,``1},System.UInt32)">
      <topicdata group="api" />
      <apidata name="Pow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Pow``2(Math.LinearAlgebra.IPolynomial{``0,``1},System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="polynomial">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Pow``2(Math.LinearAlgebra.IPolynomial{``0,``1},System.UInt32)" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Pow``2(Math.LinearAlgebra.IPolynomial{``0,``1},System.UInt32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="power">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Pow``2(Math.LinearAlgebra.IPolynomial{``0,``1},System.UInt32)" />
            <template name="TRing" index="1" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.Pow``2(Math.LinearAlgebra.IPolynomial{``0,``1},System.UInt32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomialFromRingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IPolynomialFromRingExtensions_Pow__2" />
    </api>
    <api id="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)">
      <topicdata group="api" />
      <apidata name="ScalarMultiply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="polynomial">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="scalar">
          <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
            <template name="TRing" index="1" api="M:Math.LinearAlgebra.IPolynomialFromRingExtensions.ScalarMultiply``2(Math.LinearAlgebra.IPolynomial{``0,``1},``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.IPolynomialFromRingExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_Math_LinearAlgebra_IPolynomialFromRingExtensions_ScalarMultiply__2" />
    </api>
    <api id="T:Math.LinearAlgebra.LinearAlgebraException">
      <topicdata group="api" />
      <apidata name="LinearAlgebraException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.ApplicationException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Math.LinearAlgebra.LinearAlgebraException.#ctor">
          <element api="M:Math.LinearAlgebra.LinearAlgebraException.#ctor(Math.LinearAlgebra.LinearAlgebraExceptionType)" />
          <element api="M:Math.LinearAlgebra.LinearAlgebraException.#ctor(Math.LinearAlgebra.LinearAlgebraExceptionType,System.String)" />
          <element api="M:Math.LinearAlgebra.LinearAlgebraException.#ctor(Math.LinearAlgebra.LinearAlgebraExceptionType,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="P:Math.LinearAlgebra.LinearAlgebraException.ExceptionType" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_LinearAlgebraException" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.LinearAlgebraException">
      <topicdata name="LinearAlgebraException" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.LinearAlgebraException" />
      <apidata name="LinearAlgebraException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.LinearAlgebraException" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_LinearAlgebraException" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.LinearAlgebraException">
      <topicdata name="LinearAlgebraException" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.LinearAlgebraException" />
      <apidata name="LinearAlgebraException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:Math.LinearAlgebra.LinearAlgebraException.ExceptionType" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.LinearAlgebraException" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_LinearAlgebraException" />
    </api>
    <api id="Events.T:Math.LinearAlgebra.LinearAlgebraException">
      <topicdata name="LinearAlgebraException" group="list" subgroup="Events" typeTopicId="T:Math.LinearAlgebra.LinearAlgebraException" />
      <apidata name="LinearAlgebraException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.LinearAlgebraException" />
      </containers>
      <file name="Events_T_Math_LinearAlgebra_LinearAlgebraException" />
    </api>
    <api id="Overload:Math.LinearAlgebra.LinearAlgebraException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Math.LinearAlgebra.LinearAlgebraException.#ctor(Math.LinearAlgebra.LinearAlgebraExceptionType)" />
        <element api="M:Math.LinearAlgebra.LinearAlgebraException.#ctor(Math.LinearAlgebra.LinearAlgebraExceptionType,System.String)" />
        <element api="M:Math.LinearAlgebra.LinearAlgebraException.#ctor(Math.LinearAlgebra.LinearAlgebraExceptionType,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.LinearAlgebraException" ref="true" />
      </containers>
      <file name="Overload_Math_LinearAlgebra_LinearAlgebraException__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.LinearAlgebraException.#ctor(Math.LinearAlgebra.LinearAlgebraExceptionType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Math.LinearAlgebra.LinearAlgebraException.#ctor" />
      <parameters>
        <parameter name="exceptionType">
          <type api="T:Math.LinearAlgebra.LinearAlgebraExceptionType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.LinearAlgebraException" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_LinearAlgebraException__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.LinearAlgebraException.#ctor(Math.LinearAlgebra.LinearAlgebraExceptionType,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Math.LinearAlgebra.LinearAlgebraException.#ctor" />
      <parameters>
        <parameter name="exceptionType">
          <type api="T:Math.LinearAlgebra.LinearAlgebraExceptionType" ref="false" />
        </parameter>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.LinearAlgebraException" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_LinearAlgebraException__ctor_1" />
    </api>
    <api id="M:Math.LinearAlgebra.LinearAlgebraException.#ctor(Math.LinearAlgebra.LinearAlgebraExceptionType,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Math.LinearAlgebra.LinearAlgebraException.#ctor" />
      <parameters>
        <parameter name="exceptionType">
          <type api="T:Math.LinearAlgebra.LinearAlgebraExceptionType" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.LinearAlgebraException" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_LinearAlgebraException__ctor_2" />
    </api>
    <api id="P:Math.LinearAlgebra.LinearAlgebraException.ExceptionType">
      <topicdata group="api" />
      <apidata name="ExceptionType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExceptionType" />
      <returns>
        <type api="T:Math.LinearAlgebra.LinearAlgebraExceptionType" ref="false" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.LinearAlgebraException" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_LinearAlgebraException_ExceptionType" />
    </api>
    <api id="T:Math.LinearAlgebra.LinearAlgebraExceptionType">
      <topicdata group="api" />
      <apidata name="LinearAlgebraExceptionType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Math.LinearAlgebra.LinearAlgebraExceptionType.Default" />
        <element api="F:Math.LinearAlgebra.LinearAlgebraExceptionType.IndexEqualOrGreaterDimension" />
        <element api="F:Math.LinearAlgebra.LinearAlgebraExceptionType.IndexEqualsMaxUnsignedInteger" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_LinearAlgebraExceptionType" />
    </api>
    <api id="F:Math.LinearAlgebra.LinearAlgebraExceptionType.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Math.LinearAlgebra.LinearAlgebraExceptionType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.LinearAlgebraExceptionType" ref="false" />
      </containers>
      <file name="F_Math_LinearAlgebra_LinearAlgebraExceptionType_Default" />
    </api>
    <api id="F:Math.LinearAlgebra.LinearAlgebraExceptionType.IndexEqualOrGreaterDimension">
      <topicdata group="api" notopic="" />
      <apidata name="IndexEqualOrGreaterDimension" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Math.LinearAlgebra.LinearAlgebraExceptionType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.LinearAlgebraExceptionType" ref="false" />
      </containers>
      <file name="F_Math_LinearAlgebra_LinearAlgebraExceptionType_IndexEqualOrGreaterDimension" />
    </api>
    <api id="F:Math.LinearAlgebra.LinearAlgebraExceptionType.IndexEqualsMaxUnsignedInteger">
      <topicdata group="api" notopic="" />
      <apidata name="IndexEqualsMaxUnsignedInteger" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Math.LinearAlgebra.LinearAlgebraExceptionType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.LinearAlgebraExceptionType" ref="false" />
      </containers>
      <file name="F_Math_LinearAlgebra_LinearAlgebraExceptionType_IndexEqualsMaxUnsignedInteger" />
    </api>
    <api id="T:Math.LinearAlgebra.Matrix`2">
      <topicdata group="api" />
      <apidata name="Matrix" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Matrix`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.Matrix`2" />
            <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Matrix`2" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.Matrix`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.Matrix`2" />
                <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Matrix`2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="Overload:Math.LinearAlgebra.Matrix`2.Equals">
          <element api="M:System.Object.Equals(System.Object)">
            <apidata name="Equals" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="obj">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:Math.LinearAlgebra.Matrix`2.Equals(Math.LinearAlgebra.Matrix{`0,`1})" />
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Math.LinearAlgebra.Matrix`2.#ctor">
          <element api="M:Math.LinearAlgebra.Matrix`2.#ctor(System.UInt32)" />
          <element api="M:Math.LinearAlgebra.Matrix`2.#ctor(System.UInt32,System.UInt32)" />
        </element>
        <element api="P:Math.LinearAlgebra.Matrix`2.ColumnDimension" />
        <element api="P:Math.LinearAlgebra.Matrix`2.Item(System.UInt32,System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Matrix`2.ReturnNewInstance(System.UInt32,System.UInt32)" />
        <element api="P:Math.LinearAlgebra.Matrix`2.RowDimension" />
        <element api="M:Math.LinearAlgebra.Matrix`2.ToString" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_Matrix_2" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Matrix`2">
      <topicdata name="Matrix" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Matrix`2" />
      <apidata name="Matrix" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Matrix`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="Overload:Math.LinearAlgebra.Matrix`2.Equals">
          <element api="M:System.Object.Equals(System.Object)">
            <apidata name="Equals" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="obj">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:Math.LinearAlgebra.Matrix`2.Equals(Math.LinearAlgebra.Matrix{`0,`1})" />
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Matrix`2.ReturnNewInstance(System.UInt32,System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Matrix`2.ToString" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Matrix`2" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Matrix_2" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.Matrix`2">
      <topicdata name="Matrix" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.Matrix`2" />
      <apidata name="Matrix" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Matrix`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Math.LinearAlgebra.Matrix`2.ColumnDimension" />
        <element api="P:Math.LinearAlgebra.Matrix`2.Item(System.UInt32,System.UInt32)" />
        <element api="P:Math.LinearAlgebra.Matrix`2.RowDimension" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Matrix`2" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_Matrix_2" />
    </api>
    <api id="Overload:Math.LinearAlgebra.Matrix`2.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Matrix`2.Equals(Math.LinearAlgebra.Matrix{`0,`1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true" />
      </containers>
      <file name="Overload_Math_LinearAlgebra_Matrix_2_Equals" />
    </api>
    <api id="Overload:Math.LinearAlgebra.Matrix`2.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Math.LinearAlgebra.Matrix`2.#ctor(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Matrix`2.#ctor(System.UInt32,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true" />
      </containers>
      <file name="Overload_Math_LinearAlgebra_Matrix_2__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Matrix`2.#ctor(System.UInt32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Math.LinearAlgebra.Matrix`2.#ctor" />
      <parameters>
        <parameter name="dimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Matrix_2__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Matrix`2.#ctor(System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Math.LinearAlgebra.Matrix`2.#ctor" />
      <parameters>
        <parameter name="rowDimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="columnDimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Matrix_2__ctor_1" />
    </api>
    <api id="P:Math.LinearAlgebra.Matrix`2.ColumnDimension">
      <topicdata group="api" />
      <apidata name="ColumnDimension" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ColumnDimension" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <implements>
        <member api="P:Math.LinearAlgebra.IMatrix`2.ColumnDimension">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.Matrix`2" />
              <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Matrix`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Matrix_2_ColumnDimension" />
    </api>
    <api id="M:Math.LinearAlgebra.Matrix`2.Equals(Math.LinearAlgebra.Matrix{`0,`1})">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Math.LinearAlgebra.Matrix`2.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Math.LinearAlgebra.Matrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.Matrix`2" />
              <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Matrix`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Math.LinearAlgebra.Matrix`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Matrix`2" />
                  <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Matrix`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Matrix_2_Equals" />
    </api>
    <api id="P:Math.LinearAlgebra.Matrix`2.Item(System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="row">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Math.LinearAlgebra.Matrix`2" />
      </returns>
      <implements>
        <member api="P:Math.LinearAlgebra.IMatrix`2.Item(System.UInt32,System.UInt32)">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.Matrix`2" />
              <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Matrix`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Matrix_2_Item" />
    </api>
    <api id="M:Math.LinearAlgebra.Matrix`2.ReturnNewInstance(System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="ReturnNewInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="rowDimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="columnDimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.Matrix`2" />
            <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Matrix`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Math.LinearAlgebra.IMatrix`2.ReturnNewInstance(System.UInt32,System.UInt32)">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.Matrix`2" />
              <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Matrix`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Matrix_2_ReturnNewInstance" />
    </api>
    <api id="P:Math.LinearAlgebra.Matrix`2.RowDimension">
      <topicdata group="api" />
      <apidata name="RowDimension" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_RowDimension" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <implements>
        <member api="P:Math.LinearAlgebra.IMatrix`2.RowDimension">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.Matrix`2" />
              <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Matrix`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Matrix_2_RowDimension" />
    </api>
    <api id="M:Math.LinearAlgebra.Matrix`2.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Matrix_2_ToString" />
    </api>
    <api id="T:Math.LinearAlgebra.Polynomial`2">
      <topicdata group="api" />
      <apidata name="Polynomial" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Polynomial`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Math.LinearAlgebra.Polynomial`2" />
                <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Polynomial`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.Polynomial`2" />
            <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Polynomial`2" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="Overload:Math.LinearAlgebra.Polynomial`2.Equals">
          <element api="M:System.Object.Equals(System.Object)">
            <apidata name="Equals" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="obj">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:Math.LinearAlgebra.Polynomial`2.Equals(Math.LinearAlgebra.Polynomial{`0,`1})" />
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Polynomial`2.#ctor(System.UInt32)" />
        <element api="P:Math.LinearAlgebra.Polynomial`2.Degree" />
        <element api="P:Math.LinearAlgebra.Polynomial`2.Item(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Polynomial`2.ReturnNewInstance(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Polynomial`2.ToString" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_Polynomial_2" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Polynomial`2">
      <topicdata name="Polynomial" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Polynomial`2" />
      <apidata name="Polynomial" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Polynomial`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="Overload:Math.LinearAlgebra.Polynomial`2.Equals">
          <element api="M:System.Object.Equals(System.Object)">
            <apidata name="Equals" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="obj">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:Math.LinearAlgebra.Polynomial`2.Equals(Math.LinearAlgebra.Polynomial{`0,`1})" />
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Polynomial`2.ReturnNewInstance(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Polynomial`2.ToString" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Polynomial`2" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Polynomial_2" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.Polynomial`2">
      <topicdata name="Polynomial" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.Polynomial`2" />
      <apidata name="Polynomial" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Polynomial`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Math.LinearAlgebra.Polynomial`2.Degree" />
        <element api="P:Math.LinearAlgebra.Polynomial`2.Item(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Polynomial`2" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_Polynomial_2" />
    </api>
    <api id="Overload:Math.LinearAlgebra.Polynomial`2.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Polynomial`2.Equals(Math.LinearAlgebra.Polynomial{`0,`1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true" />
      </containers>
      <file name="Overload_Math_LinearAlgebra_Polynomial_2_Equals" />
    </api>
    <api id="M:Math.LinearAlgebra.Polynomial`2.#ctor(System.UInt32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="degree">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Polynomial_2__ctor" />
    </api>
    <api id="P:Math.LinearAlgebra.Polynomial`2.Degree">
      <topicdata group="api" />
      <apidata name="Degree" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Degree" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <implements>
        <member api="P:Math.LinearAlgebra.IPolynomial`2.Degree">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.Polynomial`2" />
              <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Polynomial`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Polynomial_2_Degree" />
    </api>
    <api id="M:Math.LinearAlgebra.Polynomial`2.Equals(Math.LinearAlgebra.Polynomial{`0,`1})">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Math.LinearAlgebra.Polynomial`2.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.Polynomial`2" />
              <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Polynomial`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Polynomial`2" />
                  <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Polynomial`2" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Polynomial_2_Equals" />
    </api>
    <api id="P:Math.LinearAlgebra.Polynomial`2.Item(System.UInt32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Math.LinearAlgebra.Polynomial`2" />
      </returns>
      <implements>
        <member api="P:Math.LinearAlgebra.IPolynomial`2.Item(System.UInt32)">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.Polynomial`2" />
              <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Polynomial`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Polynomial_2_Item" />
    </api>
    <api id="M:Math.LinearAlgebra.Polynomial`2.ReturnNewInstance(System.UInt32)">
      <topicdata group="api" />
      <apidata name="ReturnNewInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="degree">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Math.LinearAlgebra.Polynomial`2" />
            <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Polynomial`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Math.LinearAlgebra.IPolynomial`2.ReturnNewInstance(System.UInt32)">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Math.LinearAlgebra.Polynomial`2" />
              <template name="TStruct" index="1" api="T:Math.LinearAlgebra.Polynomial`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Polynomial_2_ReturnNewInstance" />
    </api>
    <api id="M:Math.LinearAlgebra.Polynomial`2.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Polynomial_2_ToString" />
    </api>
    <api id="T:Math.LinearAlgebra.SpecialDirectSums">
      <topicdata group="api" />
      <apidata name="SpecialDirectSums" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.SpecialDirectSums.#ctor" />
        <element api="M:Math.LinearAlgebra.SpecialDirectSums.OneTuple``2(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.SpecialDirectSums.ZeroTuple``2(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_SpecialDirectSums" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.SpecialDirectSums">
      <topicdata name="SpecialDirectSums" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.SpecialDirectSums" />
      <apidata name="SpecialDirectSums" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.SpecialDirectSums.OneTuple``2(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.SpecialDirectSums.ZeroTuple``2(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialDirectSums" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_SpecialDirectSums" />
    </api>
    <api id="M:Math.LinearAlgebra.SpecialDirectSums.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialDirectSums" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_SpecialDirectSums__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.SpecialDirectSums.OneTuple``2(System.UInt32)">
      <topicdata group="api" />
      <apidata name="OneTuple" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialDirectSums.OneTuple``2(System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="dimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialDirectSums.OneTuple``2(System.UInt32)" />
            <template name="TStruct" index="1" api="M:Math.LinearAlgebra.SpecialDirectSums.OneTuple``2(System.UInt32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialDirectSums" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_SpecialDirectSums_OneTuple__2" />
    </api>
    <api id="M:Math.LinearAlgebra.SpecialDirectSums.ZeroTuple``2(System.UInt32)">
      <topicdata group="api" />
      <apidata name="ZeroTuple" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialDirectSums.ZeroTuple``2(System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="dimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.DirectSum`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialDirectSums.ZeroTuple``2(System.UInt32)" />
            <template name="TStruct" index="1" api="M:Math.LinearAlgebra.SpecialDirectSums.ZeroTuple``2(System.UInt32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialDirectSums" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_SpecialDirectSums_ZeroTuple__2" />
    </api>
    <api id="T:Math.LinearAlgebra.SpecialMatrices">
      <topicdata group="api" />
      <apidata name="SpecialMatrices" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.SpecialMatrices.#ctor" />
        <element api="M:Math.LinearAlgebra.SpecialMatrices.OneMatrix``2(System.UInt32)" />
        <element api="Overload:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix">
          <element api="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32)" />
          <element api="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32,System.UInt32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_SpecialMatrices" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.SpecialMatrices">
      <topicdata name="SpecialMatrices" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.SpecialMatrices" />
      <apidata name="SpecialMatrices" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.SpecialMatrices.OneMatrix``2(System.UInt32)" />
        <element api="Overload:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix">
          <element api="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32)" />
          <element api="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32,System.UInt32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialMatrices" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_SpecialMatrices" />
    </api>
    <api id="Overload:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix">
      <topicdata name="ZeroMatrix" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ZeroMatrix" group="member" subgroup="method" />
      <elements>
        <element api="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialMatrices" ref="true" />
      </containers>
      <file name="Overload_Math_LinearAlgebra_SpecialMatrices_ZeroMatrix" />
    </api>
    <api id="M:Math.LinearAlgebra.SpecialMatrices.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialMatrices" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_SpecialMatrices__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.SpecialMatrices.OneMatrix``2(System.UInt32)">
      <topicdata group="api" />
      <apidata name="OneMatrix" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialMatrices.OneMatrix``2(System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="dimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialMatrices.OneMatrix``2(System.UInt32)" />
            <template name="TRing" index="1" api="M:Math.LinearAlgebra.SpecialMatrices.OneMatrix``2(System.UInt32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialMatrices" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_SpecialMatrices_OneMatrix__2" />
    </api>
    <api id="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32)">
      <topicdata group="api" />
      <apidata name="ZeroMatrix" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TGroup">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="dimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32)" />
            <template name="TGroup" index="1" api="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialMatrices" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_SpecialMatrices_ZeroMatrix__2" />
    </api>
    <api id="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="ZeroMatrix" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TGroup">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32,System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="rowDimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="columnDimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.Matrix`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32,System.UInt32)" />
            <template name="TGroup" index="1" api="M:Math.LinearAlgebra.SpecialMatrices.ZeroMatrix``2(System.UInt32,System.UInt32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialMatrices" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_SpecialMatrices_ZeroMatrix__2_1" />
    </api>
    <api id="T:Math.LinearAlgebra.SpecialPolynomials">
      <topicdata group="api" />
      <apidata name="SpecialPolynomials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.SpecialPolynomials.#ctor" />
        <element api="M:Math.LinearAlgebra.SpecialPolynomials.OnePolynomial``2(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.SpecialPolynomials.ZeroPolynomial``2(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
      </containers>
      <file name="T_Math_LinearAlgebra_SpecialPolynomials" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.SpecialPolynomials">
      <topicdata name="SpecialPolynomials" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.SpecialPolynomials" />
      <apidata name="SpecialPolynomials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.SpecialPolynomials.OnePolynomial``2(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.SpecialPolynomials.ZeroPolynomial``2(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialPolynomials" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_SpecialPolynomials" />
    </api>
    <api id="M:Math.LinearAlgebra.SpecialPolynomials.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialPolynomials" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_SpecialPolynomials__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.SpecialPolynomials.OnePolynomial``2(System.UInt32)">
      <topicdata group="api" />
      <apidata name="OnePolynomial" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialPolynomials.OnePolynomial``2(System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="degree">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialPolynomials.OnePolynomial``2(System.UInt32)" />
            <template name="TRing" index="1" api="M:Math.LinearAlgebra.SpecialPolynomials.OnePolynomial``2(System.UInt32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialPolynomials" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_SpecialPolynomials_OnePolynomial__2" />
    </api>
    <api id="M:Math.LinearAlgebra.SpecialPolynomials.ZeroPolynomial``2(System.UInt32)">
      <topicdata group="api" />
      <apidata name="ZeroPolynomial" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TGroup">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialPolynomials.ZeroPolynomial``2(System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="degree">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Math.LinearAlgebra.Polynomial`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Math.LinearAlgebra.SpecialPolynomials.ZeroPolynomial``2(System.UInt32)" />
            <template name="TGroup" index="1" api="M:Math.LinearAlgebra.SpecialPolynomials.ZeroPolynomial``2(System.UInt32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra" module="Math.LinearAlgebra" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.5398.20652" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra" />
        <type api="T:Math.LinearAlgebra.SpecialPolynomials" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_SpecialPolynomials_ZeroPolynomial__2" />
    </api>
    <api id="N:Math.LinearAlgebra.Tests">
      <topicdata group="api" />
      <apidata name="Math.LinearAlgebra.Tests" group="namespace" />
      <elements>
        <element api="T:Math.LinearAlgebra.Tests.DirectSumTest`2" />
        <element api="T:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest" />
        <element api="T:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest" />
        <element api="T:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest" />
        <element api="T:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest" />
        <element api="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource" />
        <element api="T:Math.LinearAlgebra.Tests.PolynomialTest`2" />
        <element api="T:Math.LinearAlgebra.Tests.MatrixTest`2" />
        <element api="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource" />
        <element api="T:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest" />
        <element api="T:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest" />
        <element api="T:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest" />
        <element api="T:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest" />
        <element api="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource" />
        <element api="T:Math.LinearAlgebra.Tests.IMatrixExtensionsTest" />
        <element api="T:Math.LinearAlgebra.Tests.IMatrixFromRingExtensionsTest" />
        <element api="T:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest" />
        <element api="T:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest" />
        <element api="T:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest" />
        <element api="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" />
      </elements>
      <file name="N_Math_LinearAlgebra_Tests" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.DirectSumTest`2">
      <topicdata group="api" />
      <apidata name="DirectSumTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained ctor="true" />
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Tests.DirectSumTest`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.DirectSumTest`2.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.DirectSumTest`2.Indexer_SettingToHighDimension_ThrowsVectorException(System.UInt32,System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Tests.DirectSumTest`2.Initialize_CheckDimension_EqualsGivenDimension(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_DirectSumTest_2" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.DirectSumTest`2">
      <topicdata name="DirectSumTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.DirectSumTest`2" />
      <apidata name="DirectSumTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ctor="true" />
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Tests.DirectSumTest`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.DirectSumTest`2.Indexer_SettingToHighDimension_ThrowsVectorException(System.UInt32,System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Tests.DirectSumTest`2.Initialize_CheckDimension_EqualsGivenDimension(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.DirectSumTest`2" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_DirectSumTest_2" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.DirectSumTest`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.DirectSumTest`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_DirectSumTest_2__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.DirectSumTest`2.Indexer_SettingToHighDimension_ThrowsVectorException(System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="Indexer_SettingToHighDimension_ThrowsVectorException" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="index">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.DirectSumTest`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_DirectSumTest_2_Indexer_SettingToHighDimension_ThrowsVectorException" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.DirectSumTest`2.Initialize_CheckDimension_EqualsGivenDimension(System.UInt32)">
      <topicdata group="api" />
      <apidata name="Initialize_CheckDimension_EqualsGivenDimension" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="givenDimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.DirectSumTest`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_DirectSumTest_2_Initialize_CheckDimension_EqualsGivenDimension" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource">
      <topicdata group="api" />
      <apidata name="FakeDirectSumTestDataSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.#ctor" />
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.ComplexList" />
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.DoubleList" />
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.FieldDoubleIDirectSumSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.GroupInt32IDirectSumSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.Int32List" />
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.RingComplexIDirectSumSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.RingInt32IDirectSumSource" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_FakeDirectSumTestDataSource" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource">
      <topicdata name="FakeDirectSumTestDataSource" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource" />
      <apidata name="FakeDirectSumTestDataSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_FakeDirectSumTestDataSource" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource">
      <topicdata name="FakeDirectSumTestDataSource" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource" />
      <apidata name="FakeDirectSumTestDataSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.ComplexList" />
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.DoubleList" />
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.FieldDoubleIDirectSumSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.GroupInt32IDirectSumSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.Int32List" />
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.RingComplexIDirectSumSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.RingInt32IDirectSumSource" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_Tests_FakeDirectSumTestDataSource" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_FakeDirectSumTestDataSource__ctor" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.ComplexList">
      <topicdata group="api" />
      <apidata name="ComplexList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ComplexList" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeDirectSumTestDataSource_ComplexList" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.DoubleList">
      <topicdata group="api" />
      <apidata name="DoubleList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DoubleList" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeDirectSumTestDataSource_DoubleList" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.FieldDoubleIDirectSumSource">
      <topicdata group="api" />
      <apidata name="FieldDoubleIDirectSumSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FieldDoubleIDirectSumSource" />
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
            <type api="T:Math.Base.DoubleField" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeDirectSumTestDataSource_FieldDoubleIDirectSumSource" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.GroupInt32IDirectSumSource">
      <topicdata group="api" />
      <apidata name="GroupInt32IDirectSumSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GroupInt32IDirectSumSource" />
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
            <type api="T:Math.Base.Int32Group" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeDirectSumTestDataSource_GroupInt32IDirectSumSource" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.Int32List">
      <topicdata group="api" />
      <apidata name="Int32List" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Int32List" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeDirectSumTestDataSource_Int32List" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.RingComplexIDirectSumSource">
      <topicdata group="api" />
      <apidata name="RingComplexIDirectSumSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RingComplexIDirectSumSource" />
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
            <type api="T:Math.Base.ComplexRing" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeDirectSumTestDataSource_RingComplexIDirectSumSource" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource.RingInt32IDirectSumSource">
      <topicdata group="api" />
      <apidata name="RingInt32IDirectSumSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RingInt32IDirectSumSource" />
      <returns>
        <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
            <type api="T:Math.Base.Int32Ring" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeDirectSumTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeDirectSumTestDataSource_RingInt32IDirectSumSource" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource">
      <topicdata group="api" />
      <apidata name="FakeMatrixSquaredTestDataSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.#ctor" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.ComplexList" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.DoubleList" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.DoubleList2" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.FieldComplexSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.FieldDoubleSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.FieldDoubleSource2" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.GroupInt32Source" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.Int32List" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.RingInt32Source" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_FakeMatrixSquaredTestDataSource" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource">
      <topicdata name="FakeMatrixSquaredTestDataSource" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" />
      <apidata name="FakeMatrixSquaredTestDataSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_FakeMatrixSquaredTestDataSource" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource">
      <topicdata name="FakeMatrixSquaredTestDataSource" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" />
      <apidata name="FakeMatrixSquaredTestDataSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.ComplexList" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.DoubleList" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.DoubleList2" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.FieldComplexSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.FieldDoubleSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.FieldDoubleSource2" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.GroupInt32Source" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.Int32List" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.RingInt32Source" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_Tests_FakeMatrixSquaredTestDataSource" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_FakeMatrixSquaredTestDataSource__ctor" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.ComplexList">
      <topicdata group="api" />
      <apidata name="ComplexList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ComplexList" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Numerics.Complex" ref="false" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixSquaredTestDataSource_ComplexList" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.DoubleList">
      <topicdata group="api" />
      <apidata name="DoubleList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DoubleList" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixSquaredTestDataSource_DoubleList" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.DoubleList2">
      <topicdata group="api" />
      <apidata name="DoubleList2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DoubleList2" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixSquaredTestDataSource_DoubleList2" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.FieldComplexSource">
      <topicdata group="api" />
      <apidata name="FieldComplexSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FieldComplexSource" />
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
            <type api="T:Math.Base.ComplexField" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixSquaredTestDataSource_FieldComplexSource" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.FieldDoubleSource">
      <topicdata group="api" />
      <apidata name="FieldDoubleSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FieldDoubleSource" />
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
            <type api="T:Math.Base.DoubleField" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixSquaredTestDataSource_FieldDoubleSource" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.FieldDoubleSource2">
      <topicdata group="api" />
      <apidata name="FieldDoubleSource2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FieldDoubleSource2" />
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
            <type api="T:Math.Base.DoubleField" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixSquaredTestDataSource_FieldDoubleSource2" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.GroupInt32Source">
      <topicdata group="api" />
      <apidata name="GroupInt32Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GroupInt32Source" />
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
            <type api="T:Math.Base.Int32Group" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixSquaredTestDataSource_GroupInt32Source" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.Int32List">
      <topicdata group="api" />
      <apidata name="Int32List" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Int32List" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixSquaredTestDataSource_Int32List" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource.RingInt32Source">
      <topicdata group="api" />
      <apidata name="RingInt32Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RingInt32Source" />
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
            <type api="T:Math.Base.Int32Ring" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixSquaredTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixSquaredTestDataSource_RingInt32Source" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource">
      <topicdata group="api" />
      <apidata name="FakeMatrixTestDataSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.#ctor" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.ComplexList" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.DoubleList" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.FieldDoubleSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.GroupInt32Source" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.Int32List" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.RingComplexSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.RingInt32Source" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_FakeMatrixTestDataSource" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource">
      <topicdata name="FakeMatrixTestDataSource" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource" />
      <apidata name="FakeMatrixTestDataSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_FakeMatrixTestDataSource" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource">
      <topicdata name="FakeMatrixTestDataSource" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource" />
      <apidata name="FakeMatrixTestDataSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.ComplexList" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.DoubleList" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.FieldDoubleSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.GroupInt32Source" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.Int32List" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.RingComplexSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.RingInt32Source" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_Tests_FakeMatrixTestDataSource" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_FakeMatrixTestDataSource__ctor" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.ComplexList">
      <topicdata group="api" />
      <apidata name="ComplexList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ComplexList" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Numerics.Complex" ref="false" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixTestDataSource_ComplexList" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.DoubleList">
      <topicdata group="api" />
      <apidata name="DoubleList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DoubleList" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixTestDataSource_DoubleList" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.FieldDoubleSource">
      <topicdata group="api" />
      <apidata name="FieldDoubleSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FieldDoubleSource" />
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
            <type api="T:Math.Base.DoubleField" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixTestDataSource_FieldDoubleSource" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.GroupInt32Source">
      <topicdata group="api" />
      <apidata name="GroupInt32Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GroupInt32Source" />
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
            <type api="T:Math.Base.Int32Group" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixTestDataSource_GroupInt32Source" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.Int32List">
      <topicdata group="api" />
      <apidata name="Int32List" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Int32List" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixTestDataSource_Int32List" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.RingComplexSource">
      <topicdata group="api" />
      <apidata name="RingComplexSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RingComplexSource" />
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
            <type api="T:Math.Base.ComplexRing" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixTestDataSource_RingComplexSource" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource.RingInt32Source">
      <topicdata group="api" />
      <apidata name="RingInt32Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RingInt32Source" />
      <returns>
        <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
            <type api="T:Math.Base.Int32Ring" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakeMatrixTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakeMatrixTestDataSource_RingInt32Source" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource">
      <topicdata group="api" />
      <apidata name="FakePolynomialTestDataSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.#ctor" />
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.ComplexList" />
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.DoubleList" />
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.FieldDoubleIPolynomialSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.GroupInt32IPolynomialSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.Int32List" />
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.RingComplexIPolynomialSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.RingInt32IPolynomialSource" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_FakePolynomialTestDataSource" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource">
      <topicdata name="FakePolynomialTestDataSource" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource" />
      <apidata name="FakePolynomialTestDataSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_FakePolynomialTestDataSource" />
    </api>
    <api id="Properties.T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource">
      <topicdata name="FakePolynomialTestDataSource" group="list" subgroup="Properties" typeTopicId="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource" />
      <apidata name="FakePolynomialTestDataSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.ComplexList" />
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.DoubleList" />
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.FieldDoubleIPolynomialSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.GroupInt32IPolynomialSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.Int32List" />
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.RingComplexIPolynomialSource" />
        <element api="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.RingInt32IPolynomialSource" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource" />
      </containers>
      <file name="Properties_T_Math_LinearAlgebra_Tests_FakePolynomialTestDataSource" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_FakePolynomialTestDataSource__ctor" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.ComplexList">
      <topicdata group="api" />
      <apidata name="ComplexList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ComplexList" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakePolynomialTestDataSource_ComplexList" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.DoubleList">
      <topicdata group="api" />
      <apidata name="DoubleList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DoubleList" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakePolynomialTestDataSource_DoubleList" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.FieldDoubleIPolynomialSource">
      <topicdata group="api" />
      <apidata name="FieldDoubleIPolynomialSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FieldDoubleIPolynomialSource" />
      <returns>
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
            <type api="T:Math.Base.DoubleField" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakePolynomialTestDataSource_FieldDoubleIPolynomialSource" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.GroupInt32IPolynomialSource">
      <topicdata group="api" />
      <apidata name="GroupInt32IPolynomialSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GroupInt32IPolynomialSource" />
      <returns>
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
            <type api="T:Math.Base.Int32Group" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakePolynomialTestDataSource_GroupInt32IPolynomialSource" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.Int32List">
      <topicdata group="api" />
      <apidata name="Int32List" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Int32List" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakePolynomialTestDataSource_Int32List" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.RingComplexIPolynomialSource">
      <topicdata group="api" />
      <apidata name="RingComplexIPolynomialSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RingComplexIPolynomialSource" />
      <returns>
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
          <specialization>
            <type api="T:System.Numerics.Complex" ref="false" />
            <type api="T:Math.Base.ComplexRing" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakePolynomialTestDataSource_RingComplexIPolynomialSource" />
    </api>
    <api id="P:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource.RingInt32IPolynomialSource">
      <topicdata group="api" />
      <apidata name="RingInt32IPolynomialSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RingInt32IPolynomialSource" />
      <returns>
        <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
            <type api="T:Math.Base.Int32Ring" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.FakePolynomialTestDataSource" ref="true" />
      </containers>
      <file name="P_Math_LinearAlgebra_Tests_FakePolynomialTestDataSource_RingInt32IPolynomialSource" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest">
      <topicdata group="api" />
      <apidata name="IDirectSumExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.BubbleSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.Copy_IsNewInstance_VectorsAreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.InsertionSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_IDirectSumExtensionsTest" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest">
      <topicdata name="IDirectSumExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest" />
      <apidata name="IDirectSumExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.BubbleSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.Copy_IsNewInstance_VectorsAreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.InsertionSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_IDirectSumExtensionsTest" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IDirectSumExtensionsTest__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.BubbleSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})">
      <topicdata group="api" />
      <apidata name="BubbleSort_Sort_AreEqual" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.BubbleSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hackForGenericParameter1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.BubbleSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
        </parameter>
        <parameter name="hackForGenericParameter2">
          <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.BubbleSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
        </parameter>
        <parameter name="tupleToSort">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.BubbleSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.BubbleSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="list">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.BubbleSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IDirectSumExtensionsTest_BubbleSort_Sort_AreEqual__2" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.Copy_IsNewInstance_VectorsAreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="Copy_IsNewInstance_VectorsAreEqual" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.Copy_IsNewInstance_VectorsAreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hackForGenericParameter1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.Copy_IsNewInstance_VectorsAreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
        </parameter>
        <parameter name="hackForGenericParameter2">
          <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.Copy_IsNewInstance_VectorsAreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
        </parameter>
        <parameter name="tuple">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.Copy_IsNewInstance_VectorsAreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.Copy_IsNewInstance_VectorsAreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IDirectSumExtensionsTest_Copy_IsNewInstance_VectorsAreEqual__2" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.InsertionSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})">
      <topicdata group="api" />
      <apidata name="InsertionSort_Sort_AreEqual" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.InsertionSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hackForGenericParameter1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.InsertionSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
        </parameter>
        <parameter name="hackForGenericParameter2">
          <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.InsertionSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
        </parameter>
        <parameter name="tupleToSort">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.InsertionSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.InsertionSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="list">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest.InsertionSort_Sort_AreEqual``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.Collections.Generic.List{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IDirectSumExtensionsTest_InsertionSort_Sort_AreEqual__2" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest">
      <topicdata group="api" />
      <apidata name="IDirectSumFromGroupExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_IDirectSumFromGroupExtensionsTest" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest">
      <topicdata name="IDirectSumFromGroupExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest" />
      <apidata name="IDirectSumFromGroupExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_IDirectSumFromGroupExtensionsTest" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IDirectSumFromGroupExtensionsTest__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="InverseElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TGroup">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hackForGenericParameter">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
        </parameter>
        <parameter name="underlyingGroup">
          <template name="TGroup" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
        </parameter>
        <parameter name="tuple">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TGroup" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumFromGroupExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IDirectSumFromGroupExtensionsTest_InverseElement__2" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest">
      <topicdata group="api" />
      <apidata name="IDirectSumFromMonoidExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Injection_InjectNewDimension_DimensionEqualsExpected``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.SumElements_EqualsExpectedValue``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_IDirectSumFromMonoidExtensionsTest" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest">
      <topicdata name="IDirectSumFromMonoidExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest" />
      <apidata name="IDirectSumFromMonoidExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Injection_InjectNewDimension_DimensionEqualsExpected``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.SumElements_EqualsExpectedValue``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_IDirectSumFromMonoidExtensionsTest" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IDirectSumFromMonoidExtensionsTest__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="Add_AddTwoTuples_EqualsExpectedTuple" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hackForGenericParameter1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
        </parameter>
        <parameter name="hackForGenericParameter2">
          <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
        </parameter>
        <parameter name="tuple1">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tuple2">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="expectedTuple">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IDirectSumFromMonoidExtensionsTest_Add_AddTwoTuples_EqualsExpectedTuple__2" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Injection_InjectNewDimension_DimensionEqualsExpected``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)">
      <topicdata group="api" />
      <apidata name="Injection_InjectNewDimension_DimensionEqualsExpected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Injection_InjectNewDimension_DimensionEqualsExpected``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hackForGenericParameter1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Injection_InjectNewDimension_DimensionEqualsExpected``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
        </parameter>
        <parameter name="monoid">
          <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Injection_InjectNewDimension_DimensionEqualsExpected``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
        </parameter>
        <parameter name="tuple">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Injection_InjectNewDimension_DimensionEqualsExpected``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.Injection_InjectNewDimension_DimensionEqualsExpected``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},System.UInt32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="additionalDimensions">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IDirectSumFromMonoidExtensionsTest_Injection_InjectNewDimension_DimensionEqualsExpected__2" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.SumElements_EqualsExpectedValue``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="SumElements_EqualsExpectedValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.SumElements_EqualsExpectedValue``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="expectedValue">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.SumElements_EqualsExpectedValue``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
        </parameter>
        <parameter name="hackForGenericParameter">
          <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.SumElements_EqualsExpectedValue``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
        </parameter>
        <parameter name="tuple">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.SumElements_EqualsExpectedValue``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest.SumElements_EqualsExpectedValue``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumFromMonoidExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IDirectSumFromMonoidExtensionsTest_SumElements_EqualsExpectedValue__2" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest">
      <topicdata group="api" />
      <apidata name="IDirectSumFromRingExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.Multiply_MultiplyTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_IDirectSumFromRingExtensionsTest" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest">
      <topicdata name="IDirectSumFromRingExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest" />
      <apidata name="IDirectSumFromRingExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.Multiply_MultiplyTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_IDirectSumFromRingExtensionsTest" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IDirectSumFromRingExtensionsTest__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.Multiply_MultiplyTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})">
      <topicdata group="api" />
      <apidata name="Multiply_MultiplyTwoTuples_EqualsExpectedTuple" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.Multiply_MultiplyTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hackForGenericParameter1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.Multiply_MultiplyTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
        </parameter>
        <parameter name="hackForGenericParameter2">
          <template name="TRing" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.Multiply_MultiplyTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
        </parameter>
        <parameter name="tuple1">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.Multiply_MultiplyTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.Multiply_MultiplyTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tuple2">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.Multiply_MultiplyTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.Multiply_MultiplyTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="expectedTuple">
          <type api="T:Math.LinearAlgebra.IDirectSum`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.Multiply_MultiplyTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest.Multiply_MultiplyTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1},Math.LinearAlgebra.IDirectSum{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IDirectSumFromRingExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IDirectSumFromRingExtensionsTest_Multiply_MultiplyTwoTuples_EqualsExpectedTuple__2" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.IMatrixExtensionsTest">
      <topicdata group="api" />
      <apidata name="IMatrixExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Copy_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetColumnVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
        <element api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetRowVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
        <element api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Transpose_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_IMatrixExtensionsTest" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.IMatrixExtensionsTest">
      <topicdata name="IMatrixExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.IMatrixExtensionsTest" />
      <apidata name="IMatrixExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Copy_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetColumnVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
        <element api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetRowVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
        <element api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Transpose_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_IMatrixExtensionsTest" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IMatrixExtensionsTest__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Copy_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})">
      <topicdata group="api" />
      <apidata name="Copy_CheckResultWithGivenParameter_EqualsExpected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Copy_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hack1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Copy_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
        </parameter>
        <parameter name="hack2">
          <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Copy_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
        </parameter>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Copy_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Copy_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IMatrixExtensionsTest_Copy_CheckResultWithGivenParameter_EqualsExpected__2" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetColumnVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})">
      <topicdata group="api" />
      <apidata name="GetColumnVector_CheckResultWithExpected_EqualsExpected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetColumnVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hack1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetColumnVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
        </parameter>
        <parameter name="hack2">
          <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetColumnVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
        </parameter>
        <parameter name="columnIndex">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetColumnVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetColumnVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="underlyingList">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetColumnVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IMatrixExtensionsTest_GetColumnVector_CheckResultWithExpected_EqualsExpected__2" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetRowVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})">
      <topicdata group="api" />
      <apidata name="GetRowVector_CheckResultWithExpected_EqualsExpected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetRowVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hack1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetRowVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
        </parameter>
        <parameter name="hack2">
          <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetRowVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
        </parameter>
        <parameter name="rowIndex">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetRowVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetRowVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="underlyingList">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.GetRowVector_CheckResultWithExpected_EqualsExpected``2(``0,``1,System.UInt32,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IMatrixExtensionsTest_GetRowVector_CheckResultWithExpected_EqualsExpected__2" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Transpose_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})">
      <topicdata group="api" />
      <apidata name="Transpose_CheckResultWithGivenParameter_EqualsExpected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Transpose_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hack1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Transpose_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
        </parameter>
        <parameter name="hack2">
          <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Transpose_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
        </parameter>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Transpose_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixExtensionsTest.Transpose_CheckResultWithGivenParameter_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IMatrixExtensionsTest_Transpose_CheckResultWithGivenParameter_EqualsExpected__2" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest">
      <topicdata group="api" />
      <apidata name="IMatrixFromGroupExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest.Inverse_CheckResultWithExpected_EqualsElementalInverse``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_IMatrixFromGroupExtensionsTest" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest">
      <topicdata name="IMatrixFromGroupExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest" />
      <apidata name="IMatrixFromGroupExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest.Inverse_CheckResultWithExpected_EqualsElementalInverse``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_IMatrixFromGroupExtensionsTest" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IMatrixFromGroupExtensionsTest__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest.Inverse_CheckResultWithExpected_EqualsElementalInverse``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})">
      <topicdata group="api" />
      <apidata name="Inverse_CheckResultWithExpected_EqualsElementalInverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TGroup">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest.Inverse_CheckResultWithExpected_EqualsElementalInverse``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hack1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest.Inverse_CheckResultWithExpected_EqualsElementalInverse``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
        </parameter>
        <parameter name="hack2">
          <template name="TGroup" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest.Inverse_CheckResultWithExpected_EqualsElementalInverse``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
        </parameter>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest.Inverse_CheckResultWithExpected_EqualsElementalInverse``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TGroup" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest.Inverse_CheckResultWithExpected_EqualsElementalInverse``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixFromGroupExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IMatrixFromGroupExtensionsTest_Inverse_CheckResultWithExpected_EqualsElementalInverse__2" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest">
      <topicdata group="api" />
      <apidata name="IMatrixFromMonoidExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest.Add_CheckResultWithExpected_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_IMatrixFromMonoidExtensionsTest" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest">
      <topicdata name="IMatrixFromMonoidExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest" />
      <apidata name="IMatrixFromMonoidExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest.Add_CheckResultWithExpected_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_IMatrixFromMonoidExtensionsTest" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IMatrixFromMonoidExtensionsTest__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest.Add_CheckResultWithExpected_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})">
      <topicdata group="api" />
      <apidata name="Add_CheckResultWithExpected_EqualsExpected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest.Add_CheckResultWithExpected_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hack1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest.Add_CheckResultWithExpected_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
        </parameter>
        <parameter name="hack2">
          <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest.Add_CheckResultWithExpected_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
        </parameter>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest.Add_CheckResultWithExpected_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest.Add_CheckResultWithExpected_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="underlyingList">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest.Add_CheckResultWithExpected_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixFromMonoidExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IMatrixFromMonoidExtensionsTest_Add_CheckResultWithExpected_EqualsExpected__2" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.IMatrixFromRingExtensionsTest">
      <topicdata group="api" />
      <apidata name="IMatrixFromRingExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IMatrixFromRingExtensionsTest.#ctor" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_IMatrixFromRingExtensionsTest" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.IMatrixFromRingExtensionsTest">
      <topicdata name="IMatrixFromRingExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.IMatrixFromRingExtensionsTest" />
      <apidata name="IMatrixFromRingExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixFromRingExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_IMatrixFromRingExtensionsTest" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IMatrixFromRingExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixFromRingExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IMatrixFromRingExtensionsTest__ctor" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest">
      <topicdata group="api" />
      <apidata name="IMatrixSquaredExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.GausJordanAlgorithm_Run_IsNotNull``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.Trace_CalculatrTrace_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_IMatrixSquaredExtensionsTest" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest">
      <topicdata name="IMatrixSquaredExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest" />
      <apidata name="IMatrixSquaredExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.GausJordanAlgorithm_Run_IsNotNull``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
        <element api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.Trace_CalculatrTrace_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_IMatrixSquaredExtensionsTest" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IMatrixSquaredExtensionsTest__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.GausJordanAlgorithm_Run_IsNotNull``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})">
      <topicdata group="api" />
      <apidata name="GausJordanAlgorithm_Run_IsNotNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IComparable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TField">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IField`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.GausJordanAlgorithm_Run_IsNotNull``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hack1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.GausJordanAlgorithm_Run_IsNotNull``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
        </parameter>
        <parameter name="hack2">
          <template name="TField" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.GausJordanAlgorithm_Run_IsNotNull``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
        </parameter>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.GausJordanAlgorithm_Run_IsNotNull``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
              <template name="TField" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.GausJordanAlgorithm_Run_IsNotNull``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IMatrixSquaredExtensionsTest_GausJordanAlgorithm_Run_IsNotNull__2" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.Trace_CalculatrTrace_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})">
      <topicdata group="api" />
      <apidata name="Trace_CalculatrTrace_EqualsExpected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.Trace_CalculatrTrace_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hack1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.Trace_CalculatrTrace_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
        </parameter>
        <parameter name="hack2">
          <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.Trace_CalculatrTrace_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
        </parameter>
        <parameter name="matrix">
          <type api="T:Math.LinearAlgebra.IMatrix`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.Trace_CalculatrTrace_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.Trace_CalculatrTrace_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="underlyingList">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest.Trace_CalculatrTrace_EqualsExpected``2(``0,``1,Math.LinearAlgebra.IMatrix{``0,``1},System.Collections.Generic.List{System.Collections.Generic.List{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IMatrixSquaredExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IMatrixSquaredExtensionsTest_Trace_CalculatrTrace_EqualsExpected__2" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest">
      <topicdata group="api" />
      <apidata name="IPolynomialExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest.Copy_IsNewInstance_PolynomialsAreEqual``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_IPolynomialExtensionsTest" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest">
      <topicdata name="IPolynomialExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest" />
      <apidata name="IPolynomialExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest.Copy_IsNewInstance_PolynomialsAreEqual``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_IPolynomialExtensionsTest" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IPolynomialExtensionsTest__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest.Copy_IsNewInstance_PolynomialsAreEqual``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})">
      <topicdata group="api" />
      <apidata name="Copy_IsNewInstance_PolynomialsAreEqual" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest.Copy_IsNewInstance_PolynomialsAreEqual``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hackForGenericParameter1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest.Copy_IsNewInstance_PolynomialsAreEqual``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
        </parameter>
        <parameter name="hackForGenericParameter2">
          <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest.Copy_IsNewInstance_PolynomialsAreEqual``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
        </parameter>
        <parameter name="polynomial">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest.Copy_IsNewInstance_PolynomialsAreEqual``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
              <template name="TStruct" index="1" api="M:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest.Copy_IsNewInstance_PolynomialsAreEqual``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IPolynomialExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IPolynomialExtensionsTest_Copy_IsNewInstance_PolynomialsAreEqual__2" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest">
      <topicdata group="api" />
      <apidata name="IPolynomialFromGroupExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_IPolynomialFromGroupExtensionsTest" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest">
      <topicdata name="IPolynomialFromGroupExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest" />
      <apidata name="IPolynomialFromGroupExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_IPolynomialFromGroupExtensionsTest" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IPolynomialFromGroupExtensionsTest__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})">
      <topicdata group="api" />
      <apidata name="InverseElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TGroup">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IGroup`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hackForGenericParameter">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
        </parameter>
        <parameter name="underlyingGroup">
          <template name="TGroup" index="1" api="M:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
        </parameter>
        <parameter name="poly">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
              <template name="TGroup" index="1" api="M:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest.InverseElement``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IPolynomialFromGroupExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IPolynomialFromGroupExtensionsTest_InverseElement__2" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest">
      <topicdata group="api" />
      <apidata name="IPolynomialFromMonoidExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_IPolynomialFromMonoidExtensionsTest" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest">
      <topicdata name="IPolynomialFromMonoidExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest" />
      <apidata name="IPolynomialFromMonoidExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_IPolynomialFromMonoidExtensionsTest" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IPolynomialFromMonoidExtensionsTest__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})">
      <topicdata group="api" />
      <apidata name="Add_AddTwoTuples_EqualsExpectedTuple" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMonoid">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IMonoid`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hackForGenericParameter1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
        </parameter>
        <parameter name="hackForGenericParameter2">
          <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
        </parameter>
        <parameter name="polynomial1">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="polynomial2">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="expectedPolynomial">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
              <template name="TMonoid" index="1" api="M:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest.Add_AddTwoTuples_EqualsExpectedTuple``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IPolynomialFromMonoidExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IPolynomialFromMonoidExtensionsTest_Add_AddTwoTuples_EqualsExpectedTuple__2" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest">
      <topicdata group="api" />
      <apidata name="IPolynomialFromRingExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest.Multiply_MultiplyTwoPolynomials_DegreeEqualsxpecedDegree``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_IPolynomialFromRingExtensionsTest" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest">
      <topicdata name="IPolynomialFromRingExtensionsTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest" />
      <apidata name="IPolynomialFromRingExtensionsTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest.Multiply_MultiplyTwoPolynomials_DegreeEqualsxpecedDegree``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_IPolynomialFromRingExtensionsTest" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IPolynomialFromRingExtensionsTest__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest.Multiply_MultiplyTwoPolynomials_DegreeEqualsxpecedDegree``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})">
      <topicdata group="api" />
      <apidata name="Multiply_MultiplyTwoPolynomials_DegreeEqualsxpecedDegree" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TRing">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IRing`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest.Multiply_MultiplyTwoPolynomials_DegreeEqualsxpecedDegree``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="hackForGenericParameter1">
          <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest.Multiply_MultiplyTwoPolynomials_DegreeEqualsxpecedDegree``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
        </parameter>
        <parameter name="hackForGenericParameter2">
          <template name="TRing" index="1" api="M:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest.Multiply_MultiplyTwoPolynomials_DegreeEqualsxpecedDegree``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
        </parameter>
        <parameter name="tuple1">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest.Multiply_MultiplyTwoPolynomials_DegreeEqualsxpecedDegree``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest.Multiply_MultiplyTwoPolynomials_DegreeEqualsxpecedDegree``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tuple2">
          <type api="T:Math.LinearAlgebra.IPolynomial`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest.Multiply_MultiplyTwoPolynomials_DegreeEqualsxpecedDegree``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
              <template name="TRing" index="1" api="M:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest.Multiply_MultiplyTwoPolynomials_DegreeEqualsxpecedDegree``2(``0,``1,Math.LinearAlgebra.IPolynomial{``0,``1},Math.LinearAlgebra.IPolynomial{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.IPolynomialFromRingExtensionsTest" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_IPolynomialFromRingExtensionsTest_Multiply_MultiplyTwoPolynomials_DegreeEqualsxpecedDegree__2" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.MatrixTest`2">
      <topicdata group="api" />
      <apidata name="MatrixTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Tests.MatrixTest`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.MatrixTest`2.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.MatrixTest`2.Indexer_SettingToHighIndex_ThrowsPolynomialException(System.UInt32,System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Tests.MatrixTest`2.Initialize_CheckColumnDimension_EqualsGivenColumnDimension(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Tests.MatrixTest`2.Initialize_CheckRowDimension_EqualsGivenRowDimension(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Tests.MatrixTest`2.InitializeSquared_CheckDimension_EqualsGivenDimension(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_MatrixTest_2" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.MatrixTest`2">
      <topicdata name="MatrixTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.MatrixTest`2" />
      <apidata name="MatrixTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Tests.MatrixTest`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.MatrixTest`2.Indexer_SettingToHighIndex_ThrowsPolynomialException(System.UInt32,System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Tests.MatrixTest`2.Initialize_CheckColumnDimension_EqualsGivenColumnDimension(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Tests.MatrixTest`2.Initialize_CheckRowDimension_EqualsGivenRowDimension(System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Tests.MatrixTest`2.InitializeSquared_CheckDimension_EqualsGivenDimension(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.MatrixTest`2" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_MatrixTest_2" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.MatrixTest`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.MatrixTest`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_MatrixTest_2__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.MatrixTest`2.Indexer_SettingToHighIndex_ThrowsPolynomialException(System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="Indexer_SettingToHighIndex_ThrowsPolynomialException" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="rowIndex">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.MatrixTest`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_MatrixTest_2_Indexer_SettingToHighIndex_ThrowsPolynomialException" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.MatrixTest`2.Initialize_CheckColumnDimension_EqualsGivenColumnDimension(System.UInt32)">
      <topicdata group="api" />
      <apidata name="Initialize_CheckColumnDimension_EqualsGivenColumnDimension" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnDimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.MatrixTest`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_MatrixTest_2_Initialize_CheckColumnDimension_EqualsGivenColumnDimension" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.MatrixTest`2.Initialize_CheckRowDimension_EqualsGivenRowDimension(System.UInt32)">
      <topicdata group="api" />
      <apidata name="Initialize_CheckRowDimension_EqualsGivenRowDimension" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rowDimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.MatrixTest`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_MatrixTest_2_Initialize_CheckRowDimension_EqualsGivenRowDimension" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.MatrixTest`2.InitializeSquared_CheckDimension_EqualsGivenDimension(System.UInt32)">
      <topicdata group="api" />
      <apidata name="InitializeSquared_CheckDimension_EqualsGivenDimension" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dimension">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.MatrixTest`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_MatrixTest_2_InitializeSquared_CheckDimension_EqualsGivenDimension" />
    </api>
    <api id="T:Math.LinearAlgebra.Tests.PolynomialTest`2">
      <topicdata group="api" />
      <apidata name="PolynomialTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Tests.PolynomialTest`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.PolynomialTest`2.#ctor" />
        <element api="M:Math.LinearAlgebra.Tests.PolynomialTest`2.Indexer_SettingToHighIndex_ThrowsPolynomialException(System.UInt32,System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Tests.PolynomialTest`2.Initialize_CheckDegree_EqualsGivenDegree(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
      </containers>
      <file name="T_Math_LinearAlgebra_Tests_PolynomialTest_2" />
    </api>
    <api id="Methods.T:Math.LinearAlgebra.Tests.PolynomialTest`2">
      <topicdata name="PolynomialTest" group="list" subgroup="Methods" typeTopicId="T:Math.LinearAlgebra.Tests.PolynomialTest`2" />
      <apidata name="PolynomialTest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
        <template name="TStruct">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Math.Base.IStructure`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Math.LinearAlgebra.Tests.PolynomialTest`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Math.LinearAlgebra.Tests.PolynomialTest`2.Indexer_SettingToHighIndex_ThrowsPolynomialException(System.UInt32,System.UInt32)" />
        <element api="M:Math.LinearAlgebra.Tests.PolynomialTest`2.Initialize_CheckDegree_EqualsGivenDegree(System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.PolynomialTest`2" />
      </containers>
      <file name="Methods_T_Math_LinearAlgebra_Tests_PolynomialTest_2" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.PolynomialTest`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.PolynomialTest`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_PolynomialTest_2__ctor" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.PolynomialTest`2.Indexer_SettingToHighIndex_ThrowsPolynomialException(System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="Indexer_SettingToHighIndex_ThrowsPolynomialException" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="degree">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="index">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.PolynomialTest`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_PolynomialTest_2_Indexer_SettingToHighIndex_ThrowsPolynomialException" />
    </api>
    <api id="M:Math.LinearAlgebra.Tests.PolynomialTest`2.Initialize_CheckDegree_EqualsGivenDegree(System.UInt32)">
      <topicdata group="api" />
      <apidata name="Initialize_CheckDegree_EqualsGivenDegree" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="givenDegree">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Math.LinearAlgebra.Tests" module="Math.LinearAlgebra.Tests" kind="DynamicallyLinkedLibrary">
          <assemblydata version="0.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Math.LinearAlgebra.Tests" />
        <type api="T:Math.LinearAlgebra.Tests.PolynomialTest`2" ref="true" />
      </containers>
      <file name="M_Math_LinearAlgebra_Tests_PolynomialTest_2_Initialize_CheckDegree_EqualsGivenDegree" />
    </api>
    <api id="R:Project_Documentation">
      <topicdata group="root" />
      <elements>
        <element api="N:GenericMath.Console" />
        <element api="N:GenericMath.Parser.Tests" />
        <element api="N:GenricMath.Parser" />
        <element api="N:Math.Analysis.Tests" />
        <element api="N:Math.Base" />
        <element api="N:Math.Base.Tests" />
        <element api="N:Math.LinearAlgebra" />
        <element api="N:Math.LinearAlgebra.Tests" />
      </elements>
      <file name="R_Project_Documentation" />
    </api>
  </apis>
</reflection>
<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IntegerExtension.ChineseRestTerm Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ChineseRestTerm method" /><meta name="System.Keywords" content="IntegerExtension.ChineseRestTerm method" /><meta name="Microsoft.Help.F1" content="Math.Base.IntegerExtension.ChineseRestTerm" /><meta name="Microsoft.Help.Id" content="M:Math.Base.IntegerExtension.ChineseRestTerm(System.Int32[],System.Int32[])" /><meta name="Description" content="Calculates the chinese rest term algorithm. Calculates a solution for the equation result = x[0] mod moduli[0] result = x[1] mod moduli[1] ..... result = x[n] mod moduli[n] It needs to be true that gcd(moduli) = 1" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Math.Base" /><meta name="file" content="M_Math_Base_IntegerExtension_ChineseRestTerm" /><meta name="guid" content="M_Math_Base_IntegerExtension_ChineseRestTerm" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">A Sandcastle Documented Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="R_Project_Documentation.htm" title="A Sandcastle Documented Class Library" tocid="roottoc">A Sandcastle Documented Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="R_Project_Documentation.htm" title="GenericMath" tocid="R_Project_Documentation">GenericMath</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="N_Math_Base.htm" title="Math.Base" tocid="N_Math_Base">Math.Base</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="T_Math_Base_IntegerExtension.htm" title="IntegerExtension Class" tocid="T_Math_Base_IntegerExtension">IntegerExtension Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="Methods_T_Math_Base_IntegerExtension.htm" title="IntegerExtension Methods" tocid="Methods_T_Math_Base_IntegerExtension">IntegerExtension Methods</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Math_Base_IntegerExtension_ChineseRestTerm.htm" title="ChineseRestTerm Method " tocid="M_Math_Base_IntegerExtension_ChineseRestTerm">ChineseRestTerm Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Math_Base_IntegerExtension_EuclidianAlgorithm.htm" title="EuclidianAlgorithm Method " tocid="M_Math_Base_IntegerExtension_EuclidianAlgorithm">EuclidianAlgorithm Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Math_Base_IntegerExtension_ExtendedEuclidianAlgorithm.htm" title="ExtendedEuclidianAlgorithm Method " tocid="M_Math_Base_IntegerExtension_ExtendedEuclidianAlgorithm">ExtendedEuclidianAlgorithm Method </a></div></div></div><div id="TocResize" class="tocResize" onmousedown="OnMouseDown(event);"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">IntegerExtension<span id="LSTEFBC280B_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEFBC280B_0?cpp=::|nu=.");</script>ChineseRestTerm Method </td></tr></table><span class="introStyle"></span><div class="summary">
            Calculates the chinese rest term algorithm.
            Calculates a solution for the equation 
            result = x[0] mod moduli[0]
            result = x[1] mod moduli[1]
            .....
            result = x[n] mod moduli[n]
            It needs to be true that gcd(moduli) = 1
            </div><p> </p><strong>Namespace:</strong> <a href="N_Math_Base.htm">Math.Base</a><br /><strong>Assembly:</strong> Math.Base (in Math.Base.dll) Version: 1.0.5398.20652<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">int</span> <span class="identifier">ChineseRestTerm</span>(
	<span class="keyword">this</span> <span class="identifier">int</span>[] <span class="parameter">moduli</span>,
	<span class="identifier">int</span>[] <span class="parameter">x</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">ExtensionAttribute</span>&gt; 
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">ChineseRestTerm</span> ( 
	<span class="parameter">moduli</span> <span class="keyword">As</span> <span class="identifier">Integer</span>(),
	<span class="parameter">x</span> <span class="keyword">As</span> <span class="identifier">Integer</span>()
) <span class="keyword">As</span> <span class="identifier">Integer</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">static</span> <span class="identifier">int</span> <span class="identifier">ChineseRestTerm</span>(
	<span class="keyword">array</span>&lt;<span class="identifier">int</span>&gt;^ <span class="parameter">moduli</span>, 
	<span class="keyword">array</span>&lt;<span class="identifier">int</span>&gt;^ <span class="parameter">x</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">ChineseRestTerm</span> : 
        <span class="parameter">moduli</span> : <span class="identifier">int</span>[] * 
        <span class="parameter">x</span> : <span class="identifier">int</span>[] <span class="keyword">-&gt;</span> <span class="identifier">int</span> 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">moduli</span></dt><dd>Type: <span id="LSTEFBC280B_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEFBC280B_1?cpp=array&lt;");</script><a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LSTEFBC280B_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEFBC280B_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><span id="LSTEFBC280B_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEFBC280B_3?cpp=&gt;|vb=()|nu=[]");</script><br />The moduli.</dd><dt><span class="parameter">x</span></dt><dd>Type: <span id="LSTEFBC280B_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEFBC280B_4?cpp=array&lt;");</script><a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LSTEFBC280B_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEFBC280B_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><span id="LSTEFBC280B_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEFBC280B_6?cpp=&gt;|vb=()|nu=[]");</script><br />The parameters.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">Int32</a><br />The rest term.<h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">Int32</a><br />The solution for the equation posted above.<h4 class="subHeading">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type . When you use instance method syntax to call this method, omit the first parameter. For more information, see <a href="http://msdn.microsoft.com/en-us/library/bb384936.aspx" target="_blank">Extension Methods (Visual Basic)</a> or <a href="http://msdn.microsoft.com/en-us/library/bb383977.aspx" target="_blank">Extension Methods (C# Programming Guide)</a>.</div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Math_Base_IntegerExtension.htm">IntegerExtension Class</a></div><div class="seeAlsoStyle"><a href="N_Math_Base.htm">Math.Base Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>